<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DXSharp</name>
    </assembly>
    <members>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT">
            <summary>Defines the dimensions of a viewport.</summary>
            <remarks>
            <para>In all cases, <b>Width</b> and <b>Height</b> must be &gt;= 0 and <b>TopLeftX</b> + <b>Width</b> and <b>TopLeftY</b> + <b>Height</b> must be &lt;= D3D11_VIEWPORT_BOUNDS_MAX. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_viewport#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.TopLeftX">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> X position of the left hand side of the viewport. Ranges between D3D11_VIEWPORT_BOUNDS_MIN and D3D11_VIEWPORT_BOUNDS_MAX.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.TopLeftY">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Y position of the top of the viewport. Ranges between D3D11_VIEWPORT_BOUNDS_MIN and D3D11_VIEWPORT_BOUNDS_MAX.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.Width">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Width of the viewport.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.Height">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Height of the viewport.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.MinDepth">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Minimum depth of the viewport. Ranges between 0 and 1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT.MaxDepth">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Maximum depth of the viewport. Ranges between 0 and 1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_viewport#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG">
            <summary>Identifies how to bind a resource to the pipeline.</summary>
            <remarks>
            <para>In general, binding flags can be combined using a logical OR (except the constant-buffer flag); however, you should use a single flag to allow the device to optimize the resource usage. This enumeration is used by a: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_bind_flag#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_VERTEX_BUFFER">
            <summary>Bind a buffer as a vertex buffer to the input-assembler stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_INDEX_BUFFER">
            <summary>Bind a buffer as an index buffer to the input-assembler stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_CONSTANT_BUFFER">
            <summary>Bind a buffer as a constant buffer to a shader stage; this flag may NOT be combined with any other bind flag.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_SHADER_RESOURCE">
            <summary>
            <para>Bind a buffer or texture to a shader stage; this flag cannot be used with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP_WRITE_NO_OVERWRITE</a> flag. <div class="alert"><b>Note</b>  The Direct3D 11.1 runtime, which is available starting with Windows 8, enables  mapping dynamic constant buffers and shader resource views (SRVs) of dynamic buffers with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP_WRITE_NO_OVERWRITE</a>.  The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers. To determine if a Direct3D device supports these features, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport">ID3D11Device::CheckFeatureSupport</a> with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE_D3D11_OPTIONS</a>. <b>CheckFeatureSupport</b> fills members of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options">D3D11_FEATURE_DATA_D3D11_OPTIONS</a> structure with the device's features. The relevant members here are <b>MapNoOverwriteOnDynamicConstantBuffer</b> and <b>MapNoOverwriteOnDynamicBufferSRV</b>.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_bind_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_STREAM_OUTPUT">
            <summary>Bind an output buffer for the stream-output stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_RENDER_TARGET">
            <summary>Bind a texture as a render target for the output-merger stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_DEPTH_STENCIL">
            <summary>Bind a texture as a depth-stencil target for the output-merger stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_UNORDERED_ACCESS">
            <summary>Bind an <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">unordered access</a> resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_DECODER">
            <summary>
            <para>Set this flag to indicate that a  <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-textures-intro">2D texture</a> is used to receive output from the decoder API. The common way to create resources for a decoder output is by calling the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_bind_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BIND_FLAG.D3D11_BIND_VIDEO_ENCODER">
            <summary>
            <para>Set this flag to indicate that a  <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-textures-intro">2D texture</a> is used to receive input from the video encoder API. The common way to create resources for a video encoder is by calling the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_bind_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND">
            <summary>Blend factors, which modulate values for the pixel shader and render target.</summary>
            <remarks>
            <para>Blend operations are specified in a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">blend description</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_blend#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_ZERO">
            <summary>The blend factor is (0, 0, 0, 0). No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_ONE">
            <summary>The blend factor is (1, 1, 1, 1). No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_SRC_COLOR">
            <summary>The blend factor is (Rₛ, Gₛ, Bₛ, Aₛ), that is color data (RGB) from a pixel shader. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_SRC_COLOR">
            <summary>The blend factor is (1 - Rₛ, 1 - Gₛ, 1 - Bₛ, 1 - Aₛ), that is color data (RGB) from a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_SRC_ALPHA">
            <summary>The blend factor is (Aₛ, Aₛ, Aₛ, Aₛ), that is alpha data (A) from a pixel shader. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_SRC_ALPHA">
            <summary>The blend factor is ( 1 - Aₛ, 1 - Aₛ, 1 - Aₛ, 1 - Aₛ), that is alpha data (A) from a pixel shader. The pre-blend operation inverts the data, generating 1 - A.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_DEST_ALPHA">
            <summary>The blend factor is (A<sub>d</sub> A<sub>d</sub> A<sub>d</sub> A<sub>d</sub>), that is alpha data from a render target. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_DEST_ALPHA">
            <summary>The blend factor is (1 - A<sub>d</sub> 1 - A<sub>d</sub> 1 - A<sub>d</sub> 1 - A<sub>d</sub>), that is alpha data from a render target. The pre-blend operation inverts the data, generating 1 - A.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_DEST_COLOR">
            <summary>The blend factor is (R<sub>d</sub>, G<sub>d</sub>, B<sub>d</sub>, A<sub>d</sub>), that is color data from a render target. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_DEST_COLOR">
            <summary>The blend factor is (1 - R<sub>d</sub>, 1 - G<sub>d</sub>, 1 - B<sub>d</sub>, 1 - A<sub>d</sub>), that is color data from a render target. The pre-blend operation inverts the data, generating 1 - RGB.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_SRC_ALPHA_SAT">
            <summary>
            <para>The blend factor is (f, f, f, 1); where f = min(Aₛ, 1 - A<sub>d</sub>). The pre-blend operation clamps the data to 1 or less.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_blend#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_BLEND_FACTOR">
            <summary>The blend factor is the blend factor set with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate">ID3D11DeviceContext::OMSetBlendState</a>. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_BLEND_FACTOR">
            <summary>The blend factor is the blend factor set with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate">ID3D11DeviceContext::OMSetBlendState</a>. The pre-blend operation inverts the blend factor, generating 1 - blend_factor.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_SRC1_COLOR">
            <summary>The blend factor is data sources both as color data output by a pixel shader. There is no pre-blend operation. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_SRC1_COLOR">
            <summary>The blend factor is data sources both as color data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_SRC1_ALPHA">
            <summary>The blend factor is data sources as alpha data output by a pixel shader. There is no pre-blend operation. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND.D3D11_BLEND_INV_SRC1_ALPHA">
            <summary>The blend factor is data sources as alpha data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - A. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC">
            <summary>Describes the blend state that you use in a call to ID3D11Device::CreateBlendState to create a blend-state object.</summary>
            <remarks>
            <para>Here are the default values for blend state. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_blend_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC.AlphaToCoverageEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Specifies whether to use alpha-to-coverage as a multisampling technique when setting a pixel to a render target. For more info about using alpha-to-coverage, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-blend-state">Alpha-To-Coverage</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC.IndependentBlendEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Specifies whether to enable independent blending in simultaneous render targets.  Set to <b>TRUE</b> to enable independent blending. If set to <b>FALSE</b>, only the RenderTarget[0] members are used; RenderTarget[1..7] are ignored.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC.RenderTarget">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc">D3D11_RENDER_TARGET_BLEND_DESC</a>[8]</b> An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_blend_desc">D3D11_RENDER_TARGET_BLEND_DESC</a> structures that describe the blend states for render targets; these correspond to the eight render targets that can be bound to the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> at one time.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC.__winmdroot_Graphics_Direct3D11_D3D11_RENDER_TARGET_BLEND_DESC_8.Length">
            <summary>Always <c>8</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC.__winmdroot_Graphics_Direct3D11_D3D11_RENDER_TARGET_BLEND_DESC_8.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC.__winmdroot_Graphics_Direct3D11_D3D11_RENDER_TARGET_BLEND_DESC_8.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP">
            <summary>RGB or alpha blending operation.</summary>
            <remarks>
            <para>The runtime implements RGB blending and alpha blending separately. Therefore, blend state requires separate blend operations for RGB data and alpha data. These blend operations are specified in a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">blend description</a>. The two sources —source 1 and source 2— are shown in the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">blending block diagram</a>. Blend state is used by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> to determine how to blend together two RGB pixel values and two alpha values. The two RGB pixel values and two alpha values are the RGB pixel value and alpha value that the pixel shader outputs and the RGB pixel value and alpha value already in the output render target. The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> controls the data source that the blending stage uses to modulate values for the pixel shader, render target, or both. The <b>blend operation</b> controls how the blending stage mathematically combines these modulated values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_blend_op#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP.D3D11_BLEND_OP_ADD">
            <summary>Add source 1 and source 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP.D3D11_BLEND_OP_SUBTRACT">
            <summary>Subtract source 1 from source 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP.D3D11_BLEND_OP_REV_SUBTRACT">
            <summary>Subtract source 2 from source 1.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP.D3D11_BLEND_OP_MIN">
            <summary>Find the minimum of source 1 and source 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_OP.D3D11_BLEND_OP_MAX">
            <summary>Find the maximum of source 1 and source 2.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BOX">
            <summary>Defines a 3D box.</summary>
            <remarks>
            <para>The following diagram shows a 3D box, where the origin is the left, front, top corner. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_box#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.left">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The x position of the left hand side of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.top">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The y position of the top of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.front">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The z position of the front of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.right">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The x position of the right hand side of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.bottom">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The y position of the bottom of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BOX.back">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The z position of the back of the box.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_box#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFEREX_SRV">
            <summary>Describes the elements in a raw buffer resource to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a> to create a raw view of a buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_bufferex_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFEREX_SRV.FirstElement">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first element to be accessed by the view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_bufferex_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFEREX_SRV.NumElements">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of elements in the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_bufferex_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFEREX_SRV.Flags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bufferex_srv_flag">D3D11_BUFFEREX_SRV_FLAG</a>-typed value that identifies view options for the buffer. Currently, the only option is to identify a raw view of the buffer. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_bufferex_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC">
            <summary>Describes a buffer resource.</summary>
            <remarks>
            <para>This structure is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createbuffer">ID3D11Device::CreateBuffer</a> to create buffer resources. In addition to this structure, you can also use the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-cd3d11_buffer_desc">CD3D11_BUFFER_DESC</a> derived structure, which is defined  in D3D11.h and behaves like an inherited class, to help create a buffer description. If the bind flag is <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_CONSTANT_BUFFER</a>, you must set the <b>ByteWidth</b> value in multiples of 16, and less than or equal to <b>D3D11_REQ_CONSTANT_BUFFER_ELEMENT_COUNT</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC.ByteWidth">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Size of the buffer in bytes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC.Usage">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a></b> Identify how the buffer is expected to be read from and written to. Frequency of update is a key factor. The most common value is typically D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC.BindFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Identify how the buffer will be bound to the pipeline. Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>) can be combined with a logical OR.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC.CPUAccessFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> CPU access flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_FLAG</a>) or 0 if no CPU access is necessary. Flags can be combined with a logical OR.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC.MiscFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Miscellaneous flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a>) or 0 if unused. Flags can be combined with a logical OR.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC.StructureByteStride">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of each element in the buffer structure (in bytes) when the buffer represents a structured buffer. For more info about structured buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">Structured Buffer</a>. The size value in <b>StructureByteStride</b> must match the size of the format that you use for views of the buffer. For example, if you use a shader resource view (SRV) to read a buffer in a pixel shader, the SRV format size must match the size value in <b>StructureByteStride</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_RTV">
            <summary>Specifies the elements in a buffer resource to use in a render-target view.</summary>
            <remarks>
            <para>A render-target view is a member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>). Create a render-target view by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrendertargetview">ID3D11Device::CreateRenderTargetView</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_SRV">
            <summary>Specifies the elements in a buffer resource to use in a shader-resource view.</summary>
            <remarks>
            <para>The <b>D3D11_BUFFER_SRV</b> structure is a member of the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a> structure, which represents a shader-resource view description. You can create a shader-resource view by calling the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_UAV">
            <summary>Describes the elements in a buffer to use in a unordered-access view.</summary>
            <remarks>
            <para>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_UAV.FirstElement">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The zero-based index of the first element to be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_UAV.NumElements">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of elements in the resource. For structured buffers, this is the number of structures in the buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_UAV.Flags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> View options for the resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_buffer_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC">
            <summary>Describes an HLSL class instance.</summary>
            <remarks>
            <para>The D3D11_CLASS_INSTANCE_DESC structure is returned by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11classinstance-getdesc">ID3D11ClassInstance::GetDesc</a> method. The members of this structure except <b>InstanceIndex</b> are valid (non default values) if they describe a class instance aquired using  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11classlinkage-createclassinstance">ID3D11ClassLinkage::CreateClassInstance</a>.  The <b>InstanceIndex</b> member is only valid when the class instance is aquired using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11classlinkage-getclassinstance">ID3D11ClassLinkage::GetClassInstance</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_class_instance_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.InstanceId">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The instance ID of an HLSL class; the default value is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.InstanceIndex">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The instance index of an HLSL class; the default value is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.TypeId">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The type ID of an HLSL class; the default value is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.ConstantBuffer">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Describes the constant buffer associated with an HLSL class; the default value is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.BaseConstantBufferOffset">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The base constant buffer offset associated with an HLSL class; the default value is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.BaseTexture">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The base texture associated with an HLSL class; the default value is 127.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.BaseSampler">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The base sampler associated with an HLSL class; the default value is 15.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC.Created">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> True if the class was created; the default value is false.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_class_instance_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC">
            <summary>Comparison options.</summary>
            <remarks>
            <para>A comparison option determines whether how the runtime compares source (new) data against destination (existing) data before storing the new data. The comparison option is declared in a description before an object is created. The API allows you to set a comparison option for a depth-stencil buffer (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>), depth-stencil operations (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a>), or sampler state (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_comparison_func#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_NEVER">
            <summary>Never pass the comparison.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_LESS">
            <summary>If the source data is less than the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_EQUAL">
            <summary>If the source data is equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_LESS_EQUAL">
            <summary>If the source data is less than or equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_GREATER">
            <summary>If the source data is greater than the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_NOT_EQUAL">
            <summary>If the source data is not equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_GREATER_EQUAL">
            <summary>If the source data is greater than or equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COMPARISON_FUNC.D3D11_COMPARISON_ALWAYS">
            <summary>Always pass the comparison.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER">
            <summary>Options for performance counters.</summary>
            <remarks>
            <para>Independent hardware vendors may define their own set of performance counters for their devices, by giving the enumeration value a number that is greater than the value for D3D11_COUNTER_DEVICE_DEPENDENT_0. This enumeration is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_info">D3D11_COUNTER_INFO</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_counter#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER.D3D11_COUNTER_DEVICE_DEPENDENT_0">
            <summary>Define a performance counter that is dependent on the hardware device.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC">
            <summary>Describes a counter.</summary>
            <remarks>
            <para>This structure is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11counter-getdesc">ID3D11Counter::GetDesc</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkcounter">ID3D11Device::CheckCounter</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createcounter">ID3D11Device::CreateCounter</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_counter_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC.Counter">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter">D3D11_COUNTER</a></b> Type of counter (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter">D3D11_COUNTER</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_counter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC.MiscFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Reserved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_counter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO">
            <summary>Information about the video card's performance counter capabilities.</summary>
            <remarks>
            <para>This structure is returned by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkcounterinfo">ID3D11Device::CheckCounterInfo</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_counter_info#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO.LastDeviceDependentCounter">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter">D3D11_COUNTER</a></b> Largest device-dependent counter ID that the device supports. If none are supported, this value will be 0. Otherwise it will be greater than or equal to D3D11_COUNTER_DEVICE_DEPENDENT_0. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter">D3D11_COUNTER</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_counter_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO.NumSimultaneousCounters">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of counters that can be simultaneously supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_counter_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO.NumDetectableParallelUnits">
            <summary>
            <para>Type: <b>UINT8</b> Number of detectable parallel units that the counter is able to discern. Values are 1 ~ 4. Use NumDetectableParallelUnits to interpret the values of the VERTEX_PROCESSING, GEOMETRY_PROCESSING, PIXEL_PROCESSING, and OTHER_GPU_PROCESSING counters.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_counter_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE">
            <summary>Data type of a performance counter.</summary>
            <remarks>
            <para>These flags are an output parameter in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkcounter">ID3D11Device::CheckCounter</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_counter_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE.D3D11_COUNTER_TYPE_FLOAT32">
            <summary>32-bit floating point.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE.D3D11_COUNTER_TYPE_UINT16">
            <summary>16-bit unsigned integer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE.D3D11_COUNTER_TYPE_UINT32">
            <summary>32-bit unsigned integer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE.D3D11_COUNTER_TYPE_UINT64">
            <summary>64-bit unsigned integer.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_CPU_ACCESS_FLAG">
            <summary>Specifies the types of CPU access allowed for a resource.</summary>
            <remarks>
            <para>This enumeration is used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>. Applications may combine one or more of these flags with a logical OR. When possible, create resources with no CPU access flags, as this enables better resource optimization. The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a> cannot be used when creating resources with <b>D3D11_CPU_ACCESS</b> flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_cpu_access_flag#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CPU_ACCESS_FLAG.D3D11_CPU_ACCESS_WRITE">
            <summary>The resource is to be mappable so that the CPU can change its contents. Resources created with this flag cannot be set as outputs of the pipeline and must be created with either dynamic or staging usage (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CPU_ACCESS_FLAG.D3D11_CPU_ACCESS_READ">
            <summary>The resource is to be mappable so that the CPU can read its contents. Resources created with this flag cannot be set as either inputs or outputs to the pipeline and must be created with staging usage (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>).</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG">
            <summary>Describes parameters that are used to create a device.</summary>
            <remarks>
            <para>Device creation flags are used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdeviceandswapchain">D3D11CreateDeviceAndSwapChain</a>. An application might dynamically create (and destroy) threads to improve performance especially on a machine with multiple CPU cores. There may be cases, however, when an application needs to prevent extra threads from being created. This can happen when you want to simplify debugging, profile code or develop a tool for instance. For these cases, use <b>D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS</b> to request that the runtime and video driver not create any additional threads that might interfere with the application.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_create_device_flag#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG.D3D11_CREATE_DEVICE_SINGLETHREADED">
            <summary>
            <para>Use this flag if your application will only call methods of Direct3D 11 interfaces from a single thread. By default, the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a> object is  <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-render-multi-thread-differences">thread-safe</a>. By using this flag, you can increase performance. However, if you use this flag and your application calls methods of Direct3D 11 interfaces from multiple threads, undefined behavior might result.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_create_device_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG.D3D11_CREATE_DEVICE_DEBUG">
            <summary>
            <para>Creates a device that supports the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a>. To use this flag, you must have D3D11*SDKLayers.dll installed; otherwise, device creation fails. To get D3D11_1SDKLayers.dll, install the SDK for Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_create_device_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG.D3D11_CREATE_DEVICE_SWITCH_TO_REF">
            <summary>
            <para><div class="alert"><b>Note</b>  This flag is not supported in Direct3D 11.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_create_device_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG.D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS">
            <summary>
            <para>Prevents multiple threads from being created. When this flag is used with a <a href="https://docs.microsoft.com/windows/desktop/direct3darticles/directx-warp">Windows Advanced Rasterization Platform (WARP)</a> device, no additional threads will be created by WARP and all rasterization will occur on the calling thread. This flag is not recommended for general use. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_create_device_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG.D3D11_CREATE_DEVICE_BGRA_SUPPORT">
            <summary>
            <para>Creates a device that supports BGRA formats (<a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_B8G8R8A8_UNORM</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_B8G8R8A8_UNORM_SRGB</a>). All 10level9 and higher hardware with WDDM 1.1+ drivers support BGRA formats. <div class="alert"><b>Note</b>  Required for Direct2D interoperability with Direct3D resources.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_create_device_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG.D3D11_CREATE_DEVICE_DEBUGGABLE">
            <summary>
            <para>Causes the device and driver to keep information that you can use for shader debugging.  The exact impact from this flag will vary from driver to driver. To use this flag, you must have D3D11_1SDKLayers.dll installed; otherwise, device creation fails. The created device supports the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a>. To get D3D11_1SDKLayers.dll, install the SDK for Windows 8. If you use this flag and the current driver does not support shader debugging, device creation fails. Shader debugging requires a driver that is implemented to the WDDM for Windows 8 (WDDM 1.2). <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_create_device_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG.D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY">
            <summary>
            <para>Causes the Direct3D runtime to ignore registry settings that turn on the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a>. You can turn on the debug layer by using the <a href="https://docs.microsoft.com/previous-versions/bb219725(v=vs.85)">DirectX Control Panel</a> that was included as part of the DirectX SDK. We shipped the last version of the DirectX SDK in June 2010; you can download it from the <a href="https://www.microsoft.com/download/en/details.aspx?id=6812">Microsoft Download Center</a>. You can set this flag in your app, typically in release builds only, to prevent end users from using the <a href="https://docs.microsoft.com/previous-versions/bb219725(v=vs.85)">DirectX Control Panel</a> to monitor how the app uses Direct3D. <div class="alert"><b>Note</b>  You can also set this flag in your app to prevent Direct3D debugging tools, such as Visual Studio Ultimate 2012, from hooking your app.</div> <div> </div> <b>Windows 8.1:  </b>This flag doesn't prevent Visual Studio 2013 and later running on Windows 8.1 and later from hooking your app; instead use <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/nf-d3d11_2-id3d11devicecontext2-isannotationenabled">ID3D11DeviceContext2::IsAnnotationEnabled</a>. This flag still prevents Visual Studio 2013 and later running on Windows 8 and earlier from hooking your app. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_create_device_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG.D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT">
            <summary>
            <para>Use this flag if the device will produce GPU workloads that take more than two seconds to complete, and you want the operating system to allow them to successfully finish. If this flag is not set, the operating system performs <a href="https://docs.microsoft.com/windows-hardware/drivers/display/timeout-detection-and-recovery">timeout detection and recovery</a> when it detects a GPU packet that took more than two seconds to execute. If this flag is set, the operating system allows such a long running packet to execute without resetting the GPU. We recommend not to set this flag if your device needs to be highly responsive so that the operating system can detect and recover from GPU timeouts. We recommend to set this flag if your device needs to perform time consuming background tasks such as compute, image recognition, and video encoding to allow such tasks to successfully finish. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_create_device_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG.D3D11_CREATE_DEVICE_VIDEO_SUPPORT">
            <summary>
            <para>Forces the creation of the Direct3D device to fail if the display driver is not implemented to the WDDM for Windows 8 (WDDM 1.2). When the display driver is not implemented to WDDM 1.2, only a Direct3D device that is created with <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9.1, 9.2, or 9.3 supports video; therefore, if this flag is set, the runtime creates the Direct3D device only for feature level 9.1, 9.2, or 9.3. We recommend not to specify this flag for applications that want to favor Direct3D capability over video. If feature level 10 and higher is available, the runtime will use that feature level regardless of video support. If this flag is set, device creation on the Basic Render Device (BRD) will succeed regardless of the BRD's missing support for video decode. This is because the Media Foundation video stack operates in software mode on BRD. In this situation, if you force the video stack to create the Direct3D device twice (create the device once with this flag, next discover BRD, then again create the device without the flag), you actually degrade performance. If you attempt to create a Direct3D device with driver type <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_NULL</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_REFERENCE</a>, or <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_SOFTWARE</a>, device creation fails at any <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> because none of the associated drivers provide video capability. If you attempt to create a Direct3D device with driver type <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_WARP</a>, device creation succeeds to allow software fallback for video. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_create_device_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_CULL_MODE">
            <summary>Indicates triangles facing a particular direction are not drawn.</summary>
            <remarks>
            <para>This enumeration is part of a rasterizer-state object description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_cull_mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CULL_MODE.D3D11_CULL_NONE">
            <summary>Always draw all triangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CULL_MODE.D3D11_CULL_FRONT">
            <summary>Do not draw triangles that are front-facing.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_CULL_MODE.D3D11_CULL_BACK">
            <summary>Do not draw triangles that are back-facing.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCILOP_DESC">
            <summary>Stencil operations that can be performed based on the results of stencil test.</summary>
            <remarks>
            <para>All stencil operations are specified as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_stencil_op">D3D11_STENCIL_OP</a>. The stencil operation can be set differently based on the outcome of the stencil test (which is referred to as <b>StencilFunc</b> in the stencil test portion of depth-stencil testing. This structure is a member of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">depth-stencil description</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencilop_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCILOP_DESC.StencilFailOp">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_stencil_op">D3D11_STENCIL_OP</a></b> The stencil operation to perform when stencil testing fails.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencilop_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCILOP_DESC.StencilDepthFailOp">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_stencil_op">D3D11_STENCIL_OP</a></b> The stencil operation to perform when stencil testing passes and depth testing fails.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencilop_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCILOP_DESC.StencilPassOp">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_stencil_op">D3D11_STENCIL_OP</a></b> The stencil operation to perform when stencil testing and depth testing both pass.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencilop_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCILOP_DESC.StencilFunc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a></b> A function that compares stencil data against existing stencil data. The function options are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencilop_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC">
            <summary>Describes depth-stencil state.</summary>
            <remarks>
            <para>Pass a pointer to <b>D3D11_DEPTH_STENCIL_DESC</b> to the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createdepthstencilstate">ID3D11Device::CreateDepthStencilState</a> method to create the depth-stencil state object. Depth-stencil state controls how depth-stencil testing is performed by the output-merger stage. The following table shows the default values of depth-stencil states. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.DepthEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Enable depth testing.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.DepthWriteMask">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_depth_write_mask">D3D11_DEPTH_WRITE_MASK</a></b> Identify a portion of the depth-stencil buffer that can be modified by depth data (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_depth_write_mask">D3D11_DEPTH_WRITE_MASK</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.DepthFunc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a></b> A function that compares depth data against existing depth data. The function options are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.StencilEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Enable stencil testing.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.StencilReadMask">
            <summary>
            <para>Type: <b>UINT8</b> Identify a portion of the depth-stencil buffer for reading stencil data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.StencilWriteMask">
            <summary>
            <para>Type: <b>UINT8</b> Identify a portion of the depth-stencil buffer for writing stencil data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.FrontFace">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a></b> Identify how to use the results of the depth test and the stencil test for pixels whose surface normal is facing towards the camera (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC.BackFace">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a></b> Identify how to use the results of the depth test and the stencil test for pixels whose surface normal is facing away from the camera (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencilop_desc">D3D11_DEPTH_STENCILOP_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC">
            <summary>Specifies the subresources of a texture that are accessible from a depth-stencil view.</summary>
            <remarks>
            <para>These are valid formats for a depth-stencil view: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> Resource data  format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>). See remarks for allowable formats.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC.ViewDimension">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_dsv_dimension">D3D11_DSV_DIMENSION</a></b> Type of resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_dsv_dimension">D3D11_DSV_DIMENSION</a>). Specifies how a depth-stencil resource will be accessed; the value is stored in the union in this structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC.Flags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that describes whether the texture is read only.  Pass 0 to specify that it is not read only; otherwise, pass one of the members of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_dsv_flag">D3D11_DSV_FLAG</a> enumerated type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_depth_stencil_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_WRITE_MASK">
            <summary>Identify the portion of a depth-stencil buffer for writing depth data.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_depth_write_mask">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_WRITE_MASK.D3D11_DEPTH_WRITE_MASK_ZERO">
            <summary>Turn off writes to the depth-stencil buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_WRITE_MASK.D3D11_DEPTH_WRITE_MASK_ALL">
            <summary>Turn on writes to the depth-stencil buffer.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DEVICE_CONTEXT_TYPE">
            <summary>Device context options.</summary>
            <remarks>
            <para>This enumeration is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-gettype">ID3D11DeviceContext::GetType</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_device_context_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEVICE_CONTEXT_TYPE.D3D11_DEVICE_CONTEXT_IMMEDIATE">
            <summary>The device context is an immediate context.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DEVICE_CONTEXT_TYPE.D3D11_DEVICE_CONTEXT_DEFERRED">
            <summary>The device context is a deferred context.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION">
            <summary>Specifies how to access a resource used in a depth-stencil view.</summary>
            <remarks>
            <para>This enumeration is used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a> to create a depth-stencil view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_dsv_dimension#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_UNKNOWN">
            <summary><i>D3D11_DSV_DIMENSION_UNKNOWN</i> is not a valid value for <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a> and is not used.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE1D">
            <summary>The resource will be accessed as a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource will be accessed as an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE2D">
            <summary>The resource will be accessed as a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource will be accessed as an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE2DMS">
            <summary>The resource will be accessed as a 2D texture with multisampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_DSV_DIMENSION.D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource will be accessed as an array of 2D textures with multisampling.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE">
            <summary>Direct3D 11 feature options.</summary>
            <remarks>
            <para>This enumeration is used when querying a driver about support for these features by calling <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport">ID3D11Device::CheckFeatureSupport</a>. Each value in this enumeration has a corresponding data structure that is required to be passed to the <i>pFeatureSupportData</i> parameter of <b>ID3D11Device::CheckFeatureSupport</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_THREADING">
            <summary>The driver supports <a href="https://docs.microsoft.com/windows/win32/direct3d11/overviews-direct3d-11-render-multi-thread-intro">multithreading</a>. To see an example of testing a driver for multithread support, see <a href="https://docs.microsoft.com/windows/win32/direct3d11/overviews-direct3d-11-render-multi-thread-support">How To: Check for Driver Support</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_threading">D3D11_FEATURE_DATA_THREADING</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_DOUBLES">
            <summary>Supports the use of the double-precision shaders in HLSL. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_doubles">D3D11_FEATURE_DATA_DOUBLES</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_FORMAT_SUPPORT">
            <summary>Supports the formats in <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_format_support">D3D11_FORMAT_SUPPORT</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_format_support">D3D11_FEATURE_DATA_FORMAT_SUPPORT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_FORMAT_SUPPORT2">
            <summary>Supports the formats in <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_format_support2">D3D11_FORMAT_SUPPORT2</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_format_support2">D3D11_FEATURE_DATA_FORMAT_SUPPORT2</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS">
            <summary>Supports compute shaders and raw and structured buffers. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d10_x_hardware_options">D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS">
            <summary>
            <para>Supports Direct3D 11.1 feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options">D3D11_FEATURE_DATA_D3D11_OPTIONS</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_ARCHITECTURE_INFO">
            <summary>
            <para>Supports specific adapter architecture. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_architecture_info">D3D11_FEATURE_DATA_ARCHITECTURE_INFO</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D9_OPTIONS">
            <summary>
            <para>Supports Direct3D 9 feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_options">D3D11_FEATURE_DATA_D3D9_OPTIONS</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT">
            <summary>
            <para>Supports minimum precision of shaders. For more info about HLSL minimum precision, see <a href="https://docs.microsoft.com/windows/win32/direct3d11/direct3d-11-1-features">using HLSL minimum precision</a>. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_shader_min_precision_support">D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D9_SHADOW_SUPPORT">
            <summary>
            <para>Supports Direct3D 9 shadowing feature. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_shadow_support">D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS1">
            <summary>
            <para>Supports Direct3D 11.2 feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D9_SIMPLE_INSTANCING_SUPPORT">
            <summary>
            <para>Supports Direct3D 11.2 instancing options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_simple_instancing_support">D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_MARKER_SUPPORT">
            <summary>
            <para>Supports Direct3D 11.2 marker options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_marker_support">D3D11_FEATURE_DATA_MARKER_SUPPORT</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D9_OPTIONS1">
            <summary>
            <para>Supports Direct3D 9 feature options, which includes the Direct3D 9 shadowing feature and instancing support. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d9_options1">D3D11_FEATURE_DATA_D3D9_OPTIONS1</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS2">
            <summary>
            <para>Supports Direct3D 11.3 conservative rasterization feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options2">D3D11_FEATURE_DATA_D3D11_OPTIONS2</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.3.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS3">
            <summary>
            <para>Supports Direct3D 11.4 conservative rasterization feature options. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options3">D3D11_FEATURE_DATA_D3D11_OPTIONS3</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.4.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT">
            <summary>Supports GPU virtual addresses. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_gpu_virtual_address_support">D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS4">
            <summary>
            <para>Supports a single boolean for NV12 shared textures. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11_4/ns-d3d11_4-d3d11_feature_data_d3d11_options4">D3D11_FEATURE_DATA_D3D11_OPTIONS4</a>. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.4.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_SHADER_CACHE">
            <summary>Supports shader cache, described in <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_shader_cache">D3D11_FEATURE_DATA_SHADER_CACHE</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE.D3D11_FEATURE_D3D11_OPTIONS5">
            <summary>Supports a <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_shared_resource_tier">D3D11_SHARED_RESOURCE_TIER</a> to indicate a tier for shared resource support. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options5">D3D11_FEATURE_DATA_D3D11_OPTIONS5</a>.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_FILL_MODE">
            <summary>Determines the fill mode to use when rendering triangles.</summary>
            <remarks>
            <para>This enumeration is part of a rasterizer-state object description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_fill_mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILL_MODE.D3D11_FILL_WIREFRAME">
            <summary>Draw lines connecting the vertices. Adjacent vertices are not drawn.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILL_MODE.D3D11_FILL_SOLID">
            <summary>Fill the triangles formed by the vertices. Adjacent vertices are not drawn.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER">
            <summary>Filtering options during texture sampling.</summary>
            <remarks>
            <para><div class="alert"><b>Note</b>  If you use different filter types for min versus mag filter, undefined behavior occurs in certain cases where the choice between whether magnification or minification happens is ambiguous.  To prevent this undefined behavior, use filter modes that use similar filter operations for both min and mag (or use anisotropic filtering, which avoids the issue as well).</div> <div> </div> During texture sampling, one or more texels are read and combined (this is calling filtering) to produce a single value. Point sampling reads a single texel while linear sampling reads two texels (endpoints) and linearly interpolates a third value between the endpoints. HLSL texture-sampling functions also support comparison filtering during texture sampling. Comparison filtering compares each sampled texel against a comparison value. The boolean result is blended the same way that normal texture filtering is blended. You can use HLSL intrinsic texture-sampling functions that implement texture filtering only or companion functions that use texture filtering with comparison filtering. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_filter#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_MAG_MIP_POINT">
            <summary>Use point sampling for minification, magnification, and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MIN_MAG_MIP_LINEAR">
            <summary>Use linear interpolation for minification, magnification, and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_ANISOTROPIC">
            <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT">
            <summary>Use point sampling for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR">
            <summary>Use linear interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_COMPARISON_ANISOTROPIC">
            <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MINIMUM_ANISOTROPIC">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_ANISOTROPIC</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_MIN_MAG_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_FILTER.D3D11_FILTER_MAXIMUM_ANISOTROPIC">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/">D3D11_FILTER_ANISOTROPIC</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_CLASSIFICATION">
            <summary>Type of data contained in an input slot.</summary>
            <remarks>
            <para>Use these values to specify the type of data for a particular input element (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_input_element_desc">D3D11_INPUT_ELEMENT_DESC</a>) of an input-layout object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_input_classification#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_CLASSIFICATION.D3D11_INPUT_PER_VERTEX_DATA">
            <summary>Input data is per-vertex data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_CLASSIFICATION.D3D11_INPUT_PER_INSTANCE_DATA">
            <summary>Input data is per-instance data.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC">
            <summary>A description of a single element for the input-assembler stage.</summary>
            <remarks>
            <para>An input-layout object contains an array of structures, each structure defines one element being read from an input slot. Create an input-layout object by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createinputlayout">ID3D11Device::CreateInputLayout</a>. For an example, see the "Create the Input-Layout Object" subtopic under the  <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-input-assembler-stage-getting-started">Getting Started with the Input-Assembler Stage</a> topic.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_input_element_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.SemanticName">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b> The HLSL semantic associated with this element in a shader input-signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.SemanticIndex">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> The data type of the element data. See <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.InputSlot">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> An integer value that identifies the input-assembler (see input slot). Valid values are between 0 and 15, defined in D3D11.h.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.AlignedByteOffset">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Optional. Offset (in bytes) from the start of the vertex. Use D3D11_APPEND_ALIGNED_ELEMENT for convenience to define the current element directly after the previous one, including any packing if necessary.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.InputSlotClass">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_input_classification">D3D11_INPUT_CLASSIFICATION</a></b> Identifies the input data class for a single input slot (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_input_classification">D3D11_INPUT_CLASSIFICATION</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC.InstanceDataStepRate">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of instances to draw using the same per-instance data before advancing in the buffer by one element. This value must be 0 for an element that contains per-vertex data (the slot class is set to D3D11_INPUT_PER_VERTEX_DATA).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_MAP">
            <summary>Identifies a resource to be accessed for reading and writing by the CPU. Applications may combine one or more of these flags.</summary>
            <remarks>
            <para>This enumeration is used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-map">ID3D11DeviceContext::Map</a>. These remarks are divided into the following topics:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_map#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAP.D3D11_MAP_READ">
            <summary>
            <para>Resource is mapped for reading. The resource must have been created with read access (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_READ</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_map#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAP.D3D11_MAP_WRITE">
            <summary>
            <para>Resource is mapped for writing. The resource must have been created with write access (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_WRITE</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_map#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAP.D3D11_MAP_READ_WRITE">
            <summary>
            <para>Resource is mapped for reading and writing. The resource must have been created with read and write access (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_READ and D3D11_CPU_ACCESS_WRITE</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_map#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAP.D3D11_MAP_WRITE_DISCARD">
            <summary>
            <para>Resource is mapped for writing; the previous contents of the resource will be undefined. The resource must have been created with write access and dynamic usage (See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_WRITE</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DYNAMIC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_map#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAP.D3D11_MAP_WRITE_NO_OVERWRITE">
            <summary>
            <para>Resource is mapped for writing; the existing contents of the resource cannot be overwritten (see Remarks). This flag is only valid on vertex and index buffers. The resource must have been created with write access (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_WRITE</a>). Cannot be used on a resource created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_CONSTANT_BUFFER</a> flag. <div class="alert"><b>Note</b>  The Direct3D 11.1 runtime, which is available starting with Windows 8, enables  mapping dynamic constant buffers and shader resource views (SRVs) of dynamic buffers with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP_WRITE_NO_OVERWRITE</a>.  The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers. To determine if a Direct3D device supports these features, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkfeaturesupport">ID3D11Device::CheckFeatureSupport</a> with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE_D3D11_OPTIONS</a>. <b>CheckFeatureSupport</b> fills members of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options">D3D11_FEATURE_DATA_D3D11_OPTIONS</a> structure with the device's features. The relevant members here are <b>MapNoOverwriteOnDynamicConstantBuffer</b> and <b>MapNoOverwriteOnDynamicBufferSRV</b>.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_map#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_MAPPED_SUBRESOURCE">
            <summary>Provides access to subresource data.</summary>
            <remarks>
            <para>This structure is used in a call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-map">ID3D11DeviceContext::Map</a>. The values in these members tell you how much data you can view: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_mapped_subresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAPPED_SUBRESOURCE.pData">
            <summary>
            <para>Type: <b>void*</b> Pointer to the data. When <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-map">ID3D11DeviceContext::Map</a> provides the pointer, the runtime ensures that the pointer has a specific alignment, depending on the following feature levels: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_mapped_subresource#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAPPED_SUBRESOURCE.RowPitch">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The row pitch, or width, or physical size (in bytes) of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_mapped_subresource#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_MAPPED_SUBRESOURCE.DepthPitch">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The depth pitch, or width, or physical size (in bytes)of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_mapped_subresource#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY">
            <summary>Query types.</summary>
            <remarks>
            <para>Create a query with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createquery">ID3D11Device::CreateQuery</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_query#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_EVENT">
            <summary>Determines whether or not the GPU is finished processing commands. When the GPU is finished processing commands <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return S_OK, and pData will point to a BOOL with a value of <b>TRUE</b>. When using this type of query, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> is disabled.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_OCCLUSION">
            <summary>Get the number of samples that passed the depth and stencil tests in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a UINT64. If a depth or stencil test is disabled, then each of those tests will be counted as a pass.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_TIMESTAMP">
            <summary>Get a timestamp value where <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a UINT64. This kind of query is only useful if two timestamp queries are done in the middle of a D3D11_QUERY_TIMESTAMP_DISJOINT query. The difference of two timestamps can be used to determine how many ticks have elapsed, and the D3D11_QUERY_TIMESTAMP_DISJOINT query will determine if that difference is a reliable value and also has a value that shows how to convert the number of ticks into seconds. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_timestamp_disjoint">D3D11_QUERY_DATA_TIMESTAMP_DISJOINT</a>. When using this type of query, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> is disabled.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_TIMESTAMP_DISJOINT">
            <summary>Determines whether or not a D3D11_QUERY_TIMESTAMP is returning reliable values, and also gives the frequency of the processor enabling you to convert the number of elapsed ticks into seconds. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_timestamp_disjoint">D3D11_QUERY_DATA_TIMESTAMP_DISJOINT</a>. This type of query should only be invoked once per frame or less.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_PIPELINE_STATISTICS">
            <summary>Get pipeline statistics, such as the number of pixel shader invocations in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_pipeline_statistics">D3D11_QUERY_DATA_PIPELINE_STATISTICS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_OCCLUSION_PREDICATE">
            <summary>Similar to D3D11_QUERY_OCCLUSION, except <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL indicating whether or not any samples passed the depth and stencil tests - <b>TRUE</b> meaning at least one passed, <b>FALSE</b> meaning none passed.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_STATISTICS">
            <summary>Get streaming output statistics, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_OVERFLOW_PREDICATE">
            <summary>Determines whether or not any of the streaming output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_STATISTICS_STREAM0">
            <summary>Get streaming output statistics for stream 0, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0">
            <summary>Determines whether or not the stream 0 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_STATISTICS_STREAM1">
            <summary>Get streaming output statistics for stream 1, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1">
            <summary>Determines whether or not the stream 1 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_STATISTICS_STREAM2">
            <summary>Get streaming output statistics for stream 2, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2">
            <summary>Determines whether or not the stream 2 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_STATISTICS_STREAM3">
            <summary>Get streaming output statistics for stream 3, such as the number of primitives streamed out in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> will return a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_data_so_statistics">D3D11_QUERY_DATA_SO_STATISTICS</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY.D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3">
            <summary>Determines whether or not the stream 3 output buffers overflowed in between <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a>. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> returns a BOOL - <b>TRUE</b> meaning there was an overflow, <b>FALSE</b> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC">
            <summary>Describes a query.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_query_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC.Query">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query">D3D11_QUERY</a></b> Type of query (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query">D3D11_QUERY</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_query_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC.MiscFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Miscellaneous flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query_misc_flag">D3D11_QUERY_MISC_FLAG</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_query_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC">
            <summary>Describes rasterizer state.</summary>
            <remarks>
            <para>Rasterizer state defines the behavior of the rasterizer stage. To create a rasterizer-state object, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrasterizerstate">ID3D11Device::CreateRasterizerState</a>. To set rasterizer state, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-rssetstate">ID3D11DeviceContext::RSSetState</a>. If you do not specify some rasterizer state,  the Direct3D runtime uses the following default values for rasterizer state. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.FillMode">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_fill_mode">D3D11_FILL_MODE</a></b> Determines the fill mode to use when rendering (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_fill_mode">D3D11_FILL_MODE</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.CullMode">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cull_mode">D3D11_CULL_MODE</a></b> Indicates triangles facing the specified direction are not drawn (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cull_mode">D3D11_CULL_MODE</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.FrontCounterClockwise">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Determines if a triangle is front- or back-facing. If this parameter is <b>TRUE</b>, a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If this parameter is <b>FALSE</b>, the opposite is true.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.DepthBias">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">INT</a></b> Depth value added to a given pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.DepthBiasClamp">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Maximum depth bias of a pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.SlopeScaledDepthBias">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Scalar on a given pixel's slope. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.DepthClipEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Enable clipping based on distance. The hardware always performs x and y clipping of rasterized coordinates. When <b>DepthClipEnable</b> is set to the default–<b>TRUE</b>, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).</para>
            <para><pre class="syntax" xml:space="preserve"><code> 0 &lt; w -w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden) -w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden) 0 &lt;= z &lt;= w </code></pre> When you set <b>DepthClipEnable</b> to <b>FALSE</b>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.ScissorEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Enable scissor-rectangle culling. All pixels outside an active scissor rectangle are culled.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.MultisampleEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm on multisample antialiasing (MSAA) render targets. Set to <b>TRUE</b> to use the quadrilateral line anti-aliasing algorithm and to <b>FALSE</b> to use the alpha line anti-aliasing algorithm. For more info about this member, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC.AntialiasedLineEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Specifies whether to enable line antialiasing; only applies if doing line drawing and <b>MultisampleEnable</b> is <b>FALSE</b>. For more info about this member, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC">
            <summary>Describes the blend state for a render target.</summary>
            <remarks>
            <para>You specify an array of <b>D3D11_RENDER_TARGET_BLEND_DESC</b> structures in the <b>RenderTarget</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a> structure to describe the blend states for render targets; you can bind up to eight render targets to the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> at one time. For info about how blending is done, see the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a>. Here are the default values for blend state. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_blend_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.BlendEnable">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Enable (or disable) blending.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.SrcBlend">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the RGB value that the pixel shader outputs. The <b>BlendOp</b> member defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.DestBlend">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the current RGB value in the render target. The <b>BlendOp</b> member defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.BlendOp">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">D3D11_BLEND_OP</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">blend operation</a> defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.SrcBlendAlpha">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the alpha value that the pixel shader outputs. Blend options that end in _COLOR are not allowed. The <b>BlendOpAlpha</b> member defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.DestBlendAlpha">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> specifies the operation to perform on the current alpha value in the render target. Blend options that end in _COLOR are not allowed. The <b>BlendOpAlpha</b> member defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.BlendOpAlpha">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">D3D11_BLEND_OP</a></b> This <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">blend operation</a> defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC.RenderTargetWriteMask">
            <summary>
            <para>Type: <b>UINT8</b> A write mask.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC">
            <summary>Specifies the subresources from a resource that are accessible using a render-target view.</summary>
            <remarks>
            <para>A render-target-view description is passed into <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrendertargetview">ID3D11Device::CreateRenderTargetView</a> to create a render target. A render-target-view cannot use the following formats: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> The data format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC.ViewDimension">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_rtv_dimension">D3D11_RTV_DIMENSION</a></b> The resource type (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_rtv_dimension">D3D11_RTV_DIMENSION</a>), which specifies how the render-target resource will be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_render_target_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION">
            <summary>Identifies the type of resource being used.</summary>
            <remarks>
            <para>This enumeration is used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11resource-gettype">ID3D11Resource::GetType</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_dimension#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION.D3D11_RESOURCE_DIMENSION_UNKNOWN">
            <summary>Resource is of unknown type.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION.D3D11_RESOURCE_DIMENSION_BUFFER">
            <summary>Resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION.D3D11_RESOURCE_DIMENSION_TEXTURE1D">
            <summary>Resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION.D3D11_RESOURCE_DIMENSION_TEXTURE2D">
            <summary>Resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION.D3D11_RESOURCE_DIMENSION_TEXTURE3D">
            <summary>Resource is a 3D texture.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG">
            <summary>Identifies options for resources.</summary>
            <remarks>
            <para>This enumeration is used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>. These flags can be combined by bitwise OR.</para>
            <para>The <b>D3D11_RESOURCE_MISC_FLAG</b> cannot be used when creating resources with <b>D3D11_CPU_ACCESS</b> flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_GENERATE_MIPS">
            <summary>Enables MIP map generation by using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-generatemips">ID3D11DeviceContext::GenerateMips</a> on a texture resource. The resource must be created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">bind flags</a> that specify that the resource is a render target and a shader resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_SHARED">
            <summary>
            <para>Enables resource data sharing between two or more Direct3D devices. The only resources that can be shared are 2D non-mipmapped textures.</para>
            <para><b>D3D11_RESOURCE_MISC_SHARED</b> and <b>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</b> are mutually exclusive.</para>
            <para><b>WARP</b> and <b>REF</b> devices do not support shared resources. If you try to create a resource with this flag on either a <b>WARP</b> or <b>REF</b> device, the create method will return an <b>E_OUTOFMEMORY</b> error code.</para>
            <para><div class="alert"><b>Note</b>  Starting with Windows 8, <b>WARP</b> devices fully support shared resources. </div> <div> </div> <div class="alert"><b>Note</b>  Starting with Windows 8, we recommend that you enable resource data sharing between two or more Direct3D devices by using a combination of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_SHARED_NTHANDLE</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</a> flags instead. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_TEXTURECUBE">
            <summary>Sets a resource to be a cube texture created from a <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2darray">Texture2DArray</a> that contains 6 textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS">
            <summary>Enables instancing of GPU-generated content.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS">
            <summary>Enables a resource as a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">byte address buffer</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_BUFFER_STRUCTURED">
            <summary>Enables a resource as a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">structured buffer</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_RESOURCE_CLAMP">
            <summary>Enables a resource with MIP map clamping for use with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-setresourceminlod">ID3D11DeviceContext::SetResourceMinLOD</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX">
            <summary>
            <para>Enables the resource  to be synchronized by using the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgikeyedmutex-acquiresync">IDXGIKeyedMutex::AcquireSync</a>  and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgikeyedmutex-releasesync">IDXGIKeyedMutex::ReleaseSync</a> APIs. The following Direct3D 11 resource creation  APIs, that take <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a> parameters, have been extended to support the new flag. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_GDI_COMPATIBLE">
            <summary>
            <para>Enables a resource compatible with GDI. You must set the <b>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</b> flag  on surfaces that you use with GDI. Setting the <b>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</b> flag allows GDI rendering on the surface via <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgisurface1-getdc">IDXGISurface1::GetDC</a>.</para>
            <para>Consider the following programming tips for using D3D11_RESOURCE_MISC_GDI_COMPATIBLE when you create a texture or use that texture in a swap chain: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_SHARED_NTHANDLE">
            <summary>
            <para>Set this flag to enable the use of NT HANDLE values when you create a shared resource.  By enabling this flag, you deprecate the use of existing HANDLE values. The value specifies a new shared resource type that directs the runtime to use NT HANDLE values for the shared resource. The runtime then must confirm that the shared resource  works on all hardware at the specified <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a>.</para>
            <para>Without this flag set, the runtime does not strictly validate shared resource parameters (that is, formats, flags, usage, and so on). When the runtime does not validate shared resource parameters, behavior of much of the Direct3D   API might be undefined and might vary from driver to driver. <b>Direct3D 11 and earlier:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_RESTRICTED_CONTENT">
            <summary>
            <para>Set this flag to indicate that the resource might contain protected content; therefore, the operating system should  use the resource only when the driver and hardware support content protection.  If the driver and hardware do not support content protection and you try to create a resource with this flag, the resource creation fails. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE">
            <summary>
            <para>Set this flag to indicate that the operating system  restricts access to the shared surface. You can use this flag together with the D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER">
            <summary>
            <para>Set this flag to indicate that the driver  restricts access to the shared surface. You can use this flag in conjunction with the D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_GUARDED">
            <summary>
            <para>Set this flag to indicate that the resource is guarded. Such a resource is returned by the <a href="https://docs.microsoft.com/windows/desktop/api/dcomp/nf-dcomp-idcompositionsurface-begindraw">IDCompositionSurface::BeginDraw</a> (DirectComposition) and <a href="https://docs.microsoft.com/windows/desktop/api/windows.ui.xaml.media.dxinterop/nf-windows-ui-xaml-media-dxinterop-isurfaceimagesourcenative-begindraw">ISurfaceImageSourceNative::BeginDraw</a> (Windows Runtime) APIs.  For these APIs, you provide a region of interest (ROI) on a surface to update. This surface isn't compatible with multiple render targets (MRT). A guarded resource automatically restricts all writes to the region that is related to one of the preceding APIs. Additionally, the resource enforces access to the ROI with these restrictions: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_TILE_POOL">
            <summary>
            <para>Set this flag to indicate that the resource is a tile pool. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_TILED">
            <summary>
            <para>Set this flag to indicate that the resource is a tiled resource. <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_MISC_FLAG.D3D11_RESOURCE_MISC_HW_PROTECTED">
            <summary>
            <para>Set this flag to indicate that the resource should be created such that it will be protected by the hardware.  Resource creation will fail if hardware content protection is not supported. This flag has the following restrictions: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_resource_misc_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION">
            <summary>These flags identify the type of resource that will be viewed as a render target.</summary>
            <remarks>
            <para>This enumeration is used in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a> to create a render-target view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_rtv_dimension#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_UNKNOWN">
            <summary>Do not use this value, as it will cause <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrendertargetview">ID3D11Device::CreateRenderTargetView</a> to fail.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_BUFFER">
            <summary>The resource will be accessed as a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE1D">
            <summary>The resource will be accessed as a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource will be accessed as an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE2D">
            <summary>The resource will be accessed as a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource will be accessed as an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE2DMS">
            <summary>The resource will be accessed as a 2D texture with multisampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource will be accessed as an array of 2D textures with multisampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_RTV_DIMENSION.D3D11_RTV_DIMENSION_TEXTURE3D">
            <summary>The resource will be accessed as a 3D texture.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC">
            <summary>Describes a sampler state.</summary>
            <remarks>
            <para>These are the default values for sampler state. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.Filter">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_filter">D3D11_FILTER</a></b> Filtering method to use when sampling a texture (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_filter">D3D11_FILTER</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.AddressU">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_texture_address_mode">D3D11_TEXTURE_ADDRESS_MODE</a></b> Method to use for resolving a u texture coordinate that is outside the 0 to 1 range (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_texture_address_mode">D3D11_TEXTURE_ADDRESS_MODE</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.AddressV">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_texture_address_mode">D3D11_TEXTURE_ADDRESS_MODE</a></b> Method to use for resolving a v texture coordinate that is outside the 0 to 1 range.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.AddressW">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_texture_address_mode">D3D11_TEXTURE_ADDRESS_MODE</a></b> Method to use for resolving a w texture coordinate that is outside the 0 to 1 range.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.MipLODBias">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Offset from the calculated mipmap level. For example, if Direct3D calculates that a texture should be sampled at mipmap level 3 and MipLODBias is 2, then the texture will be sampled at mipmap level 5.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.MaxAnisotropy">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Clamping value used if D3D11_FILTER_ANISOTROPIC or D3D11_FILTER_COMPARISON_ANISOTROPIC is specified in Filter. Valid values are between 1 and 16.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.ComparisonFunc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a></b> A function that compares sampled data against existing sampled data. The function options are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_comparison_func">D3D11_COMPARISON_FUNC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.BorderColor">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a>[4]</b> Border color to use if D3D11_TEXTURE_ADDRESS_BORDER is specified for AddressU, AddressV, or AddressW. Range must be between 0.0 and 1.0 inclusive.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.MinLOD">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Lower end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.MaxLOD">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Upper end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed. This value must be greater than or equal to MinLOD. To have no upper limit on LOD set this to a large value such as D3D11_FLOAT32_MAX.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.__float_4.Length">
            <summary>Always <c>4</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.__float_4.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC.__float_4.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC">
            <summary>Describes a shader-resource view.</summary>
            <remarks>
            <para>A view is a format-specific way to look at the data in a resource. The view determines what data to look at, and how it is cast when read. When viewing a resource, the resource-view description must specify a typed format, that is compatible with the resource format. So that means that you cannot create a resource-view description using any format with _TYPELESS in the name. You can however view a typeless resource by specifying a typed format for the view. For example, a DXGI_FORMAT_R32G32B32_TYPELESS resource can be viewed with one of these typed formats: DXGI_FORMAT_R32G32B32_FLOAT, DXGI_FORMAT_R32G32B32_UINT, and DXGI_FORMAT_R32G32B32_SINT, since these typed formats are compatible with the typeless resource. Create a shader-resource-view description by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. To view a shader-resource-view description, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11shaderresourceview-getdesc">ID3D11ShaderResourceView::GetDesc</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_shader_resource_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> specifying the viewing format. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_shader_resource_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC.ViewDimension">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476217(v=vs.85)">D3D11_SRV_DIMENSION</a></b> The resource type of the view. See <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476217(v=vs.85)">D3D11_SRV_DIMENSION</a>. You must set *ViewDimension* to the same resource type as that of the underlying resource. This parameter also determines which _SRV to use in the union below.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_shader_resource_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY">
            <summary>Description of a vertex element in a vertex buffer in an output slot.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_so_declaration_entry">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.Stream">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Zero-based, stream number.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.SemanticName">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b> Type of output element; possible values include: <b>"POSITION"</b>, <b>"NORMAL"</b>, or <b>"TEXCOORD0"</b>. Note that if <i>SemanticName</i> is <b>NULL</b> then <i>ComponentCount</i> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.SemanticIndex">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Output element's zero-based index. Should be used if, for example, you have more than one texture coordinate stored in each vertex.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.StartComponent">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BYTE</a></b> Which component of the entry to begin writing out to. Valid values are 0 to 3. For example, if you only wish to output to the y and z components of a position, then StartComponent should be 1 and ComponentCount should be 2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.ComponentCount">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BYTE</a></b> The number of components of the entry to write out to. Valid values are 1 to 4. For example, if you only wish to output to the y and z components of a position, then StartComponent should be 1 and ComponentCount should be 2.  Note that if <i>SemanticName</i> is <b>NULL</b> then <i>ComponentCount</i> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY.OutputSlot">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BYTE</a></b> The associated stream output buffer that is bound to the pipeline (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-sosettargets">ID3D11DeviceContext::SOSetTargets</a>). The valid range for <i>OutputSlot</i> is 0 to 3.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP">
            <summary>The stencil operations that can be performed during depth-stencil testing.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_stencil_op">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_KEEP">
            <summary>Keep the existing stencil data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_ZERO">
            <summary>Set the stencil data to 0.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_REPLACE">
            <summary>Set the stencil data to the reference value set by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetdepthstencilstate">ID3D11DeviceContext::OMSetDepthStencilState</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_INCR_SAT">
            <summary>Increment the stencil value by 1, and clamp the result.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_DECR_SAT">
            <summary>Decrement the stencil value by 1, and clamp the result.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_INVERT">
            <summary>Invert the stencil data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_INCR">
            <summary>Increment the stencil value by 1, and wrap the result if necessary.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_STENCIL_OP.D3D11_STENCIL_OP_DECR">
            <summary>Decrement the stencil value by 1, and wrap the result if necessary.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA">
            <summary>Specifies data for initializing a subresource.</summary>
            <remarks>
            <para>This structure is used in calls to create buffers (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createbuffer">ID3D11Device::CreateBuffer</a>) and textures (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture1d">ID3D11Device::CreateTexture1D</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture3d">ID3D11Device::CreateTexture3D</a>). If the resource you create does not require a system-memory pitch or a system-memory-slice pitch, you can use those members to pass size information, which might help you when you debug a problem with creating a resource. A subresource is a single mipmap-level surface. You can pass an array of subresources to one of the preceding methods to create the resource. A subresource can be 1D, 2D, or 3D. How you set the members of <b>D3D11_SUBRESOURCE_DATA</b> depend on whether the subresource is 1D, 2D, or 3D.</para>
            <para>The x, y, and d values are 0-based indices and <b>BytesPerPixel</b> depends on the pixel format. For mipmapped 3D surfaces, the number of depth slices in each level is half the number of the previous level (minimum 1) and rounded down if dividing by two results in a non-whole number. <div class="alert"><b>Note</b>  An application must not rely on <b>SysMemPitch</b> being exactly equal to the number of texels in a line times the size of a texel. In some cases, <b>SysMemPitch</b> will include padding to skip past additional data in a line.  This could be padding for alignment or the texture could be a subsection of a larger texture.  For example, the <b>D3D11_SUBRESOURCE_DATA</b> structure could represent a 32 by 32 subsection of a 128 by 128 texture. The value for <b>SysMemSlicePitch</b> will reflect any padding included in <b>SysMemPitch</b>.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_subresource_data#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA.pSysMem">
            <summary>
            <para>Type: <b>const void*</b> Pointer to the initialization data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_subresource_data#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA.SysMemPitch">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The distance (in bytes) from the beginning of one line of a texture to the next line. System-memory pitch is used only for 2D and 3D texture data as it is has no meaning for the other resource types. Specify the distance from the first pixel of one 2D slice of a 3D texture to the first pixel of the next 2D slice in that texture in the <b>SysMemSlicePitch</b> member.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_subresource_data#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA.SysMemSlicePitch">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The distance (in bytes) from the beginning of one depth level to the next. System-memory-slice pitch is only used for 3D texture data as it has no meaning for the other resource types.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_subresource_data#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_DSV">
            <summary>Specifies the subresources from an array of 1D textures to use in a depth-stencil view.</summary>
            <remarks>
            <para>This structure is one member of a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_DSV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first mipmap level to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_DSV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_DSV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_RTV">
            <summary>Specifies the subresources from an array of 1D textures to use in a render-target view.</summary>
            <remarks>
            <para>This structure is one member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_RTV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the mipmap level to use mip slice.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_RTV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_RTV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_SRV">
            <summary>Specifies the subresources from an array of 1D textures to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture1D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_SRV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_SRV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_UAV">
            <summary>Describes an array of unordered-access 1D texture resources.</summary>
            <remarks>
            <para>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_UAV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The mipmap slice index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_UAV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The zero-based index of the first array slice to be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_ARRAY_UAV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of slices in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_DSV">
            <summary>Specifies the subresource from a 1D texture that is accessible to a depth-stencil view.</summary>
            <remarks>
            <para>This structure is one member of a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_DSV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first mipmap level to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_RTV">
            <summary>Specifies the subresource from a 1D texture to use in a render-target view.</summary>
            <remarks>
            <para>This structure is one member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_RTV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the mipmap level to use mip slice.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_SRV">
            <summary>Specifies the subresource from a 1D texture to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>). As an example, assuming <b>MostDetailedMip</b> = 6 and <b>MipLevels</b> = 2, the view will have access to 2 mipmap levels, 6 and 7, of the original texture for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates the view. In this situation, <b>MostDetailedMip</b> is greater than the <b>MipLevels</b> in the view. However, <b>MostDetailedMip</b> is not greater than the <b>MipLevels</b> in the original resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture1D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view  of the texture. See the remarks. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_UAV">
            <summary>Describes a unordered-access 1D texture resource.</summary>
            <remarks>
            <para>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX1D_UAV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The mipmap slice index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex1d_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_DSV">
            <summary>Specifies the subresources from an array of multisampled 2D textures for a depth-stencil view.</summary>
            <remarks>
            <para>This structure is one member of a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_DSV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_DSV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_RTV">
            <summary>Specifies the subresources from a an array of multisampled 2D textures to use in a render-target view.</summary>
            <remarks>
            <para>This structure is one member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_RTV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_RTV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_SRV">
            <summary>Specifies the subresources from an array of multisampled 2D textures to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_SRV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_ARRAY_SRV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_DSV">
            <summary>Specifies the subresource from a multisampled 2D texture that is accessible to a depth-stencil view.</summary>
            <remarks>
            <para>Because a multisampled 2D texture contains a single subtexture, there is nothing to specify; this unused member is included so that this structure will compile in C.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_DSV.UnusedField_NothingToDefine">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Unused.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_RTV">
            <summary>Specifies the subresource from a multisampled 2D texture to use in a render-target view.</summary>
            <remarks>
            <para>Since a multisampled 2D texture contains a single subresource, there is actually nothing to specify in D3D11_TEX2DMS_RTV. Consequently, <b>UnusedField_NothingToDefine</b> is included so that this structure will compile in C.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_RTV.UnusedField_NothingToDefine">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Integer of any value. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_SRV">
            <summary>Specifies the subresources from a multisampled 2D texture to use in a shader-resource view.</summary>
            <remarks>
            <para>Since a multisampled 2D texture contains a single subresource, there is actually nothing to specify in D3D11_TEX2DMS_RTV. Consequently, <b>UnusedField_NothingToDefine</b> is included so that this structure will compile in C.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2DMS_SRV.UnusedField_NothingToDefine">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Integer of any value. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2dms_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_DSV">
            <summary>Specifies the subresources from an array 2D textures that are accessible to a depth-stencil view.</summary>
            <remarks>
            <para>This structure is one member of a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_DSV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first mipmap level to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_DSV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_DSV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_RTV">
            <summary>Specifies the subresources from an array of 2D textures to use in a render-target view.</summary>
            <remarks>
            <para>This structure is one member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_RTV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the mipmap level to use mip slice.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_RTV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_RTV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures in the array to use in the render target view, starting from <b>FirstArraySlice</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_SRV">
            <summary>Specifies the subresources from an array of 2D textures to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture2D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_SRV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first texture to use in an array of textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_SRV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_UAV">
            <summary>Describes an array of unordered-access 2D texture resources.</summary>
            <remarks>
            <para>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_UAV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The mipmap slice index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_UAV.FirstArraySlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The zero-based index of the first array slice to be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_ARRAY_UAV.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of slices in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_array_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_DSV">
            <summary>Specifies the subresource from a 2D texture that is accessible to a depth-stencil view.</summary>
            <remarks>
            <para>This structure is one member of a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_DSV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the first mipmap level to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_dsv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_RTV">
            <summary>Specifies the subresource from a 2D texture to use in a render-target view.</summary>
            <remarks>
            <para>This structure is one member of a render-target-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_RTV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the mipmap level to use mip slice.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_SRV">
            <summary>Specifies the subresource from a 2D texture to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture2D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_UAV">
            <summary>Describes a unordered-access 2D texture resource.</summary>
            <remarks>
            <para>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX2D_UAV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The mipmap slice index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex2d_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_RTV">
            <summary>Specifies the subresources from a 3D texture to use in a render-target view.</summary>
            <remarks>
            <para>This structure is one member of a render target view. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_RTV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the mipmap level to use mip slice.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_RTV.FirstWSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> First depth level to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_RTV.WSize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of depth levels to use in the render-target view, starting from <b>FirstWSlice</b>. A value of -1 indicates all of the slices along the w axis, starting from <b>FirstWSlice</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_rtv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_SRV">
            <summary>Specifies the subresources from a 3D texture to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture3D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_UAV">
            <summary>Describes a unordered-access 3D texture resource.</summary>
            <remarks>
            <para>This structure is used by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_UAV.MipSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The mipmap slice index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_UAV.FirstWSlice">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The zero-based index of the first depth slice to be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEX3D_UAV.WSize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of depth slices.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_tex3d_uav#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_ARRAY_SRV">
            <summary>Specifies the subresources from an array of cube textures to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texcube_array_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_ARRAY_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original TextureCube for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texcube_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_ARRAY_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texcube_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_ARRAY_SRV.First2DArrayFace">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the first 2D texture to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texcube_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_ARRAY_SRV.NumCubes">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of cube textures in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texcube_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_SRV">
            <summary>Specifies the subresource from a cube texture to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texcube_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_SRV.MostDetailedMip">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original TextureCube for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a> creates a view) -1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texcube_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXCUBE_SRV.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texcube_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC">
            <summary>Describes a 1D texture.</summary>
            <remarks>
            <para>This structure is used in a call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture1d">ID3D11Device::CreateTexture1D</a>. In addition to this structure, you can also use the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/jj151694(v=vs.85)">CD3D11_TEXTURE1D_DESC</a> derived structure, which is defined  in D3D11.h and behaves like an inherited class, to help create a texture description. The texture size range is determined by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D 10 hardware at feature level 10 (<a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_10_0</a>) and call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a> to create an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>, you must constrain the maximum texture size to D3D10_REQ_TEXTURE1D_U_DIMENSION (8192) when you create your 1D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture1d_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.Width">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture width (in texels). The  range is from 1 to D3D11_REQ_TEXTURE1D_U_DIMENSION (16384). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels in the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures in the array. The  range is from 1 to D3D11_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> Texture format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.Usage">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a></b> Value that identifies how the texture is to be read from and written to. The most common value is D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.BindFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>) for binding to pipeline stages. The flags can be combined by a logical OR. For a 1D texture, the allowable values are: D3D11_BIND_SHADER_RESOURCE, D3D11_BIND_RENDER_TARGET and D3D11_BIND_DEPTH_STENCIL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.CPUAccessFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_FLAG</a>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC.MiscFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined with a logical OR.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture1d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC">
            <summary>Describes a 2D texture.</summary>
            <remarks>
            <para>This structure is used in a call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a>. In addition to this structure, you can also use the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/jj151700(v=vs.85)">CD3D11_TEXTURE2D_DESC</a> derived structure, which is defined  in D3D11.h and behaves like an inherited class, to help create a texture description. The device places some size restrictions (must be multiples of a minimum size) for a subsampled, block compressed, or bit-format resource. The texture size range is determined by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D 10 hardware at feature level 10 (<a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_10_0</a>) and call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a> to create an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>, you must constrain the maximum texture size to D3D10_REQ_TEXTURE2D_U_OR_V_DIMENSION (8192) when you create your 2D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.Width">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture width (in texels). The  range is from 1 to D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION (16384). For a texture cube-map, the  range is from 1 to D3D11_REQ_TEXTURECUBE_DIMENSION (16384). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.Height">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture height (in texels). The  range is from 1 to D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION (16384). For a texture cube-map, the  range is from 1 to D3D11_REQ_TEXTURECUBE_DIMENSION (16384). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels in the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.ArraySize">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of textures in the texture array. The  range is from 1 to D3D11_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION (2048). For a texture cube-map, this value is a multiple of 6 (that is, 6 times the value in the <b>NumCubes</b> member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texcube_array_srv">D3D11_TEXCUBE_ARRAY_SRV</a>), and the  range is from 6 to 2046. The range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> Texture format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.SampleDesc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a></b> Structure that specifies multisampling parameters for the texture. See <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.Usage">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a></b> Value that identifies how the texture is to be read from and written to. The most common value is D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.BindFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>) for binding to pipeline stages. The flags can be combined by a logical OR.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.CPUAccessFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_FLAG</a>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC.MiscFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined by using a logical OR. For a texture cube-map, set the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_TEXTURECUBE</a> flag. Cube-map arrays (that is, <b>ArraySize</b> &gt; 6) require feature level <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_10_1</a> or higher.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture2d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC">
            <summary>Describes a 3D texture.</summary>
            <remarks>
            <para>This structure is used in a call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createtexture3d">ID3D11Device::CreateTexture3D</a>. In addition to this structure, you can also use the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/jj151706(v=vs.85)">CD3D11_TEXTURE3D_DESC</a> derived structure, which is defined  in D3D11.h and behaves like an inherited class, to help create a texture description. The device restricts the size of subsampled, block compressed, and bit format resources to be multiples of sizes specific to each format. The texture size range is determined by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D 10 hardware at feature level 10 (<a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL_10_0</a>) and call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a> to create an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>, you must constrain the maximum texture size to D3D10_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048) when you create your 3D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture3d_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.Width">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture width (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.Height">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture height (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.Depth">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Texture depth (in texels). The  range is from 1 to D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048). However, the range is actually constrained by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> at which you create the rendering device. For more information about restrictions, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.MipLevels">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The maximum number of mipmap levels in the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_tex1d_srv">D3D11_TEX1D_SRV</a>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> Texture format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.Usage">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a></b> Value that identifies how the texture is to be read from and written to. The most common value is D3D11_USAGE_DEFAULT; see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a> for all possible values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.BindFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_FLAG</a>) for binding to pipeline stages. The flags can be combined by a logical OR.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.CPUAccessFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_cpu_access_flag">D3D11_CPU_ACCESS_FLAG</a>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC.MiscFlags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Flags (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_FLAG</a>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined with a logical OR.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_texture3d_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE">
            <summary>Identify a technique for resolving texture coordinates that are outside of the boundaries of a texture.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_texture_address_mode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE.D3D11_TEXTURE_ADDRESS_WRAP">
            <summary>Tile the texture at every (u,v) integer junction. For example, for u values between 0 and 3, the texture is repeated three times.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE.D3D11_TEXTURE_ADDRESS_MIRROR">
            <summary>Flip the texture at every (u,v) integer junction. For u values between 0 and 1, for example, the texture is addressed normally; between 1 and 2, the texture is flipped (mirrored); between 2 and 3, the texture is normal again; and so on.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE.D3D11_TEXTURE_ADDRESS_CLAMP">
            <summary>Texture coordinates outside the range [0.0, 1.0] are set to the texture color at 0.0 or 1.0, respectively.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE.D3D11_TEXTURE_ADDRESS_BORDER">
            <summary>Texture coordinates outside the range [0.0, 1.0] are set to the border color specified in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a> or HLSL code.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE.D3D11_TEXTURE_ADDRESS_MIRROR_ONCE">
            <summary>Similar to D3D11_TEXTURE_ADDRESS_MIRROR and D3D11_TEXTURE_ADDRESS_CLAMP. Takes the absolute value of the texture coordinate (thus, mirroring around 0), and then clamps to the maximum value.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION">
            <summary>Unordered-access view options.</summary>
            <remarks>
            <para>This enumeration is used by a unordered access-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_uav_dimension#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_UNKNOWN">
            <summary>The view type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_BUFFER">
            <summary>View the resource as a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_TEXTURE1D">
            <summary>View the resource as a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_TEXTURE1DARRAY">
            <summary>View the resource as a 1D texture array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_TEXTURE2D">
            <summary>View the resource as a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_TEXTURE2DARRAY">
            <summary>View the resource as a 2D texture array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UAV_DIMENSION.D3D11_UAV_DIMENSION_TEXTURE3D">
            <summary>View the resource as a 3D texture array.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC">
            <summary>Specifies the subresources from a resource that are accessible using an unordered-access view.</summary>
            <remarks>
            <para>An unordered-access-view description is passed into <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createunorderedaccessview">ID3D11Device::CreateUnorderedAccessView</a> to create a view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_unordered_access_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> The data format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_unordered_access_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC.ViewDimension">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_uav_dimension">D3D11_UAV_DIMENSION</a></b> The resource type (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_uav_dimension">D3D11_UAV_DIMENSION</a>), which specifies how the resource will be accessed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ns-d3d11-d3d11_unordered_access_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D11.D3D11_USAGE">
            <summary>Identifies expected resource use during rendering. The usage directly reflects whether a resource is accessible by the CPU and/or the graphics processing unit (GPU).</summary>
            <remarks>
            <para>An application identifies the way a resource is intended to be used (its usage) in a resource description. There are several structures for creating resources including: <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_usage#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_USAGE.D3D11_USAGE_DEFAULT">
            <summary>A resource that requires read and write access by the GPU. This is likely to be the most common usage choice.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_USAGE.D3D11_USAGE_IMMUTABLE">
            <summary>A resource that can only be read by the GPU. It cannot be written by the GPU, and cannot be accessed at all by the CPU. This type of resource must be initialized when it is created, since it cannot be changed after creation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_USAGE.D3D11_USAGE_DYNAMIC">
            <summary>
            <para>A resource that is accessible by both the GPU (read only) and the CPU (write only). A dynamic resource is a good choice for a resource that will be updated by the CPU at least once per frame. To update a dynamic resource, use a <b>Map</b> method. For info about how to use dynamic resources, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/how-to--use-dynamic-resources">How to: Use dynamic resources</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/ne-d3d11-d3d11_usage#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D11.D3D11_USAGE.D3D11_USAGE_STAGING">
            <summary>A resource that supports data transfer (copy) from the GPU to the CPU.</summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.GetDataSize">
            <summary>Get the size of the data (in bytes) that is output when calling ID3D11DeviceContext::GetData.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">UINT</a></b> Size of the data (in bytes) that is output when calling GetData.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11asynchronous-getdatasize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC*)">
            <summary>Gets the description for blending state that you used to create the blend-state object.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a> structure that receives a description of the blend state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11blendstate-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>You use the description for blending state in a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createblendstate">ID3D11Device::CreateBlendState</a> method to create the blend-state object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11blendstate-getdesc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*)">
            <summary>Get the properties of a buffer resource.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>*</b> Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>) filled in by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11buffer-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11buffer-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetClassLinkage(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage@)">
            <summary>Gets the ID3D11ClassLinkage object associated with the current HLSL class.</summary>
            <param name="ppLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>**</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a> interface pointer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-getclasslinkage#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For more information about using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking">Dynamic Linking</a>.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-getclasslinkage#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC*)">
            <summary>Gets a description of the current HLSL class.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_class_instance_desc">D3D11_CLASS_INSTANCE_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_class_instance_desc">D3D11_CLASS_INSTANCE_DESC</a> structure that describes the current HLSL class.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For more information about using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking">Dynamic Linking</a>.</para>
            <para>An instance is not restricted to being used for a single type in a single shader. An instance is flexible and can be used for any shader that used the same type name or instance name when the instance was generated.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-getdesc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetInstanceName(Windows.Win32.Foundation.PSTR,System.UIntPtr*)">
            <summary>Gets the instance name of the current HLSL class.</summary>
            <param name="pInstanceName">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPSTR</a></b> The instance name of the current HLSL class.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-getinstancename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pBufferLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a>*</b> The length of the <i>pInstanceName</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-getinstancename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>GetInstanceName will return a valid name only for instances acquired using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11classlinkage-getclassinstance">ID3D11ClassLinkage::GetClassInstance</a>.</para>
            <para>For more information about using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking">Dynamic Linking</a>.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-getinstancename#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetTypeName(Windows.Win32.Foundation.PSTR,System.UIntPtr*)">
            <summary>Gets the type of the current HLSL class.</summary>
            <param name="pTypeName">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPSTR</a></b> Type of the current HLSL class.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-gettypename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pBufferLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a>*</b> The length of the <i>pTypeName</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-gettypename#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>GetTypeName will return a valid name only for instances acquired using <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11classlinkage-getclassinstance">ID3D11ClassLinkage::GetClassInstance</a>.</para>
            <para>For more information about using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking">Dynamic Linking</a>.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classinstance-gettypename#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.GetClassInstance(Windows.Win32.Foundation.PCSTR,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance@)">
            <summary>Gets the class-instance object that represents the specified HLSL class.</summary>
            <param name="pClassInstanceName">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b> The name of a class for which to get the class instance.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-getclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="InstanceIndex">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the class instance.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-getclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppInstance">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface to initialize.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-getclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-getclassinstance">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.CreateClassInstance(Windows.Win32.Foundation.PCSTR,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance@)">
            <summary>Initializes a class-instance object that represents an HLSL class instance.</summary>
            <param name="pClassTypeName">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCSTR</a></b> The type name of a class to initialize.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ConstantBufferOffset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Identifies the constant buffer that contains the class data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ConstantVectorOffset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The four-component vector offset from the start of the constant buffer where the class data will begin. Consequently, this is not a byte offset.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="TextureOffset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The texture slot for the first texture; there may be multiple textures following the offset.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SamplerOffset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The sampler slot for the first sampler; there may be multiple samplers following the offset.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppInstance">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a> interface to initialize.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-createclassinstance#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11classlinkage-createclassinstance">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.GetContextFlags">
            <summary>Gets the initialization flags associated with the deferred context that created the command list.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">UINT</a></b> The context flag is reserved for future use and is always 0.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11commandlist-getcontextflags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*)">
            <summary>Get a counter description.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>*</b> Pointer to a counter description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11counter-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11counter-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*)">
            <summary>Gets the description for depth-stencil state that you used to create the depth-stencil-state object.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a> structure that receives a description of the depth-stencil state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11depthstencilstate-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>You use the description for depth-stencil state in a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createdepthstencilstate">ID3D11Device::CreateDepthStencilState</a> method to create the depth-stencil-state object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11depthstencilstate-getdesc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*)">
            <summary>Get the depth-stencil view.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>*</b> Pointer to a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11depthstencilview-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11depthstencilview-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateBuffer(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer@)">
            <summary>Creates a buffer (vertex buffer, index buffer, or shader-constant buffer).</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a> structure that describes the buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pInitialData">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structure that describes  the initialization data; use <b>NULL</b> to allocate space only (with the exception that it cannot be <b>NULL</b> if the usage flag is <b>D3D11_USAGE_IMMUTABLE</b>).</para>
            <para>If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the buffer is undefined. In this case, you need to write the buffer content some other way before the resource is read.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Address of a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> interface for the buffer object created. Set this parameter to <b>NULL</b> to validate the other input parameters (<b>S_FALSE</b> indicates a pass).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>E_OUTOFMEMORY</b> if there is insufficient memory to create the buffer. See <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createbuffer">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture1D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D@)">
            <summary>Creates an array of 1D textures.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a> structure that describes a 1D texture resource. To create a typeless resource that can be interpreted at runtime into different, compatible formats, specify a typeless format in the texture description. To generate mipmap levels automatically, set the number of mipmap levels to 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture1d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pInitialData">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a>*</b> A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures that describe subresources for the 1D texture resource. Applications can't specify <b>NULL</b> for <i>pInitialData</i> when creating IMMUTABLE resources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>). If the resource is multisampled, <i>pInitialData</i> must be <b>NULL</b> because multisampled resources cannot be initialized with data when they are created. If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the resource is undefined. In this case, you need to write the resource content some other way before the resource is read. You can determine the size of this array from values in the <b>MipLevels</b> and <b>ArraySize</b> members of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a> structure to which <i>pDesc</i> points by using the following calculation: MipLevels * ArraySize For more information about this array size, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture1d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppTexture1D">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture1d">ID3D11Texture1D</a>**</b> A pointer to a buffer that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture1d">ID3D11Texture1D</a> interface for the created texture. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture1d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If the method succeeds, the return code is S_OK. See <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for failing error codes.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture1d">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture2D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D@)">
            <summary>Create an array of 2D textures.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure that describes a 2D texture resource. To create a typeless resource that can be interpreted at runtime into different, compatible formats, specify a typeless format in the texture description. To generate mipmap levels automatically, set the number of mipmap levels to 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture2d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pInitialData">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a>*</b> A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures that describe subresources for the 2D texture resource. Applications can't specify <b>NULL</b> for <i>pInitialData</i> when creating IMMUTABLE resources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>). If the resource is multisampled, <i>pInitialData</i> must be <b>NULL</b> because multisampled resources cannot be initialized with data when they are created. If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the resource is undefined. In this case, you need to write the resource content some other way before the resource is read. You can determine the size of this array from values in the <b>MipLevels</b> and <b>ArraySize</b> members of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure to which <i>pDesc</i> points by using the following calculation: MipLevels * ArraySize For more information about this array size, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture2d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppTexture2D">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture2d">ID3D11Texture2D</a>**</b> A pointer to a buffer that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture2d">ID3D11Texture2D</a> interface for the created texture. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture2d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If the method succeeds, the return code is S_OK. See <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for failing error codes.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture2d">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture3D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D@)">
            <summary>Create a single 3D texture.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a> structure that describes a 3D texture resource. To create a typeless resource that can be interpreted at runtime into different, compatible formats, specify a typeless format in the texture description. To generate mipmap levels automatically, set the number of mipmap levels to 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture3d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pInitialData">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a>*</b> A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_subresource_data">D3D11_SUBRESOURCE_DATA</a> structures that describe subresources for the 3D texture resource. Applications cannot specify <b>NULL</b> for <i>pInitialData</i> when creating IMMUTABLE resources (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE</a>). If the resource is multisampled, <i>pInitialData</i> must be <b>NULL</b> because multisampled resources cannot be initialized with data when they are created. If you don't pass anything to <i>pInitialData</i>, the initial content of the memory for the resource is undefined. In this case, you need to write the resource content some other way before the resource is read. You can determine the size of this array from the value in the <b>MipLevels</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a> structure to which <i>pDesc</i> points. Arrays of 3D volume textures are not supported. For more information about this array size, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture3d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppTexture3D">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture3d">ID3D11Texture3D</a>**</b> A pointer to a buffer that receives a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11texture3d">ID3D11Texture3D</a> interface for the created texture. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture3d#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If the method succeeds, the return code is S_OK. See <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for failing error codes.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createtexture3d">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView@)">
            <summary>Create a shader-resource view for accessing data in a resource.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Pointer to the resource that will serve as input to a shader. This resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_SHADER_RESOURCE </a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>*</b> Pointer to a shader-resource view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>). Set this parameter to <b>NULL</b> to create a view that accesses the entire resource (using the format the resource was created with).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSRView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return <b>S_FALSE</b> if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createshaderresourceview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView@)">
            <summary>Creates a view for accessing an unordered access resource.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> that represents a resources that will serve as an input to a shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>*</b> Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a> that represents a shader-resource view description. Set this parameter to <b>NULL</b> to create a view that accesses the entire resource (using the format the resource was created with).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUAView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> that represents an unordered-access view. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createunorderedaccessview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView@)">
            <summary>Creates a render-target view for accessing resource data.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> that represents a render target. This resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_RENDER_TARGET</a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a> that represents a render-target view description. Set this parameter to <b>NULL</b> to create a view that accesses all of the subresources in mipmap level 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRTView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createrendertargetview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView@)">
            <summary>Create a depth-stencil view for accessing resource data.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Pointer to the resource that will serve as the depth-stencil surface. This resource must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_DEPTH_STENCIL</a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>*</b> Pointer to a depth-stencil-view description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_view_desc">D3D11_DEPTH_STENCIL_VIEW_DESC</a>). Set this parameter to <b>NULL</b> to create a view that accesses mipmap level 0 of the entire resource (using the format the resource was created with).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>. Set this parameter to <b>NULL</b> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdepthstencilview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateInputLayout(Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC*,System.UInt32,System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout@)">
            <summary>Create an input-layout object to describe the input-buffer data for the input-assembler stage.</summary>
            <param name="pInputElementDescs">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_input_element_desc">D3D11_INPUT_ELEMENT_DESC</a>*</b> An array of the input-assembler stage input data types; each type is described by an element description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_input_element_desc">D3D11_INPUT_ELEMENT_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumElements">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of input-data types in the array of input-elements.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pShaderBytecodeWithInputSignature">
            <para>Type: <b>const void*</b> A pointer to the compiled shader.  The compiled shader code contains a input signature which is validated against the array of elements. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppInputLayout">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>**</b> A pointer to the input-layout object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>). To validate the other input parameters, set this pointer to be <b>NULL</b> and verify that the method returns S_FALSE.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If the method succeeds, the return code is S_OK. See <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for failing error codes.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createinputlayout">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateVertexShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader@)">
            <summary>Create a vertex-shader object from a compiled shader.</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createvertexshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled vertex shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createvertexshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createvertexshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppVertexShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>**</b> Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all parameters pass validation this API will return <b>S_FALSE</b> instead of <b>S_OK</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createvertexshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createvertexshader">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateGeometryShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader@)">
            <summary>Create a geometry shader.</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled geometry shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppGeometryShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>**</b> Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all parameters pass validation this API will return S_FALSE instead of S_OK.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshader">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateGeometryShaderWithStreamOutput(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY*,System.UInt32,System.UInt32*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader@)">
            <summary>Creates a geometry shader that can write to streaming output buffers.</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to the compiled geometry shader for a standard geometry shader plus stream output. For info on how to get this pointer, see <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-using-shaders-10">Getting a Pointer to a Compiled Shader</a>. To create the stream output without using a geometry shader, pass a pointer to the output signature for the prior stage. To obtain this output signature, call the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3dgetoutputsignatureblob">D3DGetOutputSignatureBlob</a> compiler function. You can also pass a pointer to the compiled shader for the prior stage (for example, the <a href="https://docs.microsoft.com/previous-versions/bb205146(v=vs.85)">vertex-shader stage</a> or <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-tessellation">domain-shader stage</a>). This compiled shader provides the output signature for the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled geometry shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSODeclaration">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_so_declaration_entry">D3D11_SO_DECLARATION_ENTRY</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_so_declaration_entry">D3D11_SO_DECLARATION_ENTRY</a> array. Cannot be <b>NULL</b> if NumEntries &gt; 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumEntries">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of entries in the stream output declaration ( ranges from 0 to D3D11_SO_STREAM_COUNT * D3D11_SO_OUTPUT_COMPONENT_COUNT ).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pBufferStrides">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> An array of buffer strides; each stride is the size of an element for that buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumStrides">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of strides (or buffers) in <i>pBufferStrides</i> (ranges from 0 to D3D11_SO_BUFFER_SLOT_COUNT).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="RasterizedStream">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index number of the stream to be sent to the rasterizer stage (ranges from 0 to D3D11_SO_STREAM_COUNT - 1). Set to D3D11_SO_NO_RASTERIZED_STREAM if no stream is to be rasterized.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppGeometryShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a> interface, representing the geometry shader that was created. Set this to <b>NULL</b> to validate the other parameters; if validation passes, the method will return S_FALSE instead of S_OK.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-creategeometryshaderwithstreamoutput">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreatePixelShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader@)">
            <summary>Create a pixel shader.</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createpixelshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled pixel shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createpixelshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createpixelshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppPixelShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>**</b> Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all parameters pass validation this API will return S_FALSE instead of S_OK.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createpixelshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createpixelshader">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateHullShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,Windows.Win32.Graphics.Direct3D11.ID3D11HullShader@)">
            <summary>Create a hull shader.</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to a compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createhullshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createhullshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createhullshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppHullShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>**</b> Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a> interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createhullshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createhullshader">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDomainShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader@)">
            <summary>Create a domain shader.</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to a compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdomainshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdomainshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a class linkage interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>); the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdomainshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDomainShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>**</b> Address of a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated, and if all parameters pass validation this API will return <b>S_FALSE</b> instead of <b>S_OK</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdomainshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdomainshader">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateComputeShader(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader@)">
            <summary>Create a compute shader.</summary>
            <param name="pShaderBytecode">
            <para>Type: <b>const void*</b> A pointer to a compiled shader.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createcomputeshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BytecodeLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> Size of the compiled shader in <i>pShaderBytecode</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createcomputeshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClassLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>, which represents  class linkage interface; the value can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createcomputeshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppComputeShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a> interface. If this is <b>NULL</b>, all other parameters will be validated; if validation passes, CreateComputeShader returns S_FALSE instead of S_OK.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createcomputeshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns E_OUTOFMEMORY if there is insufficient memory to create the compute shader. See <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createcomputeshader">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateClassLinkage(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage@)">
            <summary>Creates class linkage libraries to enable dynamic shader linkage.</summary>
            <param name="ppLinkage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>**</b> A pointer to a class-linkage interface pointer (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classlinkage">ID3D11ClassLinkage</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createclasslinkage#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createclasslinkage">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateBlendState(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11BlendState@)">
            <summary>Create a blend-state object that encapsules blend state for the output-merger stage.</summary>
            <param name="pBlendStateDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a>*</b> Pointer to a blend-state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_blend_desc">D3D11_BLEND_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppBlendState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>**</b> Address of a pointer to the blend-state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns E_OUTOFMEMORY if there is insufficient memory to create the blend-state object. See <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createblendstate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDepthStencilState(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState@)">
            <summary>Create a depth-stencil state object that encapsulates depth-stencil test information for the output-merger stage.</summary>
            <param name="pDepthStencilDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>*</b> Pointer to a depth-stencil state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDepthStencilState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>**</b> Address of a pointer to the depth-stencil state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdepthstencilstate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateRasterizerState(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState@)">
            <summary>Create a rasterizer state object that tells the rasterizer stage how to behave.</summary>
            <param name="pRasterizerDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>*</b> Pointer to a rasterizer state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createrasterizerstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRasterizerState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>**</b> Address of a pointer to the rasterizer state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createrasterizerstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns E_OUTOFMEMORY if there is insufficient memory to create the compute shader.  See <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createrasterizerstate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateSamplerState(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState@)">
            <summary>Create a sampler-state object that encapsulates sampling information for a texture.</summary>
            <param name="pSamplerDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a>*</b> Pointer to a sampler state description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createsamplerstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplerState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Address of a pointer to the sampler state object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createsamplerstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createsamplerstate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateQuery(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Query@)">
            <summary>This interface encapsulates methods for querying information from the GPU.</summary>
            <param name="pQueryDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>*</b> Pointer to a query description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createquery#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppQuery">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11query">ID3D11Query</a>**</b> Address of a pointer to the query object created (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11query">ID3D11Query</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createquery#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns E_OUTOFMEMORY if there is insufficient memory to create the query object. See <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createquery">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreatePredicate(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Predicate@)">
            <summary>Creates a predicate.</summary>
            <param name="pPredicateDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>*</b> Pointer to a query description where the type of query must be a D3D11_QUERY_SO_OVERFLOW_PREDICATE or D3D11_QUERY_OCCLUSION_PREDICATE (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createpredicate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppPredicate">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>**</b> Address of a pointer to a predicate (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createpredicate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createpredicate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Counter@)">
            <summary>Create a counter object for measuring GPU performance.</summary>
            <param name="pCounterDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>*</b> Pointer to a counter description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppCounter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11counter">ID3D11Counter</a>**</b> Address of a pointer to a counter (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11counter">ID3D11Counter</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If this function succeeds, it will return S_OK. If it fails, possible return values are: S_FALSE, E_OUTOFMEMORY, DXGI_ERROR_UNSUPPORTED, DXGI_ERROR_NONEXCLUSIVE, or E_INVALIDARG. DXGI_ERROR_UNSUPPORTED is returned whenever the application requests to create a well-known counter, but the current device does not support it. DXGI_ERROR_NONEXCLUSIVE indicates that another device object is currently using the counters, so they cannot be used by this device at the moment. E_INVALIDARG is returned whenever an out-of-range well-known or device-dependent counter is requested, or when the simulataneously active counters have been exhausted.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createcounter">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDeferredContext(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext@)">
            <summary>Creates a deferred context, which can record command lists.</summary>
            <param name="ContextFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Reserved for future use. Pass 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdeferredcontext#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDeferredContext">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a>**</b> Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> interface pointer is initialized.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdeferredcontext#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the following:</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-createdeferredcontext">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.OpenSharedResource(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)">
            <summary>Give a device access to a shared resource created on a different device.</summary>
            <param name="hResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HANDLE</a></b> A resource handle. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-opensharedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ReturnedInterface">
            <para>Type: <b>REFIID</b> The globally unique identifier (GUID) for the resource interface. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-opensharedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppResource">
            <para>Type: <b>void**</b> Address of a pointer to the resource we are gaining access to.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-opensharedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-opensharedresource">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckFormatSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32*)">
            <summary>Get the support of a given format on the installed video device.</summary>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> enumeration that describes a format for which to check for support.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkformatsupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFormatSupport">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A bitfield of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_format_support">D3D11_FORMAT_SUPPORT</a> enumeration values describing how the specified format is supported on the installed device. The values are ORed together.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkformatsupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns E_INVALIDARG if the <i>Format</i> parameter is <b>NULL</b>, or returns E_FAIL if the described format does not exist.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkformatsupport">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckMultisampleQualityLevels(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*)">
            <summary>Get the number of quality levels available during multisampling.</summary>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> The texture format. See <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SampleCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of samples during multisampling.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumQualityLevels">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Number of quality levels supported by the adapter. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckCounterInfo(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO*)">
            <summary>Get a counter's information.</summary>
            <param name="pCounterInfo">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_info">D3D11_COUNTER_INFO</a>*</b> Pointer to counter information (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_info">D3D11_COUNTER_INFO</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounterinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounterinfo">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE*,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*)">
            <summary>Get the type, name, units of measure, and a description of an existing counter.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>*</b> Pointer to a counter description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_counter_desc">D3D11_COUNTER_DESC</a>). Specifies which counter information is to be retrieved about.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter_type">D3D11_COUNTER_TYPE</a>*</b> Pointer to the data type of a counter (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_counter_type">D3D11_COUNTER_TYPE</a>). Specifies the data type of the counter being retrieved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pActiveCounters">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to the number of hardware counters that are needed for this counter type to be created. All instances of the same counter type use the same hardware counters.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="szName">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPSTR</a></b> String to be filled with a brief name for the counter. May be <b>NULL</b> if the application is not interested in the name of the counter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNameLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Length of the string returned to szName. Can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="szUnits">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPSTR</a></b> Name of the units a counter measures, provided the memory the pointer points to has enough room to hold the string. Can be <b>NULL</b>. The returned string will always be in English.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pUnitsLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Length of the string returned to szUnits. Can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="szDescription">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPSTR</a></b> A description of the counter, provided the memory the pointer points to has enough room to hold the string. Can be <b>NULL</b>. The returned string will always be in English.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDescriptionLength">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Length of the string returned to szDescription. Can be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkcounter">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckFeatureSupport(Windows.Win32.Graphics.Direct3D11.D3D11_FEATURE,System.Void*,System.UInt32)">
            <summary>Gets information about the features that are supported by the current graphics driver.</summary>
            <param name="Feature">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_feature">D3D11_FEATURE</a> enumerated type that describes which feature to query for support.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFeatureSupportData">
            <para>Type: <b>void*</b> Upon completion of the method, the passed structure is filled with data that describes the feature support.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="FeatureSupportDataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of the structure passed to the <i>pFeatureSupportData</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns E_INVALIDARG if an unsupported data type is passed to the <i>pFeatureSupportData</i> parameter or a size mismatch is detected for the <i>FeatureSupportDataSize</i> parameter.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-checkfeaturesupport">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)">
            <summary>Get application-defined data from a device.</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a variable that on input contains the size, in bytes, of the buffer that <i>pData</i> points to, and on output contains the size, in bytes, of the amount of data that <b>GetPrivateData</b> retrieved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>void*</b> A pointer to a buffer that <b>GetPrivateData</b>  fills with data from the device if <i>pDataSize</i> points to a value that specifies a buffer large enough to hold the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the codes described in the topic <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetPrivateData(System.Guid*,System.UInt32,System.Void*)">
            <summary>Set data to a device and associate that data with a guid.</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Size of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const void*</b> Pointer to the data to be stored with this device. If pData is <b>NULL</b>, DataSize must also be 0, and any data previously associated with the guid will be destroyed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetPrivateDataInterface(System.Guid*,System.Object)">
            <summary>Associate an IUnknown-derived interface with this device child and associate that interface with an application-defined guid.</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const IUnknown*</b> Pointer to an IUnknown-derived interface to be associated with the device child.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setprivatedatainterface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetFeatureLevel">
            <summary>Gets the feature level of the hardware device.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a></b> A member of the <a href="/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a> enumerated type that describes the feature level of the hardware device.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getfeaturelevel">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetCreationFlags">
            <summary>Get the flags used during the call to create the device with D3D11CreateDevice.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">UINT</a></b> A bitfield containing the flags used to create the device. See <a href="/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_FLAG</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getcreationflags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetDeviceRemovedReason">
            <summary>Get the reason why the device was removed.</summary>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Possible return values include:</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getdeviceremovedreason">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetImmediateContext(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext@)">
            <summary>Gets an immediate context, which can play back command lists.</summary>
            <param name="ppImmediateContext">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a>**</b> Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> interface pointer is initialized.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getimmediatecontext#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The <b>GetImmediateContext</b> method returns an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> object that represents an immediate context which is used to perform rendering that you want immediately submitted to a device. For most applications, an immediate context is the primary object that is used to draw your scene. The <b>GetImmediateContext</b> method increments the reference count of the immediate context by one. Therefore, you must call <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nf-unknwn-iunknown-release">Release</a> on the returned interface pointer when you are done with it to avoid a memory leak.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getimmediatecontext#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetExceptionMode(System.UInt32)">
            <summary>Get the exception-mode flags.</summary>
            <param name="RaiseFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that contains one or more exception flags; each flag specifies a condition which will cause an exception to be raised. The flags are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_raise_flag">D3D11_RAISE_FLAG</a>. A default value of 0 means there are no flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setexceptionmode#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-setexceptionmode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetExceptionMode">
            <summary>Get the exception-mode flags.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that contains one or more exception flags; each flag specifies a condition which will cause an exception to be raised. The flags are listed in <a href="/windows/desktop/api/d3d11/ne-d3d11-d3d11_raise_flag">D3D11_RAISE_FLAG</a>. A default value of 0 means there are no flags.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11device-getexceptionmode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.GetDevice(Windows.Win32.Graphics.Direct3D11.ID3D11Device@)">
            <summary>Get a pointer to the device that created this interface.</summary>
            <param name="ppDevice">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>**</b> Address of a pointer to a device (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-getdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one, so be sure to call ::release() on the returned pointer(s) before they are freed or else you will have a memory leak.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-getdevice#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)">
            <summary>Get application-defined data from a device child.</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a variable that on input contains the size, in bytes, of the buffer that <i>pData</i> points to, and on output contains the size, in bytes, of the amount of data that <b>GetPrivateData</b>retrieved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>void*</b> A pointer to a buffer that <b>GetPrivateData</b>fills with data from the device child if <i>pDataSize</i> points to a value that specifies a buffer large enough to hold the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-getprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.SetPrivateData(System.Guid*,System.UInt32,System.Void*)">
            <summary>Set application-defined data to a device child and associate that data with an application-defined guid.</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Size of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const void*</b> Pointer to the data to be stored with this device child. If pData is <b>NULL</b>, DataSize must also be 0, and any data previously associated with the specified guid will be destroyed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-setprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.SetPrivateDataInterface(System.Guid*,System.Object)">
            <summary>Associate an IUnknown-derived interface with this device child and associate that interface with an application-defined guid.</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> Guid associated with the interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const IUnknown*</b> Pointer to an IUnknown-derived interface to be associated with the device child.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the following <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicechild-setprivatedatainterface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Sets the constant buffers used by the vertex shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para>The Direct3D 11.1 runtime, which is available starting with Windows 8, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4\*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4\*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.</para>
            <para>If the application wants the shader to access other parts of the buffer, it must call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-vssetconstantbuffers1">VSSetConstantBuffers1</a> method instead.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Bind an array of shader resources to the pixel shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)">
            <summary>Sets a pixel shader to the device.</summary>
            <param name="pPixelShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>*</b> Pointer to a pixel shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para>The maximum number of instances a shader can have is 256. Set ppClassInstances to <b>NULL</b> if no interfaces are used in the shader. If it is not <b>NULL</b>, the number of class instances must match the number of interfaces used in the shader. Furthermore, each interface pointer must have a corresponding class instance or the assigned shader will be disabled.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Set an array of sampler states to the pixel shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)">
            <summary>Set a vertex shader to the device.</summary>
            <param name="pVertexShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>*</b> Pointer to a vertex shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The maximum number of instances a shader can have is 256.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawIndexed(System.UInt32,System.UInt32,System.Int32)">
            <summary>Draw indexed, non-instanced primitives.</summary>
            <param name="IndexCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of indices to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexed#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartIndexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The location of the first index read by the GPU from the index buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexed#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BaseVertexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">INT</a></b> A value added to each index before reading a vertex from the vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexed#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>A draw API submits work to the rendering pipeline. If the sum of both indices is negative, the result of the function call is undefined.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexed#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Draw(System.UInt32,System.UInt32)">
            <summary>Draw non-indexed, non-instanced primitives.</summary>
            <param name="VertexCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of vertices to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-draw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartVertexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the first vertex, which is usually an offset in a vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-draw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>Draw</b> submits work to the rendering pipeline. The vertex data for a draw call normally comes from a vertex buffer that is bound to the pipeline. Even without any vertex buffer bound to the pipeline, you can generate your own vertex data in your vertex shader by using the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-semantics">SV_VertexID</a> system-value semantic to determine the current vertex that the runtime is processing.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-draw#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Map(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_MAP,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_MAPPED_SUBRESOURCE*)">
            <summary>Gets a pointer to the data contained in a subresource, and denies the GPU access to that subresource.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-map#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Subresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index number of the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-subresources">subresource</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-map#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="MapType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map">D3D11_MAP</a>-typed value that specifies the CPU's read and write permissions for a resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-map#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="MapFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
            <para><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_map_flag">Flag</a> that specifies what the CPU does when the GPU is busy. This flag is optional.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-map#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pMappedResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_mapped_subresource">D3D11_MAPPED_SUBRESOURCE</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_mapped_subresource">D3D11_MAPPED_SUBRESOURCE</a> structure for the mapped subresource. See the Remarks section regarding NULL pointers.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-map#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            <para>This method also returns <b>DXGI_ERROR_WAS_STILL_DRAWING</b> if <i>MapFlags</i> specifies <b>D3D11_MAP_FLAG_DO_NOT_WAIT</b> and the GPU is not yet finished with the resource.</para>
            <para>This method also returns <b>DXGI_ERROR_DEVICE_REMOVED</b> if <i>MapType</i> allows any CPU read access and the video card has been removed.</para>
            <para>For more information about these error codes, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-map">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Unmap(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32)">
            <summary>Invalidate the pointer to a resource and reenable the GPU's access to that resource.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-unmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Subresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A subresource to be unmapped.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-unmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For info about how to use <b>Unmap</b>, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/how-to--use-dynamic-resources">How to: Use dynamic resources</a>.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-unmap#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Sets the constant buffers used by the pixel shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para>The Direct3D 11.1 runtime, which is available on Windows 8 and later operating systems, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4*32-bit components each). When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.</para>
            <para>To enable the shader to access other parts of the buffer, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-pssetconstantbuffers1">PSSetConstantBuffers1</a> instead of <b>PSSetConstantBuffers</b>. <b>PSSetConstantBuffers1</b> has additional parameters <i>pFirstConstant</i> and <i>pNumConstants</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-pssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IASetInputLayout(Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout)">
            <summary>Bind an input-layout object to the input-assembler stage.</summary>
            <param name="pInputLayout">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>*</b> A pointer to the input-layout object (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>), which describes the input buffers that will be read by the IA stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Input-layout objects describe how vertex buffer data is streamed into the IA pipeline stage. To create an input-layout object, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createinputlayout">ID3D11Device::CreateInputLayout</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetinputlayout#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[],System.UInt32*,System.UInt32*)">
            <summary>Bind an array of vertex buffers to the input-assembler stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The first input slot for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1) are available; the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">maximum number of input slots depends on the feature level</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of vertex buffers in the array. The number of buffers (plus the starting slot) can't exceed the total number of IA-stage input slots (ranges from 0 to D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppVertexBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> A pointer to an array of vertex buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>). The vertex buffers must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_VERTEX_BUFFER</a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pStrides">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to an array of stride values; one stride value for each buffer in the vertex-buffer array. Each stride is the size (in bytes) of the elements that are to be used from that vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pOffsets">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to an array of offset values; one offset value for each buffer in the vertex-buffer array. Each offset is the number of bytes between the first element of a vertex buffer and the first element that will be used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For info about creating vertex buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-buffers-vertex-how-to">How to: Create a Vertex Buffer</a>.</para>
            <para>Calling this method using a buffer that is currently bound for writing (that is, bound to the stream output pipeline stage) will effectively bind <b>NULL</b> instead because a buffer can't be bound as both an input and an output at the same time.</para>
            <para>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetvertexbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32)">
            <summary>Bind an index buffer to the input-assembler stage.</summary>
            <param name="pIndexBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> object, that contains indices. The index buffer must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_INDEX_BUFFER</a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> that specifies the format of the data in the index buffer. The only formats allowed for index buffer data are 16-bit (DXGI_FORMAT_R16_UINT) and 32-bit (DXGI_FORMAT_R32_UINT) integers.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Offset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Offset (in bytes) from the start of the index buffer to the first index to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For information about creating index buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-buffers-index-how-to">How to: Create an Index Buffer</a>.</para>
            <para>Calling this method using a buffer that is currently bound for writing (i.e. bound to the stream output pipeline stage) will effectively bind <b>NULL</b> instead because a buffer cannot be bound as both an input and an output at the same time.</para>
            <para>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime.</para>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetindexbuffer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawIndexedInstanced(System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)">
            <summary>Draw indexed, instanced primitives.</summary>
            <param name="IndexCountPerInstance">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/winprog/windows-data-types">UINT</a></b> Number of indices read from the index buffer for each instance.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="InstanceCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/winprog/windows-data-types">UINT</a></b> Number of instances to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartIndexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/winprog/windows-data-types">UINT</a></b> The location of the first index read by the GPU from the index buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BaseVertexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/winprog/windows-data-types">INT</a></b> A value added to each index before reading a vertex from the vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartInstanceLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/winprog/windows-data-types">UINT</a></b> A value added to each index before reading per-instance data from a vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>A draw API submits work to the rendering pipeline. Instancing may extend performance by reusing the same geometry to draw multiple objects in a scene. One example of instancing could be to draw the same object with different positions and colors. Instancing requires multiple vertex buffers: at least one for per-vertex data and a second buffer for per-instance data. The second buffer is needed only if the input layout that you use has elements that use [D3D11_INPUT_PER_INSTANCE_DATA](./ne-d3d11-d3d11_input_classification.md) as the input element classification.uffer for per-instance data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstanced#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawInstanced(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>Draw non-indexed, instanced primitives.</summary>
            <param name="VertexCountPerInstance">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of vertices to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="InstanceCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of instances to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartVertexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the first vertex.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartInstanceLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value added to each index before reading per-instance data from a vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>A draw API submits work to the rendering pipeline. Instancing may extend performance by reusing the same geometry to draw multiple objects in a scene. One example of instancing could be to draw the same object with different positions and colors. The vertex data for an instanced draw call normally comes from a vertex buffer that is bound to the pipeline. However, you could also provide the vertex data from a shader that has instanced data identified with a system-value semantic (SV_InstanceID).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawinstanced#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Sets the constant buffers used by the geometry shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. You can't use the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11shaderreflectionconstantbuffer">ID3D11ShaderReflectionConstantBuffer</a> interface to get information about what is currently bound to the pipeline in the device context. But you can use <b>ID3D11ShaderReflectionConstantBuffer</b> to get information from a compiled shader. For example, you can use <b>ID3D11ShaderReflectionConstantBuffer</b> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11shaderreflectionvariable">ID3D11ShaderReflectionVariable</a> to determine the slot in which a geometry shader expects a constant buffer. You can then pass this slot number to <b>GSSetConstantBuffers</b> to set the constant buffer. You can call the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/d3d11reflect">D3D11Reflect</a> function to retrieve the address of a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nn-d3d11shader-id3d11shaderreflection">ID3D11ShaderReflection</a> interface and then call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/nf-d3d11shader-id3d11shaderreflection-getconstantbufferbyname">ID3D11ShaderReflection::GetConstantBufferByName</a> to get a pointer to <b>ID3D11ShaderReflectionConstantBuffer</b>. The Direct3D 11.1 runtime, which is available starting with Windows 8, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer. If the application wants the shader to access other parts of the buffer, it must call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-gssetconstantbuffers1">GSSetConstantBuffers1</a> method instead.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)">
            <summary>Set a geometry shader to the device.</summary>
            <param name="pShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>*</b> Pointer to a geometry shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The maximum number of instances a shader can have is 256.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IASetPrimitiveTopology(Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY)">
            <summary>Bind information about the primitive type, and data order that describes input data for the input assembler stage.</summary>
            <param name="Topology">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476189(v=vs.85)">D3D11_PRIMITIVE_TOPOLOGY</a></b> The type of primitive and ordering of the primitive data (see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476189(v=vs.85)">D3D11_PRIMITIVE_TOPOLOGY</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetprimitivetopology#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iasetprimitivetopology#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Bind an array of shader resources to the vertex-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (range is from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (range is from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Set an array of sampler states to the vertex shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Begin(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous)">
            <summary>Mark the beginning of a series of commands.</summary>
            <param name="pAsync">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a> interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-begin#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Use <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a> to mark the ending of the series of commands.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-begin#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.End(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous)">
            <summary>Mark the end of a series of commands.</summary>
            <param name="pAsync">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a> interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-end#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Use <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> to mark the beginning of the series of commands.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-end#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetData(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous,System.Void*,System.UInt32,System.UInt32)">
            <summary>Get data from the graphics processing unit (GPU) asynchronously.</summary>
            <param name="pAsync">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11asynchronous">ID3D11Asynchronous</a> interface for the object about which <b>GetData</b> retrieves data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getdata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>void*</b> Address of memory that will receive the data. If <b>NULL</b>, <b>GetData</b> will be used only to check status. The type of data output depends on the type of asynchronous interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getdata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Size of the data to retrieve or 0. Must be 0 when <i>pData</i> is <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getdata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="GetDataFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Optional flags. Can be 0 or any combination of the flags enumerated by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_async_getdata_flag">D3D11_ASYNC_GETDATA_FLAG</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getdata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>. A return value of S_OK indicates that the data at <i>pData</i> is available for the calling application to access. A return value of S_FALSE indicates that the data is not yet available. If the data is not yet available, the application must call <b>GetData</b> until the data is available.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getdata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SetPredication(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate,Windows.Win32.Foundation.BOOL)">
            <summary>Set a rendering predicate.</summary>
            <param name="pPredicate">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a> interface that represents the rendering predicate. A <b>NULL</b> value indicates "no" predication; in this case, the value of <i>PredicateValue</i> is irrelevant but will be preserved for <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getpredication">ID3D11DeviceContext::GetPredication</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-setpredication#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="PredicateValue">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> If <b>TRUE</b>, rendering will be affected by when the predicate's conditions are met. If <b>FALSE</b>, rendering will be affected when the conditions are not met.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-setpredication#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The predicate must be in the "issued" or "signaled" state to be used for predication. While the predicate is set for predication, calls to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-begin">ID3D11DeviceContext::Begin</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-end">ID3D11DeviceContext::End</a> are invalid. Use this method to denote that subsequent rendering and resource manipulation commands are not actually performed if the resulting predicate data of the predicate is equal to the <i>PredicateValue</i>. However, some predicates are only hints, so they may not actually prevent operations from being performed. The primary usefulness of predication is to allow an application to issue rendering and resource manipulation commands without taking the performance hit of spinning, waiting for <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> to return. So, predication can occur while <b>ID3D11DeviceContext::GetData</b> returns <b>S_FALSE</b>. Another way to think of it: an application can also use predication as a fallback, if it is possible that <b>ID3D11DeviceContext::GetData</b> returns <b>S_FALSE</b>. If <b>ID3D11DeviceContext::GetData</b> returns <b>S_OK</b>, the application can skip calling the rendering and resource manipulation commands manually with it's own application logic. Rendering and resource manipulation commands for Direct3D 11 include these Draw, Dispatch, Copy, Update, Clear, Generate, and Resolve operations. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-setpredication#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Bind an array of shader resources to the geometry shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Set an array of sampler states to the geometry shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView)">
            <summary>Bind one or more render targets atomically and the depth-stencil buffer to the output-merger stage.</summary>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of render targets to bind (ranges between 0 and <b>D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT</b>). If this parameter is nonzero, the number of entries in the array to which <i>ppRenderTargetViews</i> points must equal the number in this parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRenderTargetViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>*</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a> that represent the render targets to bind to the device. If this parameter is <b>NULL</b> and <i>NumViews</i> is 0, no render targets are bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a> that represents the depth-stencil view to bind to the device. If this parameter is <b>NULL</b>, the depth-stencil view is not bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The maximum number of active render targets a device can have active at any given time is set by a #define in D3D11.h called <b>D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT</b>. It is invalid to try to set the same subresource to multiple render target slots. Any render targets not defined by this call are set to <b>NULL</b>. If any subresources are also currently bound for reading in a different stage or writing (perhaps in a different part of the pipeline), those bind points will be set to <b>NULL</b>, in order to prevent the same subresource from being read and written simultaneously in a single rendering operation. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para>If the render-target views were created from an array resource type, all of the render-target views must have the same array size. This restriction also applies to the depth-stencil view, its array size must match that of the render-target views being bound. The pixel shader must be able to simultaneously render to at least eight separate render targets. All of these render targets must access the same type of resource: <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-buffer">Buffer</a>, <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture1d">Texture1D</a>, <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture1darray">Texture1DArray</a>, <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2d">Texture2D</a>, <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture2darray">Texture2DArray</a>, <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/sm5-object-texture3d">Texture3D</a>, or <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-type">TextureCube</a>. All render targets must have the same size in all dimensions (width and height, and depth for 3D or array size for *Array types). If render targets use multisample anti-aliasing, all bound render targets and depth buffer must be the same form of multisample resource (that is, the sample counts must be the same). Each render target can have a different data format. These render target formats are not required to have identical bit-per-element counts. Any combination of the eight slots for render targets can have a render target set or not set. The same resource view cannot be bound to multiple render target slots simultaneously. However, you can set multiple non-overlapping resource views of a single resource as simultaneous multiple render targets.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargets#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetRenderTargetsAndUnorderedAccessViews(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[],System.UInt32*)">
            <summary>Binds resources to the output-merger stage.</summary>
            <param name="NumRTVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of render targets to bind (ranges between 0 and <b>D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT</b>). If this parameter is nonzero, the number of entries in the array to which <i>ppRenderTargetViews</i> points must equal the number in this parameter. If you set <i>NumRTVs</i> to D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL (0xffffffff), this method does not modify the currently bound render-target views (RTVs) and also does not modify depth-stencil view (DSV).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRenderTargetViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>*</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>s that represent the render targets to bind to the device. If this parameter is <b>NULL</b> and <i>NumRTVs</i> is 0, no render targets are bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a> that represents the depth-stencil view to bind to the device. If this parameter is <b>NULL</b>, the depth-stencil view is not bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="UAVStartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin setting unordered-access views (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1). For the Direct3D 11.1 runtime, which is available starting with Windows 8, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - 1. D3D11_1_UAV_SLOT_COUNT is defined as 64.</para>
            <para>For pixel shaders, <i>UAVStartSlot</i> should be equal to the number of render-target views being bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumUAVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of unordered-access views (UAVs) in <i>ppUnorderedAccessViews</i>. If you set <i>NumUAVs</i> to D3D11_KEEP_UNORDERED_ACCESS_VIEWS (0xffffffff), this method does not modify the currently bound unordered-access views.</para>
            <para>For the Direct3D 11.1 runtime, which is available starting with Windows 8, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - <i>UAVStartSlot</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUnorderedAccessViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>s that represent the unordered-access views to bind to the device. If this parameter is <b>NULL</b> and <i>NumUAVs</i> is 0, no unordered-access views are bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pUAVInitialCounts">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter for that appendable and consumable UAV. <i>pUAVInitialCounts</i> is  relevant only for UAVs that were created with either <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG_APPEND</a> or <b>D3D11_BUFFER_UAV_FLAG_COUNTER</b> specified when the UAV was created; otherwise, the argument is ignored.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For pixel shaders, the render targets and unordered-access views share the same resource slots when being written out. This means that UAVs must be given an offset so that they are placed in the slots after the render target views that are being bound.</para>
            <para><div class="alert"><b>Note</b>  RTVs, DSV, and UAVs cannot be set independently; they all need to be set at the same time.</div> <div> </div> Two RTVs conflict if they share a subresource (and therefore share the same resource). Two UAVs conflict if they share a subresource (and therefore share the same resource). An RTV conflicts with a UAV if they share a subresource or share a bind point. <b>OMSetRenderTargetsAndUnorderedAccessViews</b> operates properly in the following situations:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetrendertargetsandunorderedaccessviews#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState,System.Single*,System.UInt32)">
            <summary>Set the blend state of the output-merger stage.</summary>
            <param name="pBlendState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>*</b> Pointer to a blend-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>). Pass <b>NULL</b> for a default blend state. For more info about default blend state, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BlendFactor">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a>[4]</b> Array of blend factors, one for each RGBA component. The blend factors modulate values for the pixel shader, render target, or both. If you created  the blend-state object with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND_BLEND_FACTOR</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">D3D11_BLEND_INV_BLEND_FACTOR</a>, the blending stage uses the non-NULL array of blend factors. If you didn't create the blend-state object with <b>D3D11_BLEND_BLEND_FACTOR</b> or <b>D3D11_BLEND_INV_BLEND_FACTOR</b>, the blending stage does not use the non-NULL array of blend factors; the runtime stores the blend factors, and you can later call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate">ID3D11DeviceContext::OMGetBlendState</a> to retrieve the blend factors. If you pass <b>NULL</b>, the runtime uses or stores a blend factor equal to { 1, 1, 1, 1 }.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SampleMask">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> 32-bit sample coverage. The default value is 0xffffffff. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Blend state is used by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> to determine how to blend together two RGB pixel values and two alpha values. The two RGB pixel values and two alpha values are the RGB pixel value and alpha value that the pixel shader outputs and the RGB pixel value and alpha value already in the output render target. The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend">blend option</a> controls the data source that the blending stage uses to modulate values for the pixel shader, render target, or both. The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_blend_op">blend operation</a> controls how the blending stage mathematically combines these modulated values. To create a blend-state interface, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createblendstate">ID3D11Device::CreateBlendState</a>. Passing in <b>NULL</b> for the blend-state interface indicates to the runtime to set a default blending state.  The following table indicates the default blending parameters. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetDepthStencilState(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState,System.UInt32)">
            <summary>Sets the depth-stencil state of the output-merger stage.</summary>
            <param name="pDepthStencilState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>*</b> Pointer to a depth-stencil state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>) to bind to the device. Set this to <b>NULL</b> to use the default state listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_depth_stencil_desc">D3D11_DEPTH_STENCIL_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StencilRef">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Reference value to perform against when doing a depth-stencil test. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>To create a depth-stencil state interface, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createdepthstencilstate">ID3D11Device::CreateDepthStencilState</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omsetdepthstencilstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SOSetTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[],System.UInt32*)">
            <summary>Set the target output buffers for the stream-output stage of the pipeline.</summary>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of buffer to bind to the device. A maximum of four output buffers can be set. If less than four are defined by the call, the remaining buffer slots are set to <b>NULL</b>. See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-sosettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSOTargets">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> The array of output buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to bind to the device. The buffers must have been created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_STREAM_OUTPUT</a> flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-sosettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pOffsets">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Array of offsets to the output buffers from <i>ppSOTargets</i>, one offset for each buffer. The offset values must be in bytes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-sosettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>An offset of -1 will cause the stream output buffer to be appended, continuing after the last location written to the buffer in a previous stream output pass. Calling this method using a buffer that is currently bound for writing will effectively bind <b>NULL</b> instead because a buffer cannot be bound as both an input and an output at the same time.</para>
            <para>The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-sosettargets#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawAuto">
            <summary>Draw geometry of an unknown size.</summary>
            <remarks>
            <para>A draw API submits work to the rendering pipeline. This API submits work of an unknown size that was processed by the input assembler, vertex shader, and stream-output stages;  the work may or may not have gone through the geometry-shader stage. After data has been streamed out to stream-output stage buffers, those buffers can be again bound to the Input Assembler stage at input slot 0 and DrawAuto will draw them without the application needing to know the amount of data that was written to the buffers. A measurement of the amount of data written to the SO stage buffers is maintained internally when the data is streamed out. This means that the CPU does not need to fetch the measurement before re-binding the data that was streamed as input data. Although this amount is tracked internally, it is still the responsibility of applications to use input layouts to describe the format of the data in the SO stage buffers so that the layouts are available when the buffers are again bound to the input assembler. The following diagram shows the DrawAuto process. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawauto#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawIndexedInstancedIndirect(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer,System.UInt32)">
            <summary>Draw indexed, instanced, GPU-generated primitives.</summary>
            <param name="pBufferForArgs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>, which is a buffer containing the GPU generated primitives.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstancedindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="AlignedByteOffsetForArgs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Offset in <i>pBufferForArgs</i> to the start of the GPU generated primitives.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstancedindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>When an application creates a buffer that is associated with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> interface that  <i>pBufferForArgs</i> points to, the application must set the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS</a> flag in the <b>MiscFlags</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a> structure that describes the buffer. To create the buffer, the application calls the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createbuffer">ID3D11Device::CreateBuffer</a> method and in this call passes a pointer to <b>D3D11_BUFFER_DESC</b> in the <i>pDesc</i> parameter.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawindexedinstancedindirect#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DrawInstancedIndirect(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer,System.UInt32)">
            <summary>Draw instanced, GPU-generated primitives.</summary>
            <param name="pBufferForArgs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>, which is a buffer containing the GPU generated primitives.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawinstancedindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="AlignedByteOffsetForArgs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Offset in <i>pBufferForArgs</i> to the start of the GPU generated primitives.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawinstancedindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>When an application creates a buffer that is associated with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> interface that  <i>pBufferForArgs</i> points to, the application must set the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS</a> flag in the <b>MiscFlags</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a> structure that describes the buffer. To create the buffer, the application calls the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createbuffer">ID3D11Device::CreateBuffer</a> method and in this call passes a pointer to <b>D3D11_BUFFER_DESC</b> in the <i>pDesc</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-drawinstancedindirect#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Dispatch(System.UInt32,System.UInt32,System.UInt32)">
            <summary>Execute a command list from a thread group.</summary>
            <param name="ThreadGroupCountX">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of groups dispatched in the x direction. <i>ThreadGroupCountX</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dispatch#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ThreadGroupCountY">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of groups dispatched in the y direction. <i>ThreadGroupCountY</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dispatch#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ThreadGroupCountZ">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of groups dispatched in the z direction.  <i>ThreadGroupCountZ</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535). In feature level 10 the value for <i>ThreadGroupCountZ</i> must be 1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dispatch#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>You call the <b>Dispatch</b> method to execute commands in a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-compute-shader">compute shader</a>. A compute shader can be run on many threads in parallel, within a thread group. Index a particular thread, within a thread group using a 3D vector given by (x,y,z). In the following illustration, assume a thread group with 50 threads where the size of the group is given by (5,5,2). A single thread is identified from a thread group with 50 threads in it, using the vector (4,1,1). </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dispatch#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DispatchIndirect(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer,System.UInt32)">
            <summary>Execute a command list over one or more thread groups.</summary>
            <param name="pBufferForArgs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>, which must be loaded with data that matches the argument list for <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-dispatch">ID3D11DeviceContext::Dispatch</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dispatchindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="AlignedByteOffsetForArgs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A byte-aligned offset between the start of the buffer and the arguments.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dispatchindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>You call the <b>DispatchIndirect</b> method to execute commands in a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/direct3d-11-advanced-stages-compute-shader">compute shader</a>. When an application creates a buffer that is associated with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> interface that  <i>pBufferForArgs</i> points to, the application must set the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS</a> flag in the <b>MiscFlags</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_buffer_desc">D3D11_BUFFER_DESC</a> structure that describes the buffer. To create the buffer, the application calls the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createbuffer">ID3D11Device::CreateBuffer</a> method and in this call passes a pointer to <b>D3D11_BUFFER_DESC</b> in the <i>pDesc</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dispatchindirect#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetState(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState)">
            <summary>Set the rasterizer state for the rasterizer stage of the pipeline.</summary>
            <param name="pRasterizerState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>*</b> Pointer to a rasterizer-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>) to bind to the pipeline.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rssetstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>To create a rasterizer state interface, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrasterizerstate">ID3D11Device::CreateRasterizerState</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rssetstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)">
            <summary>Bind an array of viewports to the rasterizer stage of the pipeline.</summary>
            <param name="NumViewports">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of viewports to bind.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rssetviewports#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pViewports">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a>*</b> An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a> structures to bind to the device. See the structure page for details about how the viewport size is dependent on the device feature level which has changed between Direct3D 11 and Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rssetviewports#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>All viewports must be set atomically as one operation. Any viewports not defined by the call are disabled. Which viewport to use is determined by the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-semantics">SV_ViewportArrayIndex</a> semantic output by a geometry shader; if a geometry shader does not specify the semantic, Direct3D will use the first viewport in the array. <div class="alert"><b>Note</b>  Even though you specify float values to the members of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a> structure for the <i>pViewports</i> array in a call to  <b>ID3D11DeviceContext::RSSetViewports</b> for <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> 9_x, <b>RSSetViewports</b> uses DWORDs internally. Because of this behavior, when you use a negative top left corner for the viewport, the call to  <b>RSSetViewports</b> for feature levels 9_x fails. This failure occurs because <b>RSSetViewports</b> for 9_x casts the floating point values into unsigned integers without validation, which results in integer overflow. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rssetviewports#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)">
            <summary>Bind an array of scissor rectangles to the rasterizer stage.</summary>
            <param name="NumRects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of scissor rectangles to bind.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rssetscissorrects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRects">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a>*</b> An array of scissor rectangles (see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rssetscissorrects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>All scissor rects must be set atomically as one operation. Any scissor rects not defined by the call are disabled. The scissor rectangles will only be used if ScissorEnable is set to true in the rasterizer state (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>).</para>
            <para>Which scissor rectangle to use is determined by the SV_ViewportArrayIndex semantic output by a geometry shader (see shader semantic syntax). If a geometry shader does not make use of the SV_ViewportArrayIndex semantic then Direct3D will use the first scissor rectangle in the array. Each scissor rectangle in the array corresponds to a viewport in an array of viewports (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-rssetviewports">ID3D11DeviceContext::RSSetViewports</a>).</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rssetscissorrects#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CopySubresourceRegion(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_BOX*)">
            <summary>Copy a region from a source resource to a destination resource.</summary>
            <param name="pDstResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to the destination resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Destination subresource index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstX">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The x-coordinate of the upper left corner of the destination region.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstY">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The y-coordinate of the upper left corner of the destination region. For a 1D subresource, this must be zero.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstZ">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The z-coordinate of the upper left corner of the destination region. For a 1D or 2D subresource, this must be zero.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to the source resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Source subresource index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcBox">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>*</b> A pointer to a 3D box (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>) that defines the source subresource that can be copied. If <b>NULL</b>, the entire source subresource is copied. The box must fit within the source resource. An empty box results in a no-op. A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value. When the box is empty, <b>CopySubresourceRegion</b> doesn't perform a copy operation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The source box must be within the size of the source resource. The destination offsets, (x, y, and z), allow the source box to be offset when writing into the destination resource; however, the dimensions of the source box and the offsets must be within the size of the resource. If you try and copy outside the destination resource or specify a source box that is larger than the source resource, the behavior of <b>CopySubresourceRegion</b> is undefined. If you created a device that supports the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a>, the debug output reports an error on this invalid <b>CopySubresourceRegion</b> call. Invalid parameters to <b>CopySubresourceRegion</b> cause undefined behavior and might result in incorrect rendering, clipping, no copy, or even the removal of the rendering device. If the resources are buffers, all coordinates are in bytes; if the resources are textures, all coordinates are in texels. <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11calcsubresource">D3D11CalcSubresource</a> is a helper function for calculating subresource indexes. <b>CopySubresourceRegion</b> performs the copy on the GPU (similar to a memcpy by the CPU). As a consequence, the source and destination resources: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CopyResource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,Windows.Win32.Graphics.Direct3D11.ID3D11Resource)">
            <summary>Copy the entire contents of the source resource to the destination resource using the GPU.</summary>
            <param name="pDstResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface that represents the destination resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copyresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> interface that represents the source resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copyresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This method is unusual in that it causes the GPU to perform the copy operation (similar to a memcpy by the CPU). As a result, it has a few restrictions designed for improving performance. For instance, the source and destination resources: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copyresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.UpdateSubresource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_BOX*,System.Void*,System.UInt32,System.UInt32)">
            <summary>The CPU copies data from memory to a subresource created in non-mappable memory.</summary>
            <param name="pDstResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to the destination resource (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A zero-based index, that identifies the destination subresource. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11calcsubresource">D3D11CalcSubresource</a> for more details.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDstBox">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>*</b> A pointer to a box that defines the portion of the destination subresource to copy the resource data into. Coordinates are in bytes for buffers and in texels for textures. If <b>NULL</b>, the data is written to the destination subresource with no offset. The dimensions of the source must fit the destination (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_box">D3D11_BOX</a>). An empty box results in a no-op. A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value. When the box is empty, <b>UpdateSubresource</b> doesn't perform an update operation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcData">
            <para>Type: <b>const void*</b> A pointer to the source data in memory.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcRowPitch">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of one row of the source data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcDepthPitch">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of one depth slice of source data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For a shader-constant buffer; set <i>pDstBox</i> to <b>NULL</b>. It is not possible to use this method to partially update a shader-constant buffer. A resource cannot be used as a destination if: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-updatesubresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CopyStructureCount(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView)">
            <summary>Copies data from a buffer holding variable length data.</summary>
            <param name="pDstBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Pointer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>.  This can be any buffer resource that other copy commands, such as <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-copyresource">ID3D11DeviceContext::CopyResource</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-copysubresourceregion">ID3D11DeviceContext::CopySubresourceRegion</a>, are able to write to.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copystructurecount#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstAlignedByteOffset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Offset from the start of <i>pDstBuffer</i> to write 32-bit UINT structure (vertex) count from <i>pSrcView</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copystructurecount#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b> Pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> of a Structured Buffer resource created with either <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG_APPEND</a> or <b>D3D11_BUFFER_UAV_FLAG_COUNTER</b> specified when the UAV was created.   These types of resources have hidden counters tracking "how many" records have been written.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copystructurecount#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-copystructurecount">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView,System.Single*)">
            <summary>Set all the elements in a render target to one value.</summary>
            <param name="pRenderTargetView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>*</b> Pointer to the render target.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ColorRGBA">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a>[4]</b> A 4-component array that represents the color to fill the render target with.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Applications that wish to clear a render target to a specific integer value bit pattern should render a screen-aligned quad instead of using this method.  The reason for this is because this method accepts as input a floating point value, which may not have the same bit pattern as the original integer. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearrendertargetview#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView,System.UInt32*)">
            <summary>Clears an unordered access resource with bit-precise values.</summary>
            <param name="pUnorderedAccessView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> to clear.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Values">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>[4]</b> Values to copy to corresponding channels, see remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This API copies the lower n<sub>i</sub> bits from each array element i to the corresponding channel, where n<sub>i</sub> is the number of bits in the ith channel of the resource format (for example, R8G8B8_FLOAT has 8 bits for the first 3 channels). This works on any UAV with no format conversion. For a raw or structured buffer view, only the first array element value is used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewuint#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView,System.Single*)">
            <summary>Clears an unordered access resource with a float value.</summary>
            <param name="pUnorderedAccessView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b> The <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> to clear.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewfloat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Values">
            <para>Type: <b>const FLOAT[4]</b> Values to copy to corresponding channels, see remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewfloat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This API works on FLOAT, UNORM, and SNORM unordered access views (UAVs), with format conversion from FLOAT to *NORM where appropriate. On other UAVs, the operation is invalid and the call will not reach the driver.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearunorderedaccessviewfloat#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView,System.UInt32,System.Single,System.Byte)">
            <summary>Clears the depth-stencil resource.</summary>
            <param name="pDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>*</b> Pointer to the depth stencil to be cleared.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ClearFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Identify the type of data to clear (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_clear_flag">D3D11_CLEAR_FLAG</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Depth">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> Clear the depth buffer with this value. This value will be clamped between 0 and 1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Stencil">
            <para>Type: <b>UINT8</b> Clear the stencil buffer with this value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cleardepthstencilview#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GenerateMips(Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView)">
            <summary>Generates mipmaps for the given shader resource.</summary>
            <param name="pShaderResourceView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a> interface that represents the shader resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-generatemips#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>You can call <b>GenerateMips</b> on any shader-resource view to generate the lower mipmap levels for the shader resource. <b>GenerateMips</b> uses the largest mipmap level of the view to recursively generate the lower levels of the mip and stops with the smallest level that is specified by the view. If the base resource wasn't created with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_RENDER_TARGET</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_SHADER_RESOURCE</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_GENERATE_MIPS</a>, the call to <b>GenerateMips</b> has no effect. <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">Feature levels</a> 9.1, 9.2, and 9.3 can't support automatic generation of mipmaps for 3D (volume) textures. Video adapters that support <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9.1 and higher support generating mipmaps if you use any of these formats:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-generatemips#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SetResourceMinLOD(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.Single)">
            <summary>Sets the minimum level-of-detail (LOD) for a resource.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> that represents the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-setresourceminlod#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="MinLOD">
            <para>Type: <b>FLOAT</b> The level-of-detail, which ranges between 0 and the maximum number of mipmap levels of the resource. For example, the maximum number of mipmap levels of a 1D texture is specified in the  <b>MipLevels</b> member of the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-setresourceminlod#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>To use a resource with <b>SetResourceMinLOD</b>, you must set the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_misc_flag">D3D11_RESOURCE_MISC_RESOURCE_CLAMP</a> flag when you create that resource. For Direct3D 10 and Direct3D 10.1, when sampling from a texture resource in a shader, the sampler can define a minimum LOD clamp to force sampling from less detailed mip levels.  For Direct3D 11, this functionality is extended from the sampler to the entire resource. Therefore, the application can specify the highest-resolution mip level of a resource that is available for access. This restricts the set of mip levels that are required to be resident in GPU memory, thereby saving memory. The set of mip levels resident per-resource in GPU memory can be specified by the user. Minimum LOD affects all of the resident mip levels. Therefore, only the resident mip levels can be updated and read from. All methods that access texture resources must adhere to minimum LOD clamps. Empty-set accesses are handled as out-of-bounds cases.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-setresourceminlod#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetResourceMinLOD(Windows.Win32.Graphics.Direct3D11.ID3D11Resource)">
            <summary>Gets the minimum level-of-detail (LOD).</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a> which represents the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getresourceminlod#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>FLOAT</b> Returns the minimum LOD.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getresourceminlod">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ResolveSubresource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT)">
            <summary>Copy a multisampled resource into a non-multisampled resource.</summary>
            <param name="pDstResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Destination resource. Must be a created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_usage">D3D11_USAGE_DEFAULT</a> flag and be single-sampled. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A zero-based index, that identifies the destination subresource. Use <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11calcsubresource">D3D11CalcSubresource</a> to calculate the index.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>*</b> Source resource. Must be multisampled.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The source subresource of the source resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> that indicates how the multisampled resource will be resolved to a single-sampled resource. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This API is most useful when re-using the resulting rendertarget of one render pass as an input to a second render pass. The source and destination resources must be the same resource type and have the same dimensions. In addition, they must have compatible formats. There are three scenarios for this: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ExecuteCommandList(Windows.Win32.Graphics.Direct3D11.ID3D11CommandList,Windows.Win32.Foundation.BOOL)">
            <summary>Queues commands from a command list onto a device.</summary>
            <param name="pCommandList">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a> interface that encapsulates a command list.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-executecommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="RestoreContextState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> A Boolean flag that determines whether the target context state is saved prior to and restored after the execution of a command list. Use <b>TRUE</b> to indicate that the runtime needs to save and restore the state. Use <b>FALSE</b> to indicate that no state shall be saved or restored, which causes the target context to  return to its default state after the command list executes. Applications should typically use <b>FALSE</b> unless they will restore the state to be nearly equivalent to the state that the runtime would restore if <b>TRUE</b> were passed. When applications use <b>FALSE</b>, they can avoid unnecessary and inefficient state transitions.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-executecommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Use this method to play back a command list that was recorded by a deferred context on any thread. A call to <b>ExecuteCommandList</b> of a command list from a deferred context onto the immediate context is required for the recorded commands to be executed on the graphics processing unit (GPU). A call to <b>ExecuteCommandList</b> of a command list from a deferred context onto another deferred context can be used to merge recorded lists. But to run the commands from the merged deferred command list on the GPU, you need to execute them on the immediate context.</para>
            <para>This method performs some runtime validation related to queries. Queries that are begun in a device context cannot be manipulated indirectly by executing a command list (that is, Begin or End was invoked against the same query by the deferred context which generated the command list). If such a condition occurs, the ExecuteCommandList method does not execute the command list. However, the state of the device context is still maintained, as would be expected (<a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-clearstate">ID3D11DeviceContext::ClearState</a> is performed, unless the application indicates to preserve the device context state).</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-executecommandlist#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Bind an array of shader resources to the hull-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11HullShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)">
            <summary>Set a hull shader to the device.</summary>
            <param name="pHullShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>*</b> Pointer to a hull shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The maximum number of instances a shader can have is 256.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Set an array of sampler states to the hull-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Set the constant buffers used by the hull-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The Direct3D 11.1 runtime, which is available starting with Windows 8, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer. If the application wants the shader to access other parts of the buffer, it must call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-hssetconstantbuffers1">HSSetConstantBuffers1</a> method instead.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Bind an array of shader resources to the domain-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)">
            <summary>Set a domain shader to the device.</summary>
            <param name="pDomainShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>*</b> Pointer to a domain shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para>The maximum number of instances a shader can have is 256. <b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Set an array of sampler states to the domain-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Sets the constant buffers used by the domain-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para>The Direct3D 11.1 runtime, which is available starting with Windows 8, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.</para>
            <para>If the application wants the shader to access other parts of the buffer, it must call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-dssetconstantbuffers1">DSSetConstantBuffers1</a> method instead.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Bind an array of shader resources to the compute-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>*</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to set to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <b>NULL</b>. For information about creating shader-resource views, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createshaderresourceview">ID3D11Device::CreateShaderResourceView</a>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetUnorderedAccessViews(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[],System.UInt32*)">
            <summary>Sets an array of views for an unordered resource.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the first element in the zero-based array to begin setting  (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - 1). D3D11_1_UAV_SLOT_COUNT is defined as 64.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumUAVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of views to set (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUnorderedAccessViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>*</b> A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a> pointers to be set by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pUAVInitialCounts">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter for that appendable and consumable UAV. <i>pUAVInitialCounts</i> is only relevant for UAVs that were created with either <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_buffer_uav_flag">D3D11_BUFFER_UAV_FLAG_APPEND</a> or <b>D3D11_BUFFER_UAV_FLAG_COUNTER</b> specified when the UAV was created; otherwise, the argument is ignored.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetunorderedaccessviews#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)">
            <summary>Set a compute shader to the device.</summary>
            <param name="pComputeShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>*</b> Pointer to a compute shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>). Passing in <b>NULL</b> disables the shader for this pipeline stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>*</b> A pointer to an array of class-instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <b>NULL</b> if the shader does not use any interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of class-instance interfaces in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The maximum number of instances a shader can have is 256.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Set an array of sampler states to the compute-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>*</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>). See Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any sampler may be set to <b>NULL</b>; this invokes the default state, which is defined to be the following.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Sets the constant buffers used by the compute-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to set (ranges from 0 to <b>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</b> - <i>StartSlot</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>*</b> Array of constant buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) being given to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10. The Direct3D 11.1 runtime, which is available starting with Windows 8, can bind a larger number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants – 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer. If the application wants the shader to access other parts of the buffer, it must call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11devicecontext1-cssetconstantbuffers1">CSSetConstantBuffers1</a> method instead.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-cssetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Get the constant buffers used by the vertex shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Get the pixel shader resources.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader@,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32*)">
            <summary>Get the pixel shader currently set on the device.</summary>
            <param name="ppPixelShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>**</b> Address of a pointer to a pixel shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11pixelshader">ID3D11PixelShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed, to avoid memory leaks.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Get an array of sampler states from the pixel shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Arry of sampler-state interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>) to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader@,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32*)">
            <summary>Get the vertex shader currently set on the device.</summary>
            <param name="ppVertexShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>**</b> Address of a pointer to a vertex shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11vertexshader">ID3D11VertexShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Get the constant buffers used by the pixel shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-psgetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetInputLayout(Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout@)">
            <summary>Get a pointer to the input-layout object that is bound to the input-assembler stage.</summary>
            <param name="ppInputLayout">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>**</b> A pointer to the input-layout object (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11inputlayout">ID3D11InputLayout</a>), which describes the input buffers that will be read by the IA stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetinputlayout#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>For information about creating an input-layout object, see Creating the Input-Layout Object. Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetinputlayout#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[],System.UInt32*,System.UInt32*)">
            <summary>Get the vertex buffers bound to the input-assembler stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The input slot of the first vertex buffer to get. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1) are available; the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">maximum number of input slots depends on the feature level</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of vertex buffers to get starting at the offset. The number of buffers (plus the starting slot) cannot exceed the total number of IA-stage input slots.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppVertexBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> A pointer to an array of vertex buffers returned by the method (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pStrides">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to an array of stride values returned by the method; one stride value for each buffer in the vertex-buffer array. Each stride value is the size (in bytes) of the elements that are to be used from that vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pOffsets">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to an array of offset values returned by the method; one offset value for each buffer in the vertex-buffer array. Each offset is the number of bytes between the first element of a vertex buffer and the first element that will be used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetvertexbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetIndexBuffer(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer@,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT*,System.UInt32*)">
            <summary>Get a pointer to the index buffer that is bound to the input-assembler stage.</summary>
            <param name="pIndexBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> A pointer to an index buffer returned by the method (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>*</b> Specifies format of the data in the index buffer (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>). These formats provide the size and type of the data in the buffer. The only formats allowed for index buffer data are 16-bit (DXGI_FORMAT_R16_UINT) and 32-bit (DXGI_FORMAT_R32_UINT) integers.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Offset">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Offset (in bytes) from the start of the index buffer, to the first index to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetindexbuffer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Get the constant buffers used by the geometry shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader@,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32*)">
            <summary>Get the geometry shader currently set on the device.</summary>
            <param name="ppGeometryShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>**</b> Address of a pointer to a geometry shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11geometryshader">ID3D11GeometryShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetPrimitiveTopology(Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY*)">
            <summary>Get information about the primitive type, and data order that describes input data for the input assembler stage.</summary>
            <param name="pTopology">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476189(v=vs.85)">D3D11_PRIMITIVE_TOPOLOGY</a>*</b> A pointer to the type of primitive, and ordering of the primitive data (see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff476189(v=vs.85)">D3D11_PRIMITIVE_TOPOLOGY</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetprimitivetopology#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-iagetprimitivetopology">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Get the vertex shader resources.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Get an array of sampler states from the vertex shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Arry of sampler-state interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>) to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-vsgetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetPredication(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate@,Windows.Win32.Foundation.BOOL*)">
            <summary>Get the rendering predicate state.</summary>
            <param name="ppPredicate">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>**</b> Address of a pointer to a predicate (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11predicate">ID3D11Predicate</a>). Value stored here will be <b>NULL</b> upon device creation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getpredication#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pPredicateValue">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a>*</b> Address of a boolean to fill with the predicate comparison value. <b>FALSE</b> upon device creation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getpredication#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getpredication#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Get the geometry shader resources.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Get an array of sampler state interfaces from the geometry shader pipeline stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gsgetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView@)">
            <summary>Get pointers to the resources bound to the output-merger stage.</summary>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of render targets to retrieve.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRenderTargetViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>**</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>s which represent render target views. Specify <b>NULL</b> for this parameter when retrieval of a render target is not needed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>**</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>, which represents a depth-stencil view. Specify <b>NULL</b> for this parameter when retrieval of the depth-stencil view is not needed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargets#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetRenderTargetsAndUnorderedAccessViews(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView@,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[])">
            <summary>Get pointers to the resources bound to the output-merger stage.</summary>
            <param name="NumRTVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of render-target views to retrieve.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRenderTargetViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>**</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rendertargetview">ID3D11RenderTargetView</a>s, which represent render-target views. Specify <b>NULL</b> for this parameter when retrieval of render-target views is not required.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>**</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilview">ID3D11DepthStencilView</a>, which represents a depth-stencil view. Specify <b>NULL</b> for this parameter when retrieval of the depth-stencil view is not required.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="UAVStartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin retrieving unordered-access views (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1). For pixel shaders <i>UAVStartSlot</i> should be equal to the number of render-target views that are bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumUAVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of unordered-access views to return in <i>ppUnorderedAccessViews</i>. This number ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - <i>UAVStartSlot</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUnorderedAccessViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>**</b> Pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>s, which represent unordered-access views that are retrieved. Specify <b>NULL</b> for this parameter when retrieval of unordered-access views is not required.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nf-unknwn-iunknown-release">IUnknown::Release</a> on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetrendertargetsandunorderedaccessviews#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState@,System.Single*,System.UInt32*)">
            <summary>Get the blend state of the output-merger stage.</summary>
            <param name="ppBlendState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>**</b> Address of a pointer to a blend-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11blendstate">ID3D11BlendState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BlendFactor">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a>[4]</b> Array of blend factors, one for each RGBA component.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSampleMask">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-omsetblendstate">sample mask</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The reference count of the returned interface will be incremented by one when the blend state is retrieved. Applications must release returned pointer(s) when they are no longer needed, or else there will be a memory leak. <b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetblendstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetDepthStencilState(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState@,System.UInt32*)">
            <summary>Gets the depth-stencil state of the output-merger stage.</summary>
            <param name="ppDepthStencilState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>**</b> Address of a pointer to a depth-stencil state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11depthstencilstate">ID3D11DepthStencilState</a>) to be filled with information from the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pStencilRef">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Pointer to the stencil reference value used in the depth-stencil test.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetdepthstencilstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks. <b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-omgetdepthstencilstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SOGetTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Get the target output buffers for the stream-output stage of the pipeline.</summary>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to get.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-sogettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSOTargets">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> An array of output buffers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be retrieved from the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-sogettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>A maximum of four output buffers can be retrieved. The offsets to the output buffers pointed to in the returned <i>ppSOTargets</i> array may be assumed to be -1 (append), as defined for use in <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-sosettargets">ID3D11DeviceContext::SOSetTargets</a>.</para>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks. <b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-sogettargets#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetState(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState@)">
            <summary>Get the rasterizer state from the rasterizer stage of the pipeline.</summary>
            <param name="ppRasterizerState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>**</b> Address of a pointer to a rasterizer-state interface (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11rasterizerstate">ID3D11RasterizerState</a>) to fill with information from the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rsgetstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rsgetstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetViewports(System.UInt32*,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)">
            <summary>Gets the array of viewports bound to the rasterizer stage.</summary>
            <param name="pNumViewports">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a variable that, on input, specifies the number of viewports (ranges from 0 to <b>D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE</b>) in the <i>pViewports</i> array; on output, the variable contains the actual number of viewports that are bound to the rasterizer stage. If <i>pViewports</i> is <b>NULL</b>, <b>RSGetViewports</b> fills the variable with the number of viewports currently bound. <div class="alert"><b>Note</b>  In some versions of the Windows SDK, a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug device</a> will raise an exception if the input value in the variable to which <i>pNumViewports</i> points is greater than <b>D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE</b> even if <i>pViewports</i> is <b>NULL</b>.  The regular runtime ignores the value in the variable to which <i>pNumViewports</i> points when <i>pViewports</i> is <b>NULL</b>.  This behavior of a debug device might be corrected in a future release of the Windows SDK. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rsgetviewports#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pViewports">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a>*</b> An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a> structures for the viewports that are bound to the rasterizer stage. If the number of viewports (in the variable to which <i>pNumViewports</i> points) is greater than the actual number of viewports currently bound, unused elements of the array contain 0. For info about how the viewport size depends on the device <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a>, which has changed between Direct3D 11 and Direct3D 10, see <b>D3D11_VIEWPORT</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rsgetviewports#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rsgetviewports#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetScissorRects(System.UInt32*,Windows.Win32.Foundation.RECT*)">
            <summary>Get the array of scissor rectangles bound to the rasterizer stage.</summary>
            <param name="pNumRects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of scissor rectangles (ranges between 0 and D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) bound; set <i>pRects</i> to <b>NULL</b> to use <i>pNumRects</i> to see how many rectangles would be returned.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rsgetscissorrects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a>*</b> An array of scissor rectangles (see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d11-rect">D3D11_RECT</a>). If NumRects is greater than the number of scissor rects currently bound, then unused members of the array will contain 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rsgetscissorrects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-rsgetscissorrects">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Get the hull-shader resources.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11HullShader@,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32*)">
            <summary>Get the hull shader currently set on the device.</summary>
            <param name="ppHullShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>**</b> Address of a pointer to a hull shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11hullshader">ID3D11HullShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Get an array of sampler state interfaces from the hull-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Get the constant buffers used by the hull-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-hsgetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Get the domain-shader resources.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader@,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32*)">
            <summary>Get the domain shader currently set on the device.</summary>
            <param name="ppDomainShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>**</b> Address of a pointer to a domain shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11domainshader">ID3D11DomainShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Get an array of sampler state interfaces from the domain-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Get the constant buffers used by the domain-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-dsgetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <summary>Get the compute-shader resources.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppShaderResourceViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">ID3D11ShaderResourceView</a>**</b> Array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11shaderresourceview">shader resource view</a> interfaces to be returned by the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetshaderresources#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetshaderresources#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetUnorderedAccessViews(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[])">
            <summary>Gets an array of views for an unordered resource.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the first element in the zero-based array to return (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumUAVs">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of views to get (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUnorderedAccessViews">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>**</b> A pointer to an array of interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11unorderedaccessview">ID3D11UnorderedAccessView</a>) to get.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetunorderedaccessviews#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call <b>IUnknown::Release</b> on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetunorderedaccessviews#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetShader(Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader@,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32*)">
            <summary>Get the compute shader currently set on the device.</summary>
            <param name="ppComputeShader">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>**</b> Address of a pointer to a Compute shader (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11computeshader">ID3D11ComputeShader</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>**</b> Pointer to an array of class instance interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11classinstance">ID3D11ClassInstance</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumClassInstances">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The number of class-instance elements in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetshader#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetshader#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <summary>Get an array of sampler state interfaces from the compute-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSamplers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>**</b> Pointer to an array of sampler-state interfaces (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11samplerstate">ID3D11SamplerState</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetsamplers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetsamplers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <summary>Get the constant buffers used by the compute-shader stage.</summary>
            <param name="StartSlot">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppConstantBuffers">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>**</b> Array of constant buffer interface pointers (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11buffer">ID3D11Buffer</a>) to be returned by the method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetconstantbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-csgetconstantbuffers#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearState">
            <summary>Restore all default settings.</summary>
            <remarks>
            <para>This method resets any device context to the default settings. This sets all input/output resource slots, shaders, input layouts, predications, scissor rectangles, depth-stencil state, rasterizer state, blend state, sampler state, and viewports to <b>NULL</b>. The primitive topology is set to UNDEFINED. For a scenario where you would like to clear a list of commands recorded so far, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-finishcommandlist">ID3D11DeviceContext::FinishCommandList</a> and throw away the resulting <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-clearstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.Flush">
            <summary>Sends queued-up commands in the command buffer to the graphics processing unit (GPU).</summary>
            <remarks>
            <para>Most applications don't need to call this method. If an application calls this method when not necessary, it incurs a performance penalty. Each call to <b>Flush</b> incurs a significant amount of overhead. When Microsoft Direct3D state-setting, present, or draw commands are called by an application, those commands are queued into an internal command buffer. <b>Flush</b> sends those commands to the GPU for processing. Typically, the Direct3D runtime sends these commands to the GPU automatically whenever the runtime determines that they need to be sent, such as when the command buffer is full or when an application maps a resource. <b>Flush</b> sends the commands manually. We recommend that you use <b>Flush</b> when the CPU waits for an arbitrary amount of time (such as when you call the <a href="https://docs.microsoft.com/windows/desktop/api/synchapi/nf-synchapi-sleep">Sleep</a> function). Because <b>Flush</b> operates asynchronously,  it can return either before or after the GPU finishes executing the queued graphics commands. However, the graphics commands eventually always complete. You can call the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createquery">ID3D11Device::CreateQuery</a> method with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_query">D3D11_QUERY_EVENT</a> value to create an event query; you can then use that event query in a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-getdata">ID3D11DeviceContext::GetData</a> method to determine when the GPU is finished processing the graphics commands.</para>
            <para>Microsoft Direct3D 11 defers the destruction of objects. Therefore, an application can't rely upon objects immediately being destroyed. By calling <b>Flush</b>, you destroy any objects whose destruction was deferred.  If an application requires synchronous destruction of an object, we recommend that the application release all its references, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-clearstate">ID3D11DeviceContext::ClearState</a>, and then call <b>Flush</b>. <h3><a id="Defer_Issues_with_Flip"></a><a id="defer_issues_with_flip"></a><a id="DEFER_ISSUES_WITH_FLIP"></a>Deferred Destruction Issues with Flip Presentation Swap Chains</h3> Direct3D 11 defers the destruction of objects like views and resources until it can efficiently destroy them. This deferred destruction can cause problems with flip presentation model swap chains. Flip presentation model swap chains have the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</a> flag set. When you create a flip presentation model swap chain, you can associate only one swap chain at a time with an <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a>, <b>IWindow</b>, or composition surface. If an application attempts to destroy a flip presentation model swap chain and replace it with another swap chain, the original swap chain is not destroyed when the application immediately frees all of the original swap chain's references. Most applications typically use the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-resizebuffers">IDXGISwapChain::ResizeBuffers</a> method for the majority of scenarios where they replace new swap chain buffers for old swap chain buffers. However, if an application must actually destroy an old swap chain and create a new swap chain, the application must force the destruction of all objects that the application freed. To force the destruction, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-clearstate">ID3D11DeviceContext::ClearState</a> (or otherwise ensure no views are bound to pipeline state), and then call <b>Flush</b> on the immediate context. You must force destruction before you call <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd">IDXGIFactory2::CreateSwapChainForHwnd</a>, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcorewindow">IDXGIFactory2::CreateSwapChainForCoreWindow</a>, or <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a> again to create a new swap chain.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-flush#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetType">
            <summary>Gets the type of device context.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/api/d3d11/ne-d3d11-d3d11_device_context_type">D3D11_DEVICE_CONTEXT_TYPE</a></b> A member of <a href="/windows/desktop/api/d3d11/ne-d3d11-d3d11_device_context_type">D3D11_DEVICE_CONTEXT_TYPE</a> that indicates the type of device context.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-gettype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetContextFlags">
            <summary>Gets the initialization flags associated with the current deferred context.</summary>
            <remarks>
            <para>The GetContextFlags method gets the flags that were supplied to the <i>ContextFlags</i> parameter of <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createdeferredcontext">ID3D11Device::CreateDeferredContext</a>; however, the context flag is reserved for future use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-getcontextflags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.FinishCommandList(Windows.Win32.Foundation.BOOL,Windows.Win32.Graphics.Direct3D11.ID3D11CommandList@)">
            <summary>Create a command list and record graphics commands into it.</summary>
            <param name="RestoreDeferredContextState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> A Boolean flag that determines whether the runtime saves deferred context state before it executes  <b>FinishCommandList</b> and restores it afterwards. Use <b>TRUE</b> to indicate that the runtime needs to save and restore the state. Use <b>FALSE</b> to indicate that the runtime will not save or restore any state. In this case, the deferred context will  return to its default state after the call to  <b>FinishCommandList</b> completes. For information about default state, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-clearstate">ID3D11DeviceContext::ClearState</a>. Typically, use <b>FALSE</b> unless you restore the state to be nearly equivalent to the state that the runtime would restore if you passed <b>TRUE</b>. When you use <b>FALSE</b>, you can avoid unnecessary and inefficient state transitions.</para>
            <para><div class="alert"><b>Note</b>  This parameter does not affect the command list that the current call to <b>FinishCommandList</b> returns. However, this parameter affects the command list of the next call to <b>FinishCommandList</b> on the same deferred context. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-finishcommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppCommandList">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a>**</b> Upon completion of the method, the passed pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11commandlist">ID3D11CommandList</a> interface pointer is initialized with the recorded command list information. The resulting <b>ID3D11CommandList</b> object is immutable and can only be used with <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-executecommandlist">ID3D11DeviceContext::ExecuteCommandList</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-finishcommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the following: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11devicecontext-finishcommandlist">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*)">
            <summary>Get a query description.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>*</b> Pointer to a query description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_query_desc">D3D11_QUERY_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11query-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11query-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*)">
            <summary>Gets the description for rasterizer state that you used to create the rasterizer-state object.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_rasterizer_desc">D3D11_RASTERIZER_DESC</a> structure that receives a description of the rasterizer state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11rasterizerstate-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>You use the description for rasterizer state in a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createrasterizerstate">ID3D11Device::CreateRasterizerState</a> method to create the rasterizer-state object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11rasterizerstate-getdesc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*)">
            <summary>Get the properties of a render target view.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>*</b> Pointer to the description of a render target view (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_render_target_view_desc">D3D11_RENDER_TARGET_VIEW_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11rendertargetview-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11rendertargetview-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)">
            <summary>Get the type of the resource.</summary>
            <param name="pResourceDimension">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_dimension">D3D11_RESOURCE_DIMENSION</a>*</b> Pointer to the resource type (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_resource_dimension">D3D11_RESOURCE_DIMENSION</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11resource-gettype#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>Windows Phone 8: </b> This API is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11resource-gettype#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.SetEvictionPriority(System.UInt32)">
            <summary>Set the eviction priority of a resource.</summary>
            <param name="EvictionPriority">Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></param>
            <remarks>
            <para>Resource priorities determine which resource to evict from video memory when the system has run out of video memory. The resource will not be lost; it will be removed from video memory and placed into system memory, or possibly placed onto the hard drive. The resource will be loaded back into video memory when it is required. A resource that is set to the maximum priority, DXGI_RESOURCE_PRIORITY_MAXIMUM, is only evicted if there is no other way of resolving the incoming memory request. The Windows Display Driver Model (WDDM) tries to split an incoming memory request to its minimum size and evict lower-priority resources before evicting a resource with maximum priority. Changing the priorities of resources should be done carefully. The wrong eviction priorities could be a detriment to performance rather than an improvement.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11resource-setevictionpriority#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.GetEvictionPriority">
            <summary>Get the eviction priority of a resource.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">UINT</a></b> One of the following values, which specifies the eviction priority for the resource: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11resource-getevictionpriority">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*)">
            <summary>Gets the description for sampler state that you used to create the sampler-state object.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_sampler_desc">D3D11_SAMPLER_DESC</a> structure that receives a description of the sampler state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11samplerstate-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>You use the description for sampler state in a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-createsamplerstate">ID3D11Device::CreateSamplerState</a> method to create the sampler-state object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11samplerstate-getdesc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*)">
            <summary>Get the shader resource view's description.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_shader_resource_view_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a> structure to be filled with data about the shader resource view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11shaderresourceview-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11shaderresourceview-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*)">
            <summary>Get the properties of the texture resource.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>*</b> Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture1d_desc">D3D11_TEXTURE1D_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11texture1d-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11texture1d-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*)">
            <summary>Get the properties of the texture resource.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>*</b> Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11texture2d-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11texture2d-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*)">
            <summary>Get the properties of the texture resource.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>*</b> Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_texture3d_desc">D3D11_TEXTURE3D_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11texture3d-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11texture3d-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*)">
            <summary>Get a description of the resource.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>*</b> Pointer to a resource description (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_unordered_access_view_desc">D3D11_UNORDERED_ACCESS_VIEW_DESC</a>.)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11unorderedaccessview-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11unorderedaccessview-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.GetResource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource@)">
            <summary>Get the resource that is accessed through this view.</summary>
            <param name="ppResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>**</b> Address of a pointer to the resource that is accessed through this view. (See <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11resource">ID3D11Resource</a>.)</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11view-getresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This function increments the reference count of the resource by one, so it is necessary to call <b>Release</b> on the returned pointer when the application is done with it. Destroying (or losing) the returned pointer before <b>Release</b> is called will result in a memory leak.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-id3d11view-getresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT">
            <summary>Describes the dimensions of a viewport.</summary>
            <remarks>
            <para>Pass an array of these structures to the <i>pViewports</i> parameter  in a call to  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-rssetviewports">ID3D12GraphicsCommandList::RSSetViewports</a> to set viewports for the display.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_viewport#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT.TopLeftX">
            <summary>X position of the left hand side of the viewport.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT.TopLeftY">
            <summary>Y position of the top of the viewport.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT.Width">
            <summary>Width of the viewport.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT.Height">
            <summary>Height of the viewport.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT.MinDepth">
            <summary>Minimum depth of the viewport. Ranges between 0 and 1.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT.MaxDepth">
            <summary>Maximum depth of the viewport. Ranges between 0 and 1.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE">
            <summary>Defines constants that specify a level of dynamic optimization to apply to GPU work that's subsequently submitted.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_background_processing_mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE.D3D12_BACKGROUND_PROCESSING_MODE_ALLOWED">
            <summary>The default setting. Specifies that the driver may instrument workloads, and dynamically recompile shaders, in a low overhead, non-intrusive manner that avoids glitching the foreground workload.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE.D3D12_BACKGROUND_PROCESSING_MODE_ALLOW_INTRUSIVE_MEASUREMENTS">
            <summary>Specifies that the driver may instrument as aggressively as possible. The understanding is that causing glitches is fine while in this mode, because the current work is being submitted specifically to train the system.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE.D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_BACKGROUND_WORK">
            <summary>Specifies that background work should stop. This ensures that background shader recompilation won't consume CPU cycles. Available only in <b>Developer mode</b>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE.D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_PROFILING_BY_SYSTEM">
            <summary>Specifies that all dynamic optimization should be disabled. For example, if you're doing an A/B performance comparison, then using this constant ensures that the driver doesn't change anything that might interfere with your results. Available only in <b>Developer mode</b>.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND">
            <summary>Specifies blend factors, which modulate values for the pixel shader and render target.</summary>
            <remarks>
            <para>Source and destination blend operations are specified in a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_blend_desc">D3D12_RENDER_TARGET_BLEND_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_blend#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_ZERO">
            <summary>The blend factor is (0, 0, 0, 0). No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_ONE">
            <summary>The blend factor is (1, 1, 1, 1). No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_SRC_COLOR">
            <summary>The blend factor is (Rₛ, Gₛ, Bₛ, Aₛ), that is color data (RGB) from a pixel shader. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_INV_SRC_COLOR">
            <summary>The blend factor is (1 - Rₛ, 1 - Gₛ, 1 - Bₛ, 1 - Aₛ), that is color data (RGB) from a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_SRC_ALPHA">
            <summary>The blend factor is (Aₛ, Aₛ, Aₛ, Aₛ), that is alpha data (A) from a pixel shader. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_INV_SRC_ALPHA">
            <summary>The blend factor is ( 1 - Aₛ, 1 - Aₛ, 1 - Aₛ, 1 - Aₛ), that is alpha data (A) from a pixel shader. The pre-blend operation inverts the data, generating 1 - A.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_DEST_ALPHA">
            <summary>The blend factor is (A<sub>d</sub> A<sub>d</sub> A<sub>d</sub> A<sub>d</sub>), that is alpha data from a render target. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_INV_DEST_ALPHA">
            <summary>The blend factor is (1 - A<sub>d</sub> 1 - A<sub>d</sub> 1 - A<sub>d</sub> 1 - A<sub>d</sub>), that is alpha data from a render target. The pre-blend operation inverts the data, generating 1 - A.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_DEST_COLOR">
            <summary>The blend factor is (R<sub>d</sub>, G<sub>d</sub>, B<sub>d</sub>, A<sub>d</sub>), that is color data from a render target. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_INV_DEST_COLOR">
            <summary>The blend factor is (1 - R<sub>d</sub>, 1 - G<sub>d</sub>, 1 - B<sub>d</sub>, 1 - A<sub>d</sub>), that is color data from a render target. The pre-blend operation inverts the data, generating 1 - RGB.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_SRC_ALPHA_SAT">
            <summary>
            <para>The blend factor is (f, f, f, 1); where f = min(Aₛ, 1 - A<sub>d</sub>). The pre-blend operation clamps the data to 1 or less.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_blend#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_BLEND_FACTOR">
            <summary>The blend factor is the blend factor set with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-omsetblendfactor">ID3D12GraphicsCommandList::OMSetBlendFactor</a>. No pre-blend operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_INV_BLEND_FACTOR">
            <summary>The blend factor is the blend factor set with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-omsetblendfactor">ID3D12GraphicsCommandList::OMSetBlendFactor</a>. The pre-blend operation inverts the blend factor, generating 1 - blend_factor.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_SRC1_COLOR">
            <summary>The blend factor is data sources both as color data output by a pixel shader. There is no pre-blend operation. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_INV_SRC1_COLOR">
            <summary>The blend factor is data sources both as color data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_SRC1_ALPHA">
            <summary>The blend factor is data sources as alpha data output by a pixel shader. There is no pre-blend operation. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND.D3D12_BLEND_INV_SRC1_ALPHA">
            <summary>The blend factor is data sources as alpha data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - A. This blend factor supports dual-source color blending.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_DESC">
            <summary>Describes the blend state.</summary>
            <remarks>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a> object contains a blend-state structure that controls blending by the output-merger stage. Here are the default values for blend state. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_blend_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_DESC.AlphaToCoverageEnable">
            <summary>Specifies whether to use alpha-to-coverage as a multisampling technique when setting a pixel to a render target. For more info about using alpha-to-coverage, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-blend-state">Alpha-To-Coverage</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_DESC.IndependentBlendEnable">
            <summary>
            <para>Specifies whether to enable independent blending in simultaneous render targets. Set to <b>TRUE</b> to enable independent blending. If set to <b>FALSE</b>, only the <b>RenderTarget</b>[0] members are used; <b>RenderTarget</b>[1..7] are ignored. See the **Remarks** section for restrictions.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_DESC.RenderTarget">
            <summary>An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_blend_desc">D3D12_RENDER_TARGET_BLEND_DESC</a> structures that describe the blend states for render targets; these correspond to the eight render targets that can be bound to the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> at one time.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_DESC.__winmdroot_Graphics_Direct3D12_D3D12_RENDER_TARGET_BLEND_DESC_8.Length">
            <summary>Always <c>8</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_DESC.__winmdroot_Graphics_Direct3D12_D3D12_RENDER_TARGET_BLEND_DESC_8.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_DESC.__winmdroot_Graphics_Direct3D12_D3D12_RENDER_TARGET_BLEND_DESC_8.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_OP">
            <summary>Specifies RGB or alpha blending operations.</summary>
            <remarks>
            <para>The runtime implements RGB blending and alpha blending separately. Therefore, blend state requires separate blend operations for RGB data and alpha data. These blend operations are specified in a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_blend_desc">D3D12_RENDER_TARGET_BLEND_DESC</a> structure. The two sources —source 1 and source 2— are shown in the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">blending block diagram</a>. Blend state is used by the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> to determine how to blend together two RGB pixel values and two alpha values. The two RGB pixel values and two alpha values are the RGB pixel value and alpha value that the pixel shader outputs and the RGB pixel value and alpha value already in the output render target. The <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_blend">D3D12_BLEND</a> value controls the data source that the blending stage uses to modulate values for the pixel shader, render target, or both. The <b>D3D12_BLEND_OP</b> value controls how the blending stage mathematically combines these modulated values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_blend_op#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_OP.D3D12_BLEND_OP_ADD">
            <summary>Add source 1 and source 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_OP.D3D12_BLEND_OP_SUBTRACT">
            <summary>Subtract source 1 from source 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_OP.D3D12_BLEND_OP_REV_SUBTRACT">
            <summary>Subtract source 2 from source 1.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_OP.D3D12_BLEND_OP_MIN">
            <summary>Find the minimum of source 1 and source 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BLEND_OP.D3D12_BLEND_OP_MAX">
            <summary>Find the maximum of source 1 and source 2.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BOX">
            <summary>Describes a 3D box.</summary>
            <remarks>
            <para>This structure is used by the methods <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12resource-writetosubresource">WriteToSubresource</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12resource-readfromsubresource">ReadFromSubresource</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-copytextureregion">CopyTextureRegion</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_box#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BOX.left">
            <summary>The x position of the left hand side of the box.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BOX.top">
            <summary>The y position of the top of the box.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BOX.front">
            <summary>The z position of the front of the box.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BOX.right">
            <summary>The x position of the right hand side of the box, plus 1. This means that <c>right - left</c> equals the width of the box.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BOX.bottom">
            <summary>The y position of the bottom of the box, plus 1. This means that <c>bottom - top</c> equals the height of the box.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BOX.back">
            <summary>The z position of the back of the box, plus 1. This means that <c>back - front</c> equals the depth of the box.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_RTV">
            <summary>Describes the elements in a buffer resource to use in a render-target view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_view_desc">D3D12_RENDER_TARGET_VIEW_DESC</a> structure to view the resource as a buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_buffer_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_RTV.FirstElement">
            <summary>Number of bytes between the beginning of the buffer and the first element to access.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_RTV.NumElements">
            <summary>The total number of elements in the view.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_SRV">
            <summary>Describes the elements in a buffer resource to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a> to create a view of a buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_buffer_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_SRV.FirstElement">
            <summary>The index of the first element to be accessed by the view.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_SRV.NumElements">
            <summary>The number of elements in the resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_SRV.StructureByteStride">
            <summary>The size of each element in the buffer structure (in bytes) when the buffer represents a structured buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_SRV.Flags">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_buffer_srv_flags">D3D12_BUFFER_SRV_FLAGS</a>-typed value that identifies view options for the buffer. Currently, the only option is to identify a raw view of the buffer. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_SRV_FLAGS">
            <summary>Identifies how to view a buffer resource.</summary>
            <remarks>
            <para>This enumeration is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_buffer_srv">D3D12_BUFFER_SRV</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_buffer_srv_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_SRV_FLAGS.D3D12_BUFFER_SRV_FLAG_NONE">
            <summary>Indicates a default view.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_SRV_FLAGS.D3D12_BUFFER_SRV_FLAG_RAW">
            <summary>View the buffer as raw. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_UAV">
            <summary>Describes the elements in a buffer to use in a unordered-access view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_unordered_access_view_desc">D3D12_UNORDERED_ACCESS_VIEW_DESC</a> structure to view the resource as a buffer. If <i>StructureByteStride</i> value is not 0, a view of a structured buffer is created and the D3D12_UNORDERED_ACCESS_VIEW_DESC::Format field must be DXGI_FORMAT_UNKNOWN. If <i>StructureByteStride</i> is 0, a typed view of a buffer is created and a format must be supplied. The specified format for the typed view must be supported by the hardware. More information on this topic can be found in the <a href="https://docs.microsoft.com/en-gb/windows/win32/direct3d12/typed-unordered-access-view-loads">Typed unordered access view (UAV) loads</a> page.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_buffer_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_UAV.FirstElement">
            <summary>The zero-based index of the first element to be accessed.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_UAV.NumElements">
            <summary>The number of elements in the resource. For structured buffers, this is the number of structures in the buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_UAV.StructureByteStride">
            <summary>The size of each element in the buffer structure (in bytes) when the buffer represents a structured buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_UAV.CounterOffsetInBytes">
            <summary>The counter offset, in bytes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_UAV.Flags">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_buffer_uav_flags">D3D12_BUFFER_UAV_FLAGS</a>-typed value that specifies the view options for the resource.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_UAV_FLAGS">
            <summary>Identifies unordered-access view options for a buffer resource.</summary>
            <remarks>
            <para>This enum is used in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_buffer_uav">D3D12_BUFFER_UAV</a>  structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_buffer_uav_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_UAV_FLAGS.D3D12_BUFFER_UAV_FLAG_NONE">
            <summary>Indicates a default view.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUFFER_UAV_FLAGS.D3D12_BUFFER_UAV_FLAG_RAW">
            <summary>
            <para>Resource contains raw, unstructured data.  Requires the UAV format to be <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_R32_TYPELESS</a>. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_buffer_uav_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC">
            <summary>Describes a raytracing acceleration structure. Pass this structure into ID3D12GraphicsCommandList4::BuildRaytracingAccelerationStructure to describe the acceleration structure to be built.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_build_raytracing_acceleration_structure_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC.DestAccelerationStructureData">
            <summary>
            <para>Location to store resulting acceleration structure.  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device5-getraytracingaccelerationstructureprebuildinfo">ID3D12Device5::GetRaytracingAccelerationStructurePrebuildInfo</a> reports the amount of memory required for the result here given a set of acceleration structure build parameters. The address must be aligned to 256 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT</a>. > [!IMPORTANT] > The memory must be in state [**D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_build_raytracing_acceleration_structure_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC.Inputs">
            <summary>Description of the input data for the acceleration structure build.  This is data is stored in a separate structure because it is also used with <b>GetRaytracingAccelerationStructurePrebuildInfo</b>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC.SourceAccelerationStructureData">
            <summary>
            <para>Address of an existing acceleration structure if an acceleration structure update (an incremental build) is being requested, by setting  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_build_flags">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE</a> in the Flags parameter.  Otherwise this address must be NULL. If this address is the same as <i>DestAccelerationStructureData</i>, the update is to be performed in-place.  Any other form of overlap of the source and destination memory is invalid and produces undefined behavior. The address must be aligned to 256 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT</a>, which should automatically be the case because any existing acceleration structure passed in here would have already been required to be placed with such alignment. > [!IMPORTANT] > The memory must be in state [**D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_build_raytracing_acceleration_structure_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC.ScratchAccelerationStructureData">
            <summary></summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS">
            <summary>Defines the inputs for a raytracing acceleration structure build operation. This structure is used by ID3D12GraphicsCommandList4::BuildRaytracingAccelerationStructure and ID3D12Device5::GetRaytracingAccelerationStructurePrebuildInfo.</summary>
            <remarks>
            <para>When used with  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device5-getraytracingaccelerationstructureprebuildinfo">GetRaytracingAccelerationStructurePrebuildInfo</a>, which actually perform a build, any parameter that is referenced via <a href="https://docs.microsoft.com/windows/desktop/direct3d12/d3d12_gpu_virtual_address">D3D12_GPU_VIRTUAL_ADDRESS</a> (an address in GPU memory), like <i>InstanceDescs</i>, will not be accessed by the operation.  So this memory does not need to be initialized yet or be in a particular resource state.  Whether GPU addresses are null or not can be inspected by the operation, even though the pointers are not dereferenced.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_build_raytracing_acceleration_structure_inputs#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS.Type">
            <summary>The type of acceleration structure to build.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS.Flags">
            <summary>The build flags.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS.NumDescs">
            <summary>
            <para>If <i>Type</i> is <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TOP_LEVEL</b>, this value is the number of instances, laid out based on <i>DescsLayout</i>. If <i>Type</i> is <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BOTTOM_LEVEL</b>, this value is the number of elements referred to by <i>pGeometryDescs</i> or <i>ppGeometryDescs</i>. Which of these fields  is used depends on <i>DescsLayout</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_build_raytracing_acceleration_structure_inputs#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS.DescsLayout">
            <summary>How geometry descriptions are specified; either an array of descriptions or an array of pointers to descriptions.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_CACHED_PIPELINE_STATE">
            <summary>Stores a pipeline state.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a> structure, and the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_compute_pipeline_state_desc">D3D12_COMPUTE_PIPELINE_STATE_DESC</a> structure. This structure is intended to be filled with the data retrieved from <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12pipelinestate-getcachedblob">ID3D12PipelineState::GetCachedBlob</a>. This cached PSO contains data specific to the hardware, driver, and machine that it was retrieved from. Compilation using this data should be faster than compilation without. The rest of the data in the PSO needs to still be valid, and needs to match the cached PSO, otherwise E_INVALIDARG might be returned. If the driver has been upgraded to a D3D12 driver after the PSO was cached, you might see a D3D12_ERROR_DRIVER_VERSION_MISMATCH return code, or if you’re running on a different GPU, the D3D12_ERROR_ADAPTER_NOT_FOUND return code.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_cached_pipeline_state#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CACHED_PIPELINE_STATE.pCachedBlob">
            <summary>Specifies pointer that references the memory location of the cache.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CACHED_PIPELINE_STATE.CachedBlobSizeInBytes">
            <summary>Specifies the size of the cache in bytes.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS">
            <summary>Specifies what to clear from the depth stencil view.</summary>
            <remarks>
            <para>This enum is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-cleardepthstencilview">ID3D12GraphicsCommandList::ClearDepthStencilView</a>. The flags can be combined to clear all.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_clear_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS.D3D12_CLEAR_FLAG_DEPTH">
            <summary>Indicates the depth buffer should be cleared.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS.D3D12_CLEAR_FLAG_STENCIL">
            <summary>Indicates the stencil buffer should be cleared.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE">
            <summary>Describes a value used to optimize clear operations for a particular resource.</summary>
            <remarks>
            <para>This structure is optionally passed into the following methods:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_clear_value#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE.Format">
            <summary>
            <para>Specifies one member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> enum. The format of the commonly cleared color follows the same validation rules as a view/ descriptor creation. In general, the format of the clear color can be any format in the same typeless group that the resource format belongs to. This <i>Format</i> must match the format of the view used during the clear operation. It indicates whether the <i>Color</i> or the <i>DepthStencil</i> member is valid and how to convert the values for usage with the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_clear_value#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE._Anonymous_e__Union.__float_4.Length">
            <summary>Always <c>4</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE._Anonymous_e__Union.__float_4.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE._Anonymous_e__Union.__float_4.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS">
            <summary></summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_command_list_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS.D3D12_COMMAND_LIST_FLAG_NONE">
            <summary>No flags specified.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE">
            <summary>Specifies the type of a command list.</summary>
            <remarks>
            <para>This enum is used by the following methods: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_command_list_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE.D3D12_COMMAND_LIST_TYPE_DIRECT">
            <summary>Specifies a command buffer that the GPU can execute. A direct command list doesn't inherit any GPU state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE.D3D12_COMMAND_LIST_TYPE_BUNDLE">
            <summary>Specifies a command buffer that can be executed only directly via a direct command list. A bundle command list inherits all GPU state (except for the currently set pipeline state object and primitive topology).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE.D3D12_COMMAND_LIST_TYPE_COMPUTE">
            <summary>Specifies a command buffer for computing.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE.D3D12_COMMAND_LIST_TYPE_COPY">
            <summary>Specifies a command buffer for copying.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE.D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE">
            <summary>Specifies a command buffer for video decoding.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE.D3D12_COMMAND_LIST_TYPE_VIDEO_PROCESS">
            <summary>Specifies a command buffer for video processing.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC">
            <summary>Describes a command queue.</summary>
            <remarks>
            <para>This structure is passed into <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12device-createcommandqueue">CreateCommandQueue</a>.</para>
            <para>This structure is returned by <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12commandqueue-getdesc">ID3D12CommandQueue::GetDesc</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_command_queue_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC.Type">
            <summary>Specifies one member of <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_command_list_type">D3D12_COMMAND_LIST_TYPE</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC.Priority">
            <summary>
            <para>The priority for the command queue, as a <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_command_queue_priority">D3D12_COMMAND_QUEUE_PRIORITY</a>enumeration constant to select normal or high priority.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_command_queue_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC.Flags">
            <summary>Specifies any flags from the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_command_queue_flags">D3D12_COMMAND_QUEUE_FLAGS</a> enumeration.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC.NodeMask">
            <summary>
            <para>For single GPU operation, set this to zero. If there are multiple GPU nodes, set a bit to identify the node (the  device's physical adapter) to which the command queue applies. Each bit in the mask corresponds to a single node. Only 1 bit must be set. Refer to <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_command_queue_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_FLAGS">
            <summary>Specifies flags to be used when creating a command queue.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_command_queue_desc">D3D12_COMMAND_QUEUE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_command_queue_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_FLAGS.D3D12_COMMAND_QUEUE_FLAG_NONE">
            <summary>Indicates a default command queue.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_FLAGS.D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT">
            <summary>Indicates that the GPU timeout should be disabled for this command queue.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC">
            <summary>Describes the arguments (parameters) of a command signature.</summary>
            <remarks>
            <para>Use this structure by <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12device-createcommandsignature">CreateCommandSignature</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_command_signature_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC.ByteStride">
            <summary>Specifies the size of each argument of a command signature, in bytes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC.NumArgumentDescs">
            <summary>Specifies the number of arguments in the command signature.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC.pArgumentDescs">
            <summary>
            <para>An array of <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_indirect_argument_desc">D3D12_INDIRECT_ARGUMENT_DESC</a> structures, containing details of the arguments, including whether the argument is a vertex buffer, constant, constant buffer view, shader resource view, or unordered access view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_command_signature_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC.NodeMask">
            <summary>
            <para>For single GPU operation, set this to zero. If there are multiple GPU nodes, set bits to identify the nodes (the  device's physical adapters) for which the command signature is to apply. Each bit in the mask corresponds to a single node. Refer to <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_command_signature_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_COMPARISON_FUNC">
            <summary>Specifies comparison options.</summary>
            <remarks>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_comparison_func#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPARISON_FUNC.D3D12_COMPARISON_FUNC_NEVER">
            <summary>Never pass the comparison.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPARISON_FUNC.D3D12_COMPARISON_FUNC_LESS">
            <summary>If the source data is less than the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPARISON_FUNC.D3D12_COMPARISON_FUNC_EQUAL">
            <summary>If the source data is equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPARISON_FUNC.D3D12_COMPARISON_FUNC_LESS_EQUAL">
            <summary>If the source data is less than or equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPARISON_FUNC.D3D12_COMPARISON_FUNC_GREATER">
            <summary>If the source data is greater than the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPARISON_FUNC.D3D12_COMPARISON_FUNC_NOT_EQUAL">
            <summary>If the source data is not equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPARISON_FUNC.D3D12_COMPARISON_FUNC_GREATER_EQUAL">
            <summary>If the source data is greater than or equal to the destination data, the comparison passes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPARISON_FUNC.D3D12_COMPARISON_FUNC_ALWAYS">
            <summary>Always pass the comparison.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC">
            <summary>Describes a compute pipeline state object.</summary>
            <remarks>
            <para>This structure is used by <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12device-createcomputepipelinestate">CreateComputePipelineState</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_compute_pipeline_state_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC.pRootSignature">
            <summary>A pointer to the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12rootsignature">ID3D12RootSignature</a> object.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC.CS">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_shader_bytecode">D3D12_SHADER_BYTECODE</a> structure that describes the compute shader.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC.NodeMask">
            <summary>
            <para>For single GPU operation, set this to zero. If there are multiple GPU nodes, set bits to identify the nodes (the  device's physical adapters) for which the compute pipeline state is to apply. Each bit in the mask corresponds to a single node. Refer to <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_compute_pipeline_state_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC.CachedPSO">
            <summary>A cached pipeline state object, as a <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_cached_pipeline_state">D3D12_CACHED_PIPELINE_STATE</a> structure. pCachedBlob and CachedBlobSizeInBytes may be set to NULL and 0 respectively.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC.Flags">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_pipeline_state_flags">D3D12_PIPELINE_STATE_FLAGS</a> enumeration constant such as for "tool debug".</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_CONSERVATIVE_RASTERIZATION_MODE">
            <summary>Identifies whether conservative rasterization is on or off.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_rasterizer_desc">D3D12_RASTERIZER_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_conservative_rasterization_mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CONSERVATIVE_RASTERIZATION_MODE.D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF">
            <summary>Conservative rasterization is off.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CONSERVATIVE_RASTERIZATION_MODE.D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON">
            <summary>Conservative rasterization is on.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC">
            <summary>Describes a constant buffer to view.</summary>
            <remarks>
            <para>This structure is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createconstantbufferview">CreateConstantBufferView</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_constant_buffer_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC.BufferLocation">
            <summary>
            <para>The D3D12_GPU_VIRTUAL_ADDRESS of the constant buffer. D3D12_GPU_VIRTUAL_ADDRESS is a typedef'd alias of UINT64.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_constant_buffer_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC.SizeInBytes">
            <summary>The size in bytes of the constant buffer.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE">
            <summary>Describes a CPU descriptor handle.</summary>
            <remarks>
            <para>This structure is returned by the following methods:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_cpu_descriptor_handle#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE.ptr">
            <summary>The address of  the descriptor.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_CPU_PAGE_PROPERTY">
            <summary>Specifies the CPU-page properties for the heap.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_heap_properties">D3D12_HEAP_PROPERTIES</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_cpu_page_property#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CPU_PAGE_PROPERTY.D3D12_CPU_PAGE_PROPERTY_UNKNOWN">
            <summary>The CPU-page property is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CPU_PAGE_PROPERTY.D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE">
            <summary>The CPU cannot access the heap, therefore no page properties are available.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CPU_PAGE_PROPERTY.D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE">
            <summary>The CPU-page property is write-combined.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CPU_PAGE_PROPERTY.D3D12_CPU_PAGE_PROPERTY_WRITE_BACK">
            <summary>The CPU-page property is write-back.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_CULL_MODE">
            <summary>Specifies triangles facing a particular direction are not drawn.</summary>
            <remarks>
            <para>Cull mode is specified in a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_rasterizer_desc">D3D12_RASTERIZER_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_cull_mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CULL_MODE.D3D12_CULL_MODE_NONE">
            <summary>Always draw all triangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CULL_MODE.D3D12_CULL_MODE_FRONT">
            <summary>Do not draw triangles that are front-facing.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_CULL_MODE.D3D12_CULL_MODE_BACK">
            <summary>Do not draw triangles that are back-facing.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCILOP_DESC">
            <summary>Describes stencil operations that can be performed based on the results of stencil test.</summary>
            <remarks>
            <para>All stencil operations are specified as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_stencil_op">D3D12_STENCIL_OP</a>-typed value. Each stencil operation can be set differently based on the outcome of the stencil test, which is referred to as <b>StencilFunc</b>, in the stencil test portion of depth-stencil testing. Members of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_desc">D3D12_DEPTH_STENCIL_DESC</a> have this structure for their data type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_depth_stencilop_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCILOP_DESC.StencilFailOp">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_stencil_op">D3D12_STENCIL_OP</a>-typed value that identifies the stencil operation to perform when stencil testing fails.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCILOP_DESC.StencilDepthFailOp">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_stencil_op">D3D12_STENCIL_OP</a>-typed value that identifies the stencil operation to perform when stencil testing passes and depth testing fails.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCILOP_DESC.StencilPassOp">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_stencil_op">D3D12_STENCIL_OP</a>-typed value that identifies the stencil operation to perform when stencil testing and depth testing both pass.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCILOP_DESC.StencilFunc">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_comparison_func">D3D12_COMPARISON_FUNC</a>-typed value that identifies the function that compares stencil data against existing stencil data.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_DESC">
            <summary>Describes depth-stencil state.</summary>
            <remarks>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a> object contains a depth-stencil-state structure that controls how depth-stencil testing is performed by the output-merger stage.</para>
            <para>This table shows the default values of depth-stencil states. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_depth_stencil_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_DESC.DepthEnable">
            <summary>Specifies whether to enable depth testing. Set this member to <b>TRUE</b> to enable depth testing.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_DESC.DepthWriteMask">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_depth_write_mask">D3D12_DEPTH_WRITE_MASK</a>-typed value that identifies a portion of the depth-stencil buffer that can be modified by depth data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_DESC.DepthFunc">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_comparison_func">D3D12_COMPARISON_FUNC</a>-typed value that identifies a function that compares depth data against existing depth data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_DESC.StencilEnable">
            <summary>Specifies whether to enable stencil testing. Set this member to <b>TRUE</b> to enable stencil testing.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_DESC.StencilReadMask">
            <summary>Identify a portion of the depth-stencil buffer for reading stencil data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_DESC.StencilWriteMask">
            <summary>Identify a portion of the depth-stencil buffer for writing stencil data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_DESC.FrontFace">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencilop_desc">D3D12_DEPTH_STENCILOP_DESC</a> structure that describes how to use the results of the depth test and the stencil test for pixels whose surface normal is facing towards the camera.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_DESC.BackFace">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencilop_desc">D3D12_DEPTH_STENCILOP_DESC</a> structure that describes how to use the results of the depth test and the stencil test for pixels whose surface normal is facing away from the camera.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VALUE">
            <summary>Specifies a depth and stencil value.</summary>
            <remarks>
            <para>This structure is used in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_clear_value">D3D12_CLEAR_VALUE</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_depth_stencil_value#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VALUE.Depth">
            <summary>Specifies the depth value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VALUE.Stencil">
            <summary>Specifies the stencil value.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC">
            <summary>Describes the subresources of a texture that are accessible from a depth-stencil view.</summary>
            <remarks>
            <para>These are valid formats for a depth-stencil view:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_depth_stencil_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC.Format">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value that specifies the viewing format.  For allowable formats, see Remarks.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC.ViewDimension">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_dsv_dimension">D3D12_DSV_DIMENSION</a>-typed value that specifies how the depth-stencil resource will be accessed. This member also determines which _DSV to use in the following union.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC.Flags">
            <summary>
            <para>A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_dsv_flags">D3D12_DSV_FLAGS</a> enumeration constants that are combined by using a bitwise OR operation. The resulting value specifies whether the texture is read only. Pass 0 to specify that it isn't read only; otherwise, pass one or more of the members of the <b>D3D12_DSV_FLAGS</b> enumerated type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_depth_stencil_view_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_WRITE_MASK">
            <summary>Identifies the portion of a depth-stencil buffer for writing depth data.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_desc">D3D12_DEPTH_STENCIL_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_depth_write_mask#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_WRITE_MASK.D3D12_DEPTH_WRITE_MASK_ZERO">
            <summary>Turn off writes to the depth-stencil buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_WRITE_MASK.D3D12_DEPTH_WRITE_MASK_ALL">
            <summary>Turn on writes to the depth-stencil buffer.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC">
            <summary>Describes the descriptor heap.</summary>
            <remarks>
            <para>This structure is used by the following:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_descriptor_heap_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC.Type">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_descriptor_heap_type">D3D12_DESCRIPTOR_HEAP_TYPE</a>-typed value that specifies the types of descriptors in the heap.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC.NumDescriptors">
            <summary>The number of descriptors in the heap.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC.Flags">
            <summary>A combination of <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_descriptor_heap_flags">D3D12_DESCRIPTOR_HEAP_FLAGS</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies options for the heap.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC.NodeMask">
            <summary>
            <para>For single-adapter operation, set this to zero. If there are multiple adapter nodes, set a bit to identify the node (one of the device's physical adapters) to which the descriptor heap applies. Each bit in the mask corresponds to a single node. Only one bit must be set. See <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_descriptor_heap_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_FLAGS">
            <summary>Specifies options for a heap.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_descriptor_heap_desc">D3D12_DESCRIPTOR_HEAP_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_descriptor_heap_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_FLAGS.D3D12_DESCRIPTOR_HEAP_FLAG_NONE">
            <summary>Indicates default usage of a heap.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_FLAGS.D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE">
            <summary>
            <para>The flag [D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE](/windows/win32/api/d3d12/ne-d3d12-d3d12_descriptor_heap_flags) can optionally be set on a descriptor heap to indicate it is be bound on a command list for reference by shaders. Descriptor heaps created <i>without</i> this flag allow applications the option to stage descriptors in CPU memory before copying them to a shader visible descriptor heap, as a convenience. But it is also fine for applications to directly create descriptors into shader visible descriptor heaps with no requirement to stage anything on the CPU. Descriptor heaps bound via [ID3D12GraphicsCommandList::SetDescriptorHeaps](/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-setdescriptorheaps) must have the **D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE** flag set, else the debug layer will produce an error. Descriptor heaps with the **D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE** flag can't be used as the source heaps in calls to [ID3D12Device::CopyDescriptors](/windows/win32/api/d3d12/nf-d3d12-id3d12device-copydescriptors) or [ID3D12Device::CopyDescriptorsSimple](/windows/win32/api/d3d12/nf-d3d12-id3d12device-copydescriptorssimple), because they could be resident in **WRITE_COMBINE** memory or GPU-local memory, which is very inefficient to read from. This flag only applies to CBV/SRV/UAV descriptor heaps, and sampler descriptor heaps. It does not apply to other descriptor heap types since shaders do not directly reference the other types. Attempting to create an RTV/DSV heap with **D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE** results in a debug layer error.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_descriptor_heap_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE">
            <summary>Specifies a type of descriptor heap.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_descriptor_heap_desc">D3D12_DESCRIPTOR_HEAP_DESC</a> structure, and the following methods: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_descriptor_heap_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE.D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV">
            <summary>The descriptor heap for the combination of constant-buffer, shader-resource, and unordered-access views.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE.D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER">
            <summary>The descriptor heap for the sampler.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE.D3D12_DESCRIPTOR_HEAP_TYPE_RTV">
            <summary>The descriptor heap for the render-target view.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE.D3D12_DESCRIPTOR_HEAP_TYPE_DSV">
            <summary>The descriptor heap for the depth-stencil view.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE.D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES">
            <summary>The number of types of descriptor heaps.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE">
            <summary>Describes a descriptor range.</summary>
            <remarks>
            <para>This structure is a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_descriptor_table">D3D12_ROOT_DESCRIPTOR_TABLE</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_descriptor_range#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE.RangeType">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_descriptor_range_type">D3D12_DESCRIPTOR_RANGE_TYPE</a>-typed value that specifies the type of descriptor range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE.NumDescriptors">
            <summary>The number of descriptors in the range. Use -1 or UINT_MAX to specify an unbounded size. If a given descriptor range is unbounded, then it must either be the last range in the table definition, or else the following range in the table definition must have a value for *OffsetInDescriptorsFromTableStart* that is not [D3D12_DESCRIPTOR_RANGE_OFFSET_APPEND]().</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE.BaseShaderRegister">
            <summary>The base shader register in the range. For example, for shader-resource views (SRVs), 3 maps to ": register(t3);" in HLSL.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE.RegisterSpace">
            <summary>
            <para>The register space. Can typically be 0, but allows multiple descriptor  arrays of unknown size to not appear to overlap. For example, for SRVs, by extending the example in the <b>BaseShaderRegister</b> member description, 5 maps to ": register(t3,space5);" in HLSL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_descriptor_range#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE.OffsetInDescriptorsFromTableStart">
            <summary>The offset in descriptors, from the start of the descriptor table which was set as the root argument value for this parameter slot. This value can be <b>D3D12_DESCRIPTOR_RANGE_OFFSET_APPEND</b>, which indicates this range should immediately follow the preceding range.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE1">
            <summary>Describes a descriptor range, with flags to determine their volatility.</summary>
            <remarks>
            <para>This structure is a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_descriptor_table1">D3D12_ROOT_DESCRIPTOR_TABLE1</a> structure.</para>
            <para>Refer to the helper structure <a href="https://docs.microsoft.com/windows/desktop/direct3d12/cd3dx12-descriptor-range1">CD3DX12_DESCRIPTOR_RANGE1</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_descriptor_range1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE1.RangeType">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_descriptor_range_type">D3D12_DESCRIPTOR_RANGE_TYPE</a>-typed value that specifies the type of descriptor range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE1.NumDescriptors">
            <summary>The number of descriptors in the range. Use -1 or UINT_MAX to specify unbounded size. Only the last entry in a table can have unbounded size.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE1.BaseShaderRegister">
            <summary>The base shader register in the range. For example, for shader-resource views (SRVs), 3 maps to ": register(t3);" in HLSL.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE1.RegisterSpace">
            <summary>
            <para>The register space. Can typically be 0, but allows multiple descriptor  arrays of unknown size to not appear to overlap. For example, for SRVs, by extending the example in the <b>BaseShaderRegister</b> member description, 5 maps to ": register(t3,space5);" in HLSL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_descriptor_range1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE1.Flags">
            <summary>Specifies the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_descriptor_range_flags">D3D12_DESCRIPTOR_RANGE_FLAGS</a> that determine descriptor and data volatility.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE1.OffsetInDescriptorsFromTableStart">
            <summary>The offset in descriptors from the start of the root signature. This value can be <b>D3D12_DESCRIPTOR_RANGE_OFFSET_APPEND</b>, which indicates this range should immediately follow the preceding range.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_FLAGS">
            <summary>Specifies the volatility of both descriptors and the data they reference in a Root Signature 1.1 description, which can enable some driver optimizations.</summary>
            <remarks>
            <para>This enum is used by the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_descriptor_range1">D3D12_DESCRIPTOR_RANGE1</a> structure. To specify the volatility of just the data referenced by descriptors, refer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_root_descriptor_flags">D3D12_ROOT_DESCRIPTOR_FLAGS</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_descriptor_range_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_FLAGS.D3D12_DESCRIPTOR_RANGE_FLAG_NONE">
            <summary>Default behavior. Descriptors are static, and default assumptions are made for data (for SRV/CBV: DATA_STATIC_WHILE_SET_AT_EXECUTE, and for UAV: DATA_VOLATILE).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_FLAGS.D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE">
            <summary>
            <para>If this is the only flag set, then descriptors are volatile and default assumptions are made about data (for SRV/CBV: DATA_STATIC_WHILE_SET_AT_EXECUTE, and for UAV: DATA_VOLATILE). If this flag is combined with DATA_VOLATILE, then both descriptors and data are volaille, which is equivalent to Root Signature Version 1.0. If this flag is combined with DATA_STATIC_WHILE_SET_AT_EXECUTE, then descriptors are volatile. This still doesn’t allow them to change during command list execution so it is valid to combine the additional declaration that data is static while set via root descriptor table during execution – the underlying descriptors are effectively static for longer than the data is being promised to be static.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_descriptor_range_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_FLAGS.D3D12_DESCRIPTOR_RANGE_FLAG_DATA_VOLATILE">
            <summary>Descriptors are static and the data is volatile.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_FLAGS.D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE">
            <summary>Descriptors are static and data is static while set at execute.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_FLAGS.D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC">
            <summary>Both descriptors and data are static. This maximizes the potential for driver optimization.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_FLAGS.D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS">
            <summary>Provides the same benefits as static descriptors (see **D3D12_DESCRIPTOR_RANGE_FLAG_NONE**), except that the driver is not allowed to promote buffers to root descriptors as an optimization, because they must maintain bounds checks and root descriptors do not have those.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_TYPE">
            <summary>Specifies a range so that, for example, if part of a descriptor table has 100 shader-resource views (SRVs) that range can be declared in one entry rather than 100.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_descriptor_range">D3D12_DESCRIPTOR_RANGE</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_descriptor_range_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_TYPE.D3D12_DESCRIPTOR_RANGE_TYPE_SRV">
            <summary>Specifies a range of SRVs.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_TYPE.D3D12_DESCRIPTOR_RANGE_TYPE_UAV">
            <summary>Specifies a range of unordered-access views (UAVs).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_TYPE.D3D12_DESCRIPTOR_RANGE_TYPE_CBV">
            <summary>Specifies a range of constant-buffer views (CBVs).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_RANGE_TYPE.D3D12_DESCRIPTOR_RANGE_TYPE_SAMPLER">
            <summary>Specifies a range of samplers.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION">
            <summary>Describes details for the discard-resource operation.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-discardresource">ID3D12GraphicsCommandList::DiscardResource</a> method.</para>
            <para>If rectangles are supplied in this structure, the resource must have 2D subresources with all specified subresources the same dimension.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_discard_region#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION.NumRects">
            <summary>The number of rectangles in the array that the <b>pRects</b> member specifies.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION.pRects">
            <summary>
            <para>An array of <b>D3D12_RECT</b> structures for the rectangles in the resource to discard. If <b>NULL</b>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-discardresource">DiscardResource</a> discards the entire resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_discard_region#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION.FirstSubresource">
            <summary>Index of the first subresource in the resource to discard.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION.NumSubresources">
            <summary>The number of subresources in the resource to discard.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC">
            <summary>Describes the properties of a ray dispatch operation initiated with a call to ID3D12GraphicsCommandList4::DispatchRays.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_dispatch_rays_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC.RayGenerationShaderRecord">
            <summary>
            <para>The shader record for the ray generation shader to use. The memory pointed to must be in state <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE</a>. The address must be aligned to 64 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_SHADER_TABLE_BYTE_ALIGNMENT</a>, and in the range [0...4096] bytes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_dispatch_rays_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC.MissShaderTable">
            <summary>
            <para>The shader table for miss shaders. The stride is record stride, and must be aligned to 32 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_SHADER_RECORD_BYTE_ALIGNMENT</a>, and in the range [0...4096] bytes. 0 is allowed. The memory pointed to must be in state <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE</a>. The address must be aligned to 64 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_SHADER_TABLE_BYTE_ALIGNMENT</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_dispatch_rays_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC.HitGroupTable">
            <summary>
            <para>The shader table for hit groups. The stride is record stride, and must be aligned to 32 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_SHADER_RECORD_BYTE_ALIGNMENT</a>, and in the range [0...4096] bytes. 0 is allowed. The memory pointed to must be in state <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE</a>. The address must be aligned to 64 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_SHADER_TABLE_BYTE_ALIGNMENT</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_dispatch_rays_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC.CallableShaderTable">
            <summary>
            <para>The shader table for callable shaders. The stride is record stride, and must be aligned to 32 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_SHADER_RECORD_BYTE_ALIGNMENT</a>. 0 is allowed. The memory pointed to must be in state <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE</a>. The address must be aligned to 64 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_SHADER_TABLE_BYTE_ALIGNMENT</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_dispatch_rays_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC.Width">
            <summary>The width of the generation shader thread grid.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC.Height">
            <summary>The height of the generation shader thread grid.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC.Depth">
            <summary>The depth of the generation shader thread grid.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS">
            <summary>Specifies the result of a call to ID3D12Device5::CheckDriverMatchingIdentifier which queries whether serialized data is compatible with the current device and driver version.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_driver_matching_identifier_status">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS.D3D12_DRIVER_MATCHING_IDENTIFIER_COMPATIBLE_WITH_DEVICE">
            <summary>Serialized data is compatible with the current device/driver.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS.D3D12_DRIVER_MATCHING_IDENTIFIER_UNSUPPORTED_TYPE">
            <summary>The specified <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_serialized_data_type">D3D12_SERIALIZED_DATA_TYPE</a> specified is unknown or unsupported.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS.D3D12_DRIVER_MATCHING_IDENTIFIER_UNRECOGNIZED">
            <summary>Format of the data in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_serialized_data_driver_matching_identifier">D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER</a> is unrecognized.  This could indicate either corrupt data or the identifier was produced by a different hardware vendor.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS.D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_VERSION">
            <summary>Serialized data is recognized, but its version is not compatible with the current driver. This result may indicate that the device is from the same hardware vendor but is an incompatible version.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS.D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_TYPE">
            <summary><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_serialized_data_type">D3D12_SERIALIZED_DATA_TYPE</a> specifies a data type that is not compatible with the type of serialized data.  As long as there is only a single defined serialized data type this error cannot not be produced.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_DIMENSION">
            <summary>Specifies how to access a resource used in a depth-stencil view.</summary>
            <remarks>
            <para>Specify one of the values in this enumeration in the <b>ViewDimension</b> member of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_view_desc">D3D12_DEPTH_STENCIL_VIEW_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_dsv_dimension#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_DIMENSION.D3D12_DSV_DIMENSION_UNKNOWN">
            <summary><b>D3D12_DSV_DIMENSION_UNKNOWN</b> is not a valid value for <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_view_desc">D3D12_DEPTH_STENCIL_VIEW_DESC</a> and is not used.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_DIMENSION.D3D12_DSV_DIMENSION_TEXTURE1D">
            <summary>The resource will be accessed as a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_DIMENSION.D3D12_DSV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource will be accessed as an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_DIMENSION.D3D12_DSV_DIMENSION_TEXTURE2D">
            <summary>The resource will be accessed as a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_DIMENSION.D3D12_DSV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource will be accessed as an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_DIMENSION.D3D12_DSV_DIMENSION_TEXTURE2DMS">
            <summary>The resource will be accessed as a 2D texture with multi sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_DIMENSION.D3D12_DSV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource will be accessed as an array of 2D textures with multi sampling.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_FLAGS">
            <summary>Specifies depth-stencil view options.</summary>
            <remarks>
            <para>Specify a combination of the values in this enumeration in the <b>Flags</b> member of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_view_desc">D3D12_DEPTH_STENCIL_VIEW_DESC</a> structure. The values are combined by using a bitwise OR operation.</para>
            <para>Limiting a depth-stencil buffer to read-only access allows more than one depth-stencil view to be bound to the pipeline simultaneously, since it is not possible to have read/write conflicts between separate views.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_dsv_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_FLAGS.D3D12_DSV_FLAG_NONE">
            <summary>Indicates a default view.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_FLAGS.D3D12_DSV_FLAG_READ_ONLY_DEPTH">
            <summary>Indicates that depth values are read only.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_DSV_FLAGS.D3D12_DSV_FLAG_READ_ONLY_STENCIL">
            <summary>Indicates that stencil values are read only.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ELEMENTS_LAYOUT">
            <summary>Describes how the locations of elements are identified.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_elements_layout">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ELEMENTS_LAYOUT.D3D12_ELEMENTS_LAYOUT_ARRAY">
            <summary>For a data set of <i>n</i> elements, the pointer parameter points to the start of <i>n</i> elements in memory.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ELEMENTS_LAYOUT.D3D12_ELEMENTS_LAYOUT_ARRAY_OF_POINTERS">
            <summary>For a data set of <i>n</i> elements, the pointer parameter points to an array of <i>n</i> pointers in memory, each pointing to an individual element of the set.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE">
            <summary>Defines constants that specify a Direct3D 12 feature or feature set to query about.</summary>
            <remarks>
            <para>Use a constant from  this enumeration in a call to [ID3D12Device::CheckFeatureSupport](./nf-d3d12-id3d12device-checkfeaturesupport.md) to query a driver about support for various Direct3D 12 features. Each value in this enumeration has a corresponding data structure that you must pass (by pointer reference) in the *pFeatureSupportData* parameter of **ID3D12Device::CheckFeatureSupport**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_feature#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS">
            <summary>Indicates a query for the level of support for basic Direct3D 12 feature options. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_d3d12_options">D3D12_FEATURE_DATA_D3D12_OPTIONS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_ARCHITECTURE">
            <summary>
            <para>Indicates a query for the adapter's architectural details, so that your application can better optimize for certain adapter properties. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_architecture">D3D12_FEATURE_DATA_ARCHITECTURE</a>. <div class="alert"><b>Note</b>  This value has been superseded by the <b>D3D_FEATURE_DATA_ARCHITECTURE1</b> value. If your application targets Windows 10, version 1703 (Creators' Update) or higher, then use the <b>D3D_FEATURE_DATA_ARCHITECTURE1</b> value instead.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_FEATURE_LEVELS">
            <summary>Indicates a query for info about the <a href="https://docs.microsoft.com/windows/win32/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> supported. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_feature_levels">D3D12_FEATURE_DATA_FEATURE_LEVELS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_FORMAT_SUPPORT">
            <summary>Indicates a query for the resources supported by the current graphics driver for a given format. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_format_support">D3D12_FEATURE_DATA_FORMAT_SUPPORT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS">
            <summary>Indicates a query for the image quality levels for a given format and sample count. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_multisample_quality_levels">D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_FORMAT_INFO">
            <summary>Indicates a query for the DXGI data format. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_format_info">D3D12_FEATURE_DATA_FORMAT_INFO</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT">
            <summary>Indicates a query for the GPU's virtual address space limitations. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_gpu_virtual_address_support">D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_SHADER_MODEL">
            <summary>Indicates a query for the supported shader model. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_shader_model">D3D12_FEATURE_DATA_SHADER_MODEL</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS1">
            <summary>Indicates a query for the level of support for HLSL 6.0 wave operations. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_d3d12_options1">D3D12_FEATURE_DATA_D3D12_OPTIONS1</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT">
            <summary>Indicates a query for the level of support for protected resource sessions. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_protected_resource_session_support">D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_ROOT_SIGNATURE">
            <summary>Indicates a query for root signature version support. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_root_signature">D3D12_FEATURE_DATA_ROOT_SIGNATURE</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_ARCHITECTURE1">
            <summary>
            <para>Indicates a query for each adapter's architectural details, so that your application can better optimize for certain adapter properties. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_architecture1">D3D12_FEATURE_DATA_ARCHITECTURE1</a>. <div class="alert"><b>Note</b>  This value supersedes the <b>D3D_FEATURE_DATA_ARCHITECTURE</b> value. If your application targets Windows 10, version 1703 (Creators' Update) or higher, then use <b>D3D_FEATURE_DATA_ARCHITECTURE1</b>.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_feature#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS2">
            <summary>Indicates a query for the level of support for depth-bounds tests and programmable sample positions. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_d3d12_options2">D3D12_FEATURE_DATA_D3D12_OPTIONS2</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_SHADER_CACHE">
            <summary>Indicates a query for the level of support for shader caching. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_shader_cache">D3D12_FEATURE_DATA_SHADER_CACHE</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_COMMAND_QUEUE_PRIORITY">
            <summary>Indicates a query for the adapter's support for prioritization of different command queue types. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_command_queue_priority">D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS3">
            <summary>Indicates a query for the level of support for timestamp queries, format-casting, immediate write, view instancing, and barycentrics. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_d3d12_options3">D3D12_FEATURE_DATA_D3D12_OPTIONS3</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_EXISTING_HEAPS">
            <summary>Indicates a query for whether or not the adapter supports creating heaps from existing system memory. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_existing_heaps">D3D12_FEATURE_DATA_EXISTING_HEAPS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS4">
            <summary>Indicates a query for the level of support for 64KB-aligned MSAA textures, cross-API sharing, and native 16-bit shader operations. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_d3d12_options4">D3D12_FEATURE_DATA_D3D12_OPTIONS4</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_SERIALIZATION">
            <summary>Indicates a query for the level of support for heap serialization. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_serialization">D3D12_FEATURE_DATA_SERIALIZATION</a>.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_CROSS_NODE" -->
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS5">
            <summary>Starting with Windows 10, version 1809 (10.0; Build 17763), indicates a query for the level of support for render passes, ray tracing, and shader-resource view tier 3 tiled resources. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_d3d12_options5">D3D12_FEATURE_DATA_D3D12_OPTIONS5</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS6">
            <summary>Starting with Windows 10, version 1903 (10.0; Build 18362), indicates a query for the level of support for variable-rate shading (VRS), and indicates whether or not background processing is supported. For more info, see <a href="https://docs.microsoft.com/windows/win32/direct3d12/vrs">Variable-rate shading (VRS)</a>, and the <a href="https://microsoft.github.io/DirectX-Specs/d3d/BackgroundProcessing.html">Direct3D 12 background processing spec</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE.D3D12_FEATURE_QUERY_META_COMMAND">
            <summary>Indicates a query for the level of support for metacommands. The corresponding data structure for this value is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_query_meta_command">D3D12_FEATURE_DATA_QUERY_META_COMMAND</a>.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS">
            <summary>Specifies fence options.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createfence">ID3D12Device::CreateFence</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_fence_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS.D3D12_FENCE_FLAG_NONE">
            <summary>No options are specified.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS.D3D12_FENCE_FLAG_SHARED">
            <summary>The fence is shared.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS.D3D12_FENCE_FLAG_SHARED_CROSS_ADAPTER">
            <summary>The fence is shared with another GPU adapter.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS.D3D12_FENCE_FLAG_NON_MONITORED">
            <summary>The fence is of the non-monitored type. Non-monitored fences should only be used when the adapter doesn't support monitored fences, or when a fence is shared with an adapter that doesn't support monitored fences.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_FILL_MODE">
            <summary>Specifies the fill mode to use when rendering triangles.</summary>
            <remarks>
            <para>Fill mode is specified in a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_rasterizer_desc">D3D12_RASTERIZER_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_fill_mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILL_MODE.D3D12_FILL_MODE_WIREFRAME">
            <summary>Draw lines connecting the vertices. Adjacent vertices are not drawn.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILL_MODE.D3D12_FILL_MODE_SOLID">
            <summary>Fill the triangles formed by the vertices. Adjacent vertices are not drawn.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER" -->
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MIN_MAG_MIP_POINT">
            <summary>Use point sampling for minification, magnification, and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MIN_MAG_MIP_LINEAR">
            <summary>Use linear interpolation for minification, magnification, and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_ANISOTROPIC">
            <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_COMPARISON_MIN_MAG_MIP_POINT">
            <summary>Use point sampling for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR">
            <summary>Use linear interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_COMPARISON_ANISOTROPIC">
            <summary>Use anisotropic interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MINIMUM_MIN_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_MAG_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_MAG_MIP_LINEAR</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MINIMUM_ANISOTROPIC">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_ANISOTROPIC</a> and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_MAG_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_MIN_MAG_MIP_LINEAR</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_FILTER.D3D12_FILTER_MAXIMUM_ANISOTROPIC">
            <summary>Fetch the same set of texels as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER_ANISOTROPIC</a> and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <b>MinMaxFiltering</b> member in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ns-d3d11-d3d11_feature_data_d3d11_options1">D3D11_FEATURE_DATA_D3D11_OPTIONS1</a> structure.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_BASED_VALIDATION_FLAGS">
            <summary>Describes the level of GPU-based validation to perform at runtime.</summary>
            <remarks>
            <para>This enumeration is used with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12sdklayers/nf-d3d12sdklayers-id3d12debug2-setgpubasedvalidationflags">ID3D12Debug2::SetGPUBasedValidationFlags</a> method to configure the amount of runtime validation that will occur.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/ne-d3d12sdklayers-d3d12_gpu_based_validation_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_BASED_VALIDATION_FLAGS.D3D12_GPU_BASED_VALIDATION_FLAGS_NONE">
            <summary>Default behavior; resource states, descriptors, and descriptor tables are all validated.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_BASED_VALIDATION_FLAGS.D3D12_GPU_BASED_VALIDATION_FLAGS_DISABLE_STATE_TRACKING">
            <summary>When set, GPU-based validation does not perform resource state validation which greatly reduces the performance cost of GPU-based validtion. Descriptors and descriptor heaps are still validated.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE">
            <summary>Describes a GPU descriptor handle.</summary>
            <remarks>
            <para>This structure is returned by <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12descriptorheap-getgpudescriptorhandleforheapstart">ID3D12DescriptorHeap::GetGPUDescriptorHandleForHeapStart</a>.</para>
            <para>This structure is passed into the following methods:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_gpu_descriptor_handle#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE.ptr">
            <summary>The address of the descriptor.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE">
            <summary>Represents a GPU virtual address and indexing stride.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_gpu_virtual_address_and_stride">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE.StartAddress">
            <summary>The beginning of the virtual address range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE.StrideInBytes">
            <summary>Defines indexing stride, such as for vertices.  Only the bottom 32 bits are used.  The field is 64 bits to make alignment of containing structures consistent everywhere.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_VIRTUAL_ADDRESS_RANGE">
            <summary>Represents a GPU virtual address range.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_gpu_virtual_address_range">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_VIRTUAL_ADDRESS_RANGE.StartAddress">
            <summary>The beginning of the virtual address range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_VIRTUAL_ADDRESS_RANGE.SizeInBytes">
            <summary>The size of the virtual address range, in bytes.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE">
            <summary>Represents a GPU virtual address range and stride.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_gpu_virtual_address_range_and_stride">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE.StartAddress">
            <summary>The beginning of the virtual address range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE.SizeInBytes">
            <summary>The size of the virtual address range, in bytes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE.StrideInBytes">
            <summary>Defines the record-indexing stride within the memory range.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC">
            <summary>Describes a graphics pipeline state object.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12device-creategraphicspipelinestate">CreateGraphicsPipelineState</a> method.</para>
            <para>The runtime validates:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.pRootSignature">
            <summary>A pointer to the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12rootsignature">ID3D12RootSignature</a> object.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.VS">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_shader_bytecode">D3D12_SHADER_BYTECODE</a> structure that describes the vertex shader.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.PS">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_shader_bytecode">D3D12_SHADER_BYTECODE</a> structure that describes the pixel shader.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.DS">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_shader_bytecode">D3D12_SHADER_BYTECODE</a> structure that describes the domain shader.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.HS">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_shader_bytecode">D3D12_SHADER_BYTECODE</a> structure that describes the hull shader.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.GS">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_shader_bytecode">D3D12_SHADER_BYTECODE</a> structure that describes the geometry shader.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.StreamOutput">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_stream_output_desc">D3D12_STREAM_OUTPUT_DESC</a> structure that describes a streaming output buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.BlendState">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_blend_desc">D3D12_BLEND_DESC</a> structure that describes the blend state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.SampleMask">
            <summary>The sample mask for the blend state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.RasterizerState">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_rasterizer_desc">D3D12_RASTERIZER_DESC</a> structure that describes the rasterizer state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.DepthStencilState">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_depth_stencil_desc">D3D12_DEPTH_STENCIL_DESC</a> structure that describes the depth-stencil state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.InputLayout">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_input_layout_desc">D3D12_INPUT_LAYOUT_DESC</a> structure that describes the input-buffer data for the input-assembler stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.IBStripCutValue">
            <summary>Specifies the properties of the index buffer in a  <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_index_buffer_strip_cut_value">D3D12_INDEX_BUFFER_STRIP_CUT_VALUE</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.PrimitiveTopologyType">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_primitive_topology_type">D3D12_PRIMITIVE_TOPOLOGY_TYPE</a>-typed value for the type of primitive, and ordering of the primitive data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.NumRenderTargets">
            <summary>The number of render target formats in the  <b>RTVFormats</b> member.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.RTVFormats">
            <summary>An array of <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed values for the render target formats.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.DSVFormat">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value for the depth-stencil format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.SampleDesc">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a> structure that specifies multisampling parameters.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.NodeMask">
            <summary>
            <para>For single GPU operation, set this to zero. If there are multiple GPU nodes, set bits to identify the nodes (the  device's physical adapters) for which the graphics pipeline state is to apply. Each bit in the mask corresponds to a single node. Refer to <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.CachedPSO">
            <summary>A cached pipeline state object, as a <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_cached_pipeline_state">D3D12_CACHED_PIPELINE_STATE</a> structure. pCachedBlob and CachedBlobSizeInBytes may be set to NULL and 0 respectively.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.Flags">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_pipeline_state_flags">D3D12_PIPELINE_STATE_FLAGS</a> enumeration constant such as for "tool debug".</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.__winmdroot_Graphics_Dxgi_Common_DXGI_FORMAT_8.Length">
            <summary>Always <c>8</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.__winmdroot_Graphics_Dxgi_Common_DXGI_FORMAT_8.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC.__winmdroot_Graphics_Dxgi_Common_DXGI_FORMAT_8.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES">
            <summary>Defines flags that specify states related to a graphics command list. Values can be bitwise OR'd together.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_graphics_states">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_NONE">
            <summary>Specifies no state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_IA_VERTEX_BUFFERS">
            <summary>Specifies the state of the vertex buffer bindings on the input assembler stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_IA_INDEX_BUFFER">
            <summary>Specifies the state of the index buffer binding on the input assembler stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_IA_PRIMITIVE_TOPOLOGY">
            <summary>Specifies the state of the primitive topology value set on the input assembler stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_DESCRIPTOR_HEAP">
            <summary>Specifies the state of the currently bound descriptor heaps.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_GRAPHICS_ROOT_SIGNATURE">
            <summary>Specifies the state of the currently set graphics root signature.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_COMPUTE_ROOT_SIGNATURE">
            <summary>Specifies the state of the currently set compute root signature.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_RS_VIEWPORTS">
            <summary>Specifies the state of the viewports bound to the rasterizer stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_RS_SCISSOR_RECTS">
            <summary>Specifies the state of the scissor rectangles bound to the rasterizer stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_PREDICATION">
            <summary>Specifies the predicate state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_OM_RENDER_TARGETS">
            <summary>Specifies the state of the render targets bound to the output merger stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_OM_STENCIL_REF">
            <summary>Specifies the state of the reference value for depth stencil tests set on the output merger stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_OM_BLEND_FACTOR">
            <summary>Specifies the state of the blend factor set on the output merger stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_PIPELINE_STATE">
            <summary>Specifies the state of the pipeline state object.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_SO_TARGETS">
            <summary>Specifies the state of the buffer views bound to the stream output stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_OM_DEPTH_BOUNDS">
            <summary>Specifies the state of the depth bounds set on the output merger stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_SAMPLE_POSITIONS">
            <summary>Specifies the state of the sample positions.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_STATES.D3D12_GRAPHICS_STATE_VIEW_INSTANCE_MASK">
            <summary>Specifies the state of the view instances mask.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC">
            <summary>Describes a heap.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createheap">CreateHeap</a> method, and returned by the <a href="https://docs.microsoft.com/windows/desktop/direct3d12/id3d12heap-getdesc">GetDesc</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_heap_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC.SizeInBytes">
            <summary>
            <para>The size, in bytes, of the heap. To avoid wasting memory, applications should pass <i>SizeInBytes</i> values which are multiples of the effective <i>Alignment</i>; but non-aligned <i>SizeInBytes</i> is also supported, for convenience. To find out how large a heap must be to support textures with undefined layouts and adapter-specific sizes, call <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-getresourceallocationinfo">ID3D12Device::GetResourceAllocationInfo</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_heap_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC.Properties">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_heap_properties">D3D12_HEAP_PROPERTIES</a> structure that describes the heap properties.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC.Alignment">
            <summary>
            <para>The alignment value for the heap.  Valid values:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_heap_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC.Flags">
            <summary>
            <para>A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_heap_flags">D3D12_HEAP_FLAGS</a>-typed values that are combined by using a bitwise-OR operation. The resulting value identifies heap options. When creating heaps to support adapters with resource heap tier 1, an application must choose some flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_heap_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS">
            <summary>Specifies heap options, such as whether the heap can contain textures, and whether resources are shared across adapters.</summary>
            <remarks>
            <para>This enum is used by the following API items: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_heap_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_NONE">
            <summary>No options are specified.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_SHARED">
            <summary>The heap is shared. Refer to <a href="https://docs.microsoft.com/windows/desktop/direct3d12/shared-heaps">Shared Heaps</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_DENY_BUFFERS">
            <summary>The heap isn't allowed to contain buffers.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_ALLOW_DISPLAY">
            <summary>The heap is allowed to contain swap-chain surfaces.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER">
            <summary>The heap is allowed to share resources across adapters. Refer to <a href="https://docs.microsoft.com/windows/desktop/direct3d12/shared-heaps">Shared Heaps</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES">
            <summary>The heap is not allowed to store Render Target (RT) and/or Depth-Stencil (DS) textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES">
            <summary>The heap is not allowed to contain resources with D3D12_RESOURCE_DIMENSION_TEXTURE1D, D3D12_RESOURCE_DIMENSION_TEXTURE2D, or D3D12_RESOURCE_DIMENSION_TEXTURE3D  unless either D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET or D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL are present. Refer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_dimension">D3D12_RESOURCE_DIMENSION</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_flags">D3D12_RESOURCE_FLAGS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_HARDWARE_PROTECTED">
            <summary>Unsupported. Do not use.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH">
            <summary>The heap supports MEM_WRITE_WATCH functionality, which causes the system to track the pages that are written to in the commited memory region. This flag can't be combined with the D3D12_HEAP_TYPE_DEFAULT or D3D12_CPU_PAGE_PROPERTY_UNKNOWN flags. Applications are discouraged from using this flag themselves because it prevents tools from using this functionality.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS">
            <summary>
            <para>Ensures that atomic operations will be atomic on this heap's memory, according to components able to see the memory. Creating a heap with this flag will fail under either of these conditions. - The heap type is **D3D12_HEAP_TYPE_DEFAULT**, and the heap can be visible on multiple nodes, but the device does *not* support [**D3D12_CROSS_NODE_SHARING_TIER_3**](./ne-d3d12-d3d12_cross_node_sharing_tier.md). - The heap is CPU-visible, but the heap type is *not* **D3D12_HEAP_TYPE_CUSTOM**. Note that heaps with this flag might be a limited resource on some systems.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_heap_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_CREATE_NOT_RESIDENT">
            <summary>
            <para>The heap is created in a non-resident state and must be made resident using [ID3D12Device::MakeResident](./nf-d3d12-id3d12device-makeresident.md) or [ID3D12Device3::EnqueueMakeResident](./nf-d3d12-id3d12device3-enqueuemakeresident.md). By default, the final step of heap creation is to make the heap resident, so this flag skips this step and allows the application to decide when to do so.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_heap_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_CREATE_NOT_ZEROED">
            <summary>Allows the OS to not zero the heap created. By default, committed resources and heaps are almost always zeroed upon creation. This flag allows this to be elided in some scenarios. However, it doesn't guarantee it. For example, memory coming from other processes still needs to be zeroed for data protection and process isolation. This can lower the overhead of creating the heap.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_ALLOW_ALL_BUFFERS_AND_TEXTURES">
            <summary>The heap is allowed to store all types of buffers and/or textures. This is an alias; for more details, see "Aliases" in the Remarks section.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_ALLOW_ONLY_BUFFERS">
            <summary>The heap is only allowed to store buffers. This is an alias; for more details, see "Aliases" in the Remarks section.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_ALLOW_ONLY_NON_RT_DS_TEXTURES">
            <summary>The heap is only allowed to store non-RT, non-DS textures. This is an alias; for more details, see "Aliases" in the Remarks section.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS.D3D12_HEAP_FLAG_ALLOW_ONLY_RT_DS_TEXTURES">
            <summary>The heap is only allowed to store RT and/or DS textures. This is an alias; for more details, see "Aliases" in the Remarks section.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES">
            <summary>Describes heap properties.</summary>
            <remarks>
            <para>This structure is used by the following: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_heap_properties#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES.Type">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_heap_type">D3D12_HEAP_TYPE</a>-typed value that specifies the type of heap.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES.CPUPageProperty">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_cpu_page_property">D3D12_CPU_PAGE_PROPERTY</a>-typed value that specifies the CPU-page properties for the heap.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES.MemoryPoolPreference">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_memory_pool">D3D12_MEMORY_POOL</a>-typed value that specifies the memory pool for the heap.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES.CreationNodeMask">
            <summary>
            <para>For multi-adapter operation, this indicates the node where the resource should be created. Exactly one bit of this UINT must be set. See <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>. Passing zero is equivalent to passing one, in order to simplify the usage of single-GPU adapters.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_heap_properties#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES.VisibleNodeMask">
            <summary>
            <para>For multi-adapter operation, this indicates the set of nodes where the resource is visible. <i>VisibleNodeMask</i> must have the same bit set that is set in <i>CreationNodeMask</i>. <i>VisibleNodeMask</i> can *also* have additional bits set for cross-node resources, but doing so can potentially reduce performance for resource accesses, so you should do so only when needed. Passing zero is equivalent to passing one, in order to simplify the usage of single-GPU adapters.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_heap_properties#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_TYPE">
            <summary>Specifies the type of heap. When resident, heaps reside in a particular physical memory pool with certain CPU cache properties.</summary>
            <remarks>
            <para>This enum is used by the following API items:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_heap_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_TYPE.D3D12_HEAP_TYPE_DEFAULT">
            <summary>
            <para>Specifies the default heap. This heap type experiences the most bandwidth for the GPU, but cannot provide CPU access. The GPU can read and write to the memory from this pool, and resource transition barriers may be changed. The majority of heaps and resources are expected to be located here, and are typically populated through resources in upload heaps.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_heap_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_TYPE.D3D12_HEAP_TYPE_UPLOAD">
            <summary>
            <para>Specifies a heap used for uploading. This heap type has CPU access optimized for uploading to the GPU, but does not experience the maximum amount of bandwidth for the GPU. This heap type is best for CPU-write-once, GPU-read-once data; but GPU-read-once is stricter than necessary. GPU-read-once-or-from-cache is an acceptable use-case for the data; but such usages are hard to judge due to differing GPU cache designs and sizes. If in doubt, stick to the GPU-read-once definition or profile the difference on many GPUs between copying the data to a _DEFAULT heap vs. reading the data from an _UPLOAD heap.</para>
            <para>Resources in this heap must be created with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE</a>_GENERIC_READ and cannot be changed away from this. The CPU address for such heaps is commonly not efficient for CPU reads.</para>
            <para>The following are typical usages for _UPLOAD heaps:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_heap_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_TYPE.D3D12_HEAP_TYPE_READBACK">
            <summary>
            <para>Specifies a heap used for reading back. This heap type has CPU access optimized for reading data back from the GPU, but does not experience the maximum amount of bandwidth for the GPU. This heap type is best for GPU-write-once, CPU-readable data. The CPU cache behavior is write-back, which is conducive for multiple sub-cache-line CPU reads.</para>
            <para>Resources in this heap must be created with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE</a>_COPY_DEST, and cannot be changed away from this.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_heap_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_TYPE.D3D12_HEAP_TYPE_CUSTOM">
            <summary>
            <para>Specifies a custom heap. The application may specify the memory pool and CPU cache properties directly, which can be useful for UMA optimizations, multi-engine, multi-adapter, or other special cases. To do so, the application is expected to understand the adapter architecture to make the right choice. For more details, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_feature">D3D12_FEATURE</a>_ARCHITECTURE, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_feature_data_architecture">D3D12_FEATURE_DATA_ARCHITECTURE</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-getcustomheapproperties">GetCustomHeapProperties</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_heap_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_STRIP_CUT_VALUE">
            <summary>When using triangle strip primitive topology, vertex positions are interpreted as vertices of a continuous triangle “strip”.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_index_buffer_strip_cut_value#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_STRIP_CUT_VALUE.D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_DISABLED">
            <summary>Indicates that there is no cut value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_STRIP_CUT_VALUE.D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFF">
            <summary>Indicates that 0xFFFF should be used as the cut value.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_STRIP_CUT_VALUE.D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFFFFFF">
            <summary>Indicates that 0xFFFFFFFF should be used as the cut value.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW">
            <summary>Describes the index buffer to view.</summary>
            <remarks>
            <para>This structure is passed into <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-iasetindexbuffer">ID3D12GraphicsCommandList::IASetIndexBuffer</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_index_buffer_view#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW.BufferLocation">
            <summary>
            <para>The GPU virtual address of the index buffer. D3D12_GPU_VIRTUAL_ADDRESS is a typedef'd synonym of UINT64.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_index_buffer_view#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW.SizeInBytes">
            <summary>The size in bytes of the index buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW.Format">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value for the index-buffer format.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_DESC">
            <summary>Describes an indirect argument (an indirect parameter), for use with a command signature.</summary>
            <remarks>
            <para>Use this structure with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_command_signature_desc">D3D12_COMMAND_SIGNATURE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_indirect_argument_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_DESC.Type">
            <summary>A single <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_indirect_argument_type">D3D12_INDIRECT_ARGUMENT_TYPE</a> enumeration constant.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_TYPE">
            <summary>Specifies the type of the indirect parameter.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_indirect_argument_desc">D3D12_INDIRECT_ARGUMENT_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_indirect_argument_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_TYPE.D3D12_INDIRECT_ARGUMENT_TYPE_DRAW">
            <summary>Indicates the type is a Draw call.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_TYPE.D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED">
            <summary>Indicates the type is a DrawIndexed call.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_TYPE.D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH">
            <summary>Indicates the type is a Dispatch call.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_TYPE.D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW">
            <summary>Indicates the type is a vertex buffer view.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_TYPE.D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW">
            <summary>Indicates the type is an index buffer view.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_TYPE.D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT">
            <summary>Indicates the type is a constant.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_TYPE.D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW">
            <summary>Indicates the type is a constant buffer view (CBV).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_TYPE.D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW">
            <summary>Indicates the type is a shader resource view (SRV).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INDIRECT_ARGUMENT_TYPE.D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW">
            <summary>Indicates the type is an unordered access view (UAV).</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_CLASSIFICATION">
            <summary>Identifies the type of data contained in an input slot.</summary>
            <remarks>
            <para>Specify one of these values in the member of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_input_element_desc">D3D12_INPUT_ELEMENT_DESC</a> structure to specify the type of data for the input element of a pipeline state object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_input_classification#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_CLASSIFICATION.D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA">
            <summary>Input data is per-vertex data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_CLASSIFICATION.D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA">
            <summary>Input data is per-instance data.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_ELEMENT_DESC">
            <summary>Describes a single element for the input-assembler stage of the graphics pipeline.</summary>
            <remarks>
            <para>This structure is a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_input_layout_desc">D3D12_INPUT_LAYOUT_DESC</a> structure. A pipeline state object contains a input-layout structure that defines one element being read from an input slot.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_input_element_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_ELEMENT_DESC.SemanticName">
            <summary>The HLSL semantic associated with this element in a shader input-signature.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_ELEMENT_DESC.SemanticIndex">
            <summary>
            <para>The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name <b>matrix</b>, however each of the four component would have different semantic indices (0, 1, 2, and 3).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_ELEMENT_DESC.Format">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value that specifies the format of the element data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_ELEMENT_DESC.InputSlot">
            <summary>An integer value that identifies the input-assembler. For more info, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-input-assembler-stage-getting-started">Input Slots</a>. Valid values are between 0 and 15.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_ELEMENT_DESC.AlignedByteOffset">
            <summary>
            <para>Optional. Offset, in bytes, to this element from the start of the vertex. Use D3D12_APPEND_ALIGNED_ELEMENT (0xffffffff) for convenience to define the current element directly after the previous one, including any packing if necessary.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_ELEMENT_DESC.InputSlotClass">
            <summary>A value that identifies the input data class for a single input slot.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_ELEMENT_DESC.InstanceDataStepRate">
            <summary>
            <para>The number of instances to draw using the same per-instance data before advancing in the buffer by one element. This value must be 0 for an element that contains per-vertex data (the slot class is set to the D3D12_INPUT_PER_VERTEX_DATA member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_input_classification">D3D12_INPUT_CLASSIFICATION</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_input_element_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_LAYOUT_DESC">
            <summary>Describes the input-buffer data for the input-assembler stage.</summary>
            <remarks>
            <para>This structure is a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_input_layout_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_LAYOUT_DESC.pInputElementDescs">
            <summary>An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_input_element_desc">D3D12_INPUT_ELEMENT_DESC</a> structures that describe the data types of the input-assembler stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_INPUT_LAYOUT_DESC.NumElements">
            <summary>The number of input-data types in the array of input elements that the <b>pInputElementDescs</b> member points to.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_LIFETIME_STATE">
            <summary>Defines constants that specify the lifetime state of a lifetime-tracked object.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_lifetime_state#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LIFETIME_STATE.D3D12_LIFETIME_STATE_IN_USE">
            <summary>Specifies that the lifetime-tracked object is in use.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LIFETIME_STATE.D3D12_LIFETIME_STATE_NOT_IN_USE">
            <summary>Specifies that the lifetime-tracked object is not in use.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP">
            <summary>Specifies logical operations to configure for a render target.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_blend_desc">D3D12_RENDER_TARGET_BLEND_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_logic_op#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_CLEAR">
            <summary>Clears the render target (<c>0</c>).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_SET">
            <summary>Sets the render target ( <c>1</c>).</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_COPY" -->
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_COPY_INVERTED">
            <summary>Performs an inverted-copy of the render target (<c>~s</c>).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_NOOP">
            <summary>No operation is performed on the render target (<c>d</c> destination in the Render Target View).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_INVERT">
            <summary>Inverts the render target (<c>~d</c>).</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_AND" -->
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_NAND" -->
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_OR">
            <summary>Performs a logical OR operation on the render target (<c>s | d</c>).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_NOR">
            <summary>Performs a logical NOR operation on the render target (<c>~(s | d)</c>).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_XOR">
            <summary>Performs a logical XOR operation on the render target (<c>s ^ d</c>).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_EQUIV">
            <summary>Performs a logical equal operation on the render target (<c>~(s ^ d)</c>).</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_AND_REVERSE" -->
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_AND_INVERTED" -->
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_OR_REVERSE">
            <summary>Performs a logical OR and reverse operation on the render target (<c>s | ~d</c>).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_LOGIC_OP.D3D12_LOGIC_OP_OR_INVERTED">
            <summary>Performs a logical OR and invert operation on the render target (<c>~s | d</c>).</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION">
            <summary>Defines constants that specify what should be done with the results of earlier workload instrumentation.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_measurements_action#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION.D3D12_MEASUREMENTS_ACTION_KEEP_ALL">
            <summary>The default setting. Specifies that all results should be kept.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION.D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS">
            <summary>Specifies that the driver has seen all the data that it's ever going to, so it should stop waiting for more and go ahead compiling optimized shaders.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION.D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS_HIGH_PRIORITY">
            <summary>Like <b>D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS</b>, but also specifies that your application doesn't care about glitches, so the runtime should ignore the usual idle priority rules and go ahead using as many threads as possible to get shader recompiles done fast. Available only in <b>Developer mode</b>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION.D3D12_MEASUREMENTS_ACTION_DISCARD_PREVIOUS">
            <summary>Specifies that the optimization state should be reset; hinting that whatever has previously been measured no longer applies.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_MEMORY_POOL">
            <summary>Specifies the memory pool for the heap.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_heap_properties">D3D12_HEAP_PROPERTIES</a> structure.</para>
            <para>When the adapter is UMA, D3D12_MEMORY_POOL_L0 and DXGI_MEMORY_SEGMENT_GROUP_LOCAL refer to the same memory. When the adapter is not UMA: D3D12_MEMORY_POOL_L0 and DXGI_MEMORY_SEGMENT_GROUP_NON_LOCAL refer to the same memory. D3D12_MEMORY_POOL_L1 and DXGI_MEMORY_SEGMENT_GROUP_LOCAL refer to the same memory.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_memory_pool#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MEMORY_POOL.D3D12_MEMORY_POOL_UNKNOWN">
            <summary>The memory pool is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MEMORY_POOL.D3D12_MEMORY_POOL_L0">
            <summary>
            <para>The memory pool is L0. L0 is the physical system memory pool. When the adapter is discrete/NUMA, this pool has greater bandwidth for the CPU and less bandwidth for the GPU. When the adapter is UMA, this pool is the only one which is valid.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_memory_pool#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MEMORY_POOL.D3D12_MEMORY_POOL_L1">
            <summary>
            <para>The memory pool is L1. L1 is typically known as the physical video memory pool. L1 is only available when the adapter is discrete/NUMA, and has greater bandwidth for the GPU and cannot even be accessed by the CPU. When the adapter is UMA, this pool is not available.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_memory_pool#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC">
            <summary>Describes a meta command.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_meta_command_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC.Id">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/guiddef/ns-guiddef-guid">GUID</a></b> A <a href="https://docs.microsoft.com/windows/win32/api/guiddef/ns-guiddef-guid">GUID</a> uniquely identifying the meta command.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_meta_command_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC.Name">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCWSTR</a></b> The meta command name.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_meta_command_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC.InitializationDirtyState">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_graphics_states">D3D12_GRAPHICS_STATES</a></b> Declares the command list states that are modified by the call to initialize the meta command. If all state bits are set, then that's equivalent to calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-clearstate">ID3D12GraphicsCommandList::ClearState</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_meta_command_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC.ExecutionDirtyState">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_graphics_states">D3D12_GRAPHICS_STATES</a></b> Declares the command list states that are modified by the call to execute the meta command. If all state bits are set, then that's equivalent to calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-clearstate">ID3D12GraphicsCommandList::ClearState</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_meta_command_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC">
            <summary>Describes a parameter to a meta command.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_meta_command_parameter_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC.Name">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">LPCWSTR</a></b> The parameter name.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_meta_command_parameter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC.Type">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_meta_command_parameter_type">D3D12_META_COMMAND_PARAMETER_TYPE</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_meta_command_parameter_type">D3D12_META_COMMAND_PARAMETER_TYPE</a> specifying the parameter type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_meta_command_parameter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC.Flags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_meta_command_parameter_flags">D3D12_META_COMMAND_PARAMETER_FLAGS</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_meta_command_parameter_flags">D3D12_META_COMMAND_PARAMETER_FLAGS</a> specifying the parameter flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_meta_command_parameter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC.RequiredResourceState">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATES</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATES</a> specifying the expected state of a resource parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_meta_command_parameter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC.StructureOffset">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The 4-byte aligned offset for this parameter, within the structure containing the parameter values, which you pass when creating/initializing/executing the meta command, as appropriate.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_meta_command_parameter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_FLAGS">
            <summary>Defines constants that specify the flags for a parameter to a meta command. Values can be bitwise OR'd together.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_meta_command_parameter_flags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_FLAGS.D3D12_META_COMMAND_PARAMETER_FLAG_INPUT">
            <summary>Specifies that the parameter is an input resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_FLAGS.D3D12_META_COMMAND_PARAMETER_FLAG_OUTPUT">
            <summary>Specifies that the parameter is an output resource.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE">
            <summary>Defines constants that specify the stage of a parameter to a meta command.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_meta_command_parameter_stage">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE.D3D12_META_COMMAND_PARAMETER_STAGE_CREATION">
            <summary>Specifies that the parameter is used at the meta command creation stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE.D3D12_META_COMMAND_PARAMETER_STAGE_INITIALIZATION">
            <summary>Specifies that the parameter is used at the meta command initialization stage.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE.D3D12_META_COMMAND_PARAMETER_STAGE_EXECUTION">
            <summary>Specifies that the parameter is used at the meta command execution stage.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_TYPE">
            <summary>Defines constants that specify the data type of a parameter to a meta command.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_meta_command_parameter_type">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_TYPE.D3D12_META_COMMAND_PARAMETER_TYPE_FLOAT">
            <summary>Specifies that the parameter is of type <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_TYPE.D3D12_META_COMMAND_PARAMETER_TYPE_UINT64">
            <summary>Specifies that the parameter is of type <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT64</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_TYPE.D3D12_META_COMMAND_PARAMETER_TYPE_GPU_VIRTUAL_ADDRESS">
            <summary>Specifies that the parameter is a GPU virtual address.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_TYPE.D3D12_META_COMMAND_PARAMETER_TYPE_CPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV">
            <summary>Specifies that the parameter is a CPU descriptor handle to a heap containing either constant buffer views, shader resource views, or unordered access views.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_TYPE.D3D12_META_COMMAND_PARAMETER_TYPE_GPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV">
            <summary>Specifies that the parameter is a GPU descriptor handle to a heap containing either constant buffer views, shader resource views, or unordered access views.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_MIP_REGION">
            <summary>Describes the dimensions of a mip region.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_mip_region#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MIP_REGION.Width">
            <summary>The width of the mip region.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MIP_REGION.Height">
            <summary>The height of the mip region.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MIP_REGION.Depth">
            <summary>The depth of the mip region.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS">
            <summary>Specifies multiple wait flags for multiple fences.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device1-seteventonmultiplefencecompletion">SetEventOnMultipleFenceCompletion</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_multiple_fence_wait_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS.D3D12_MULTIPLE_FENCE_WAIT_FLAG_NONE">
            <summary>No flags are being passed. This means to use the default behavior, which is to wait for all fences before signaling the event.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS.D3D12_MULTIPLE_FENCE_WAIT_FLAG_ANY">
            <summary>Modifies behavior to indicate that the event should be signaled after any one of the fence values has been reached by its corresponding fence.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS.D3D12_MULTIPLE_FENCE_WAIT_FLAG_ALL">
            <summary>An alias for **D3D12_MULTIPLE_FENCE_WAIT_FLAG_NONE**, meaning to use the default behavior and wait for all fences.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_PACKED_MIP_INFO">
            <summary>Describes the tile structure of a tiled resource with mipmaps.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-getresourcetiling">GetResourceTiling</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_packed_mip_info#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PACKED_MIP_INFO.NumStandardMips">
            <summary>The number of standard mipmaps in the tiled resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PACKED_MIP_INFO.NumPackedMips">
            <summary>
            <para>The number of packed mipmaps in the tiled resource.</para>
            <para>This number starts from the least detailed mipmap (either sharing tiles or using non standard tile layout). This number is 0 if no such packing is in the resource. For array surfaces, this value is the number of mipmaps that are packed for a given array slice where each array slice repeats the same packing.</para>
            <para>On Tier_2 tiled resources hardware, mipmaps that fill at least one standard shaped tile in all dimensions are not allowed to be included in the set of packed mipmaps. On Tier_1 hardware, mipmaps that are an integer multiple of one standard shaped tile in all dimensions are not allowed to be included in the set of packed mipmaps. Mipmaps with at least one dimension less than the standard tile shape may or may not be packed. When a given mipmap needs to be packed, all coarser mipmaps for a given array slice are considered packed as well.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_packed_mip_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PACKED_MIP_INFO.NumTilesForPackedMips">
            <summary>
            <para>The number of tiles for the packed mipmaps in the tiled resource.</para>
            <para>If there is no packing, this value is meaningless and is set to 0. Otherwise, it is set to the number of tiles that are needed to represent the set of packed mipmaps. The pixel layout within the packed mipmaps is hardware specific. If apps define only partial mappings for the set of tiles in packed mipmaps, read and write behavior is vendor specific and undefined. For arrays, this value is only the count of packed mipmaps within the subresources for each array slice.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_packed_mip_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PACKED_MIP_INFO.StartTileIndexInOverallResource">
            <summary>
            <para>The offset of the first packed tile for the resource in the overall range of tiles. If <b>NumPackedMips</b> is 0, this value is meaningless and is 0. Otherwise, it is the offset of the first packed tile for the resource in the overall range of tiles for the resource. A value of 0 for <b>StartTileIndexInOverallResource</b> means the entire resource is packed. For array surfaces, this is the offset for the tiles that contain the packed mipmaps for the first array slice. Packed mipmaps for each array slice in arrayed surfaces are at this offset past the beginning of the tiles for each array slice.</para>
            <para><div class="alert"><b>Note</b>  The number of overall tiles, packed or not, for a given array slice is simply the total number of tiles for the resource divided by the resource's array size, so it is easy to locate the range of tiles for any given array slice, out of which <b>StartTileIndexInOverallResource</b> identifies which of those are packed. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_packed_mip_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_FLAGS">
            <summary>Flags to control pipeline state.</summary>
            <remarks>
            <para>This enum is used by the <b>Flags</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a>and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_compute_pipeline_state_desc">D3D12_COMPUTE_PIPELINE_STATE_DESC</a>structures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_pipeline_state_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_FLAGS.D3D12_PIPELINE_STATE_FLAG_NONE">
            <summary>Indicates no flags.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_FLAGS.D3D12_PIPELINE_STATE_FLAG_TOOL_DEBUG">
            <summary>
            <para>Indicates that the pipeline state should be compiled with additional information to assist debugging. This can only be set on WARP devices.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_pipeline_state_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC">
            <summary>Describes a pipeline state stream.</summary>
            <remarks>
            <para>Use this structure with the **[ID3D12Device1::CreatePipelineState](/windows/win32/api/d3d12/nf-d3d12-id3d12device2-createpipelinestate)** method to create pipeline state objects. The format of the provided stream should consist of an alternating set of **[D3D12_PIPELINE_STATE_SUBOBJECT_TYPE](/windows/win32/api/d3d12/ne-d3d12-d3d12_pipeline_state_subobject_type)**, and the correspending subobject types for them (for example, **D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER** pairs with **[D3D12_RASTERIZER_DESC](/windows/win32/api/d3d12/ns-d3d12-d3d12_rasterizer_desc)**. In terms of alignment, the D3D12 runtime expects subobjects to be individual struct pairs of enum-struct, rather than a continous set of fields. It also expects them to be aligned to the natural word alignment of the system. This can be achieved either using `alignas(void*)`, or making a `union` of the enum + subobject and a `void*`. > [!IMPORTANT] > It isn't sufficient to simply union the **D3D12_PIPELINE_STATE_SUBOBJECT_TYPE** with a **void\***, because this will result in certain subobjects being misaligned. > For example, **D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY** is followed by a **[D3D12_PRIMITIVE_TOPOLOGY_TYPE](/windows/win32/api/d3d12/ne-d3d12-d3d12_primitive_topology_type)** enum. If the subobject type is unioned with a **void\***, then there will be additional padding between these 2 members, resulting in corruption of the stream. > Because of this, you should union the entire subobject struct with a **void\***, when `alignas` is not available An example of a suitable subobject for use with **[D3D12_RASTERIZER_DESC](/windows/win32/api/d3d12/ns-d3d12-d3d12_rasterizer_desc)** is shown here: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_pipeline_state_stream_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC.SizeInBytes">
            <summary>
            <para><a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-structs-and-classes?view=vs-2015">SAL</a>: <c>_In_</c> Specifies the size of the opaque data structure pointed to by the pPipelineStateSubobjectStream member, in bytes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_pipeline_state_stream_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC.pPipelineStateSubobjectStream">
            <summary>
            <para><a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-structs-and-classes?view=vs-2015">SAL</a>: <c>_In_reads_(_Inexpressible_("Dependentonsizeofsubobjects"))</c> Specifies the address of a data structure that describes as a bytestream an arbitrary pipeline state subobject.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_pipeline_state_stream_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT">
            <summary>Describes the footprint of a placed subresource, including the offset and the D3D12_SUBRESOURCE_FOOTPRINT.</summary>
            <remarks>
            <para>This structure is used in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_texture_copy_location">D3D12_TEXTURE_COPY_LOCATION</a> structure, and by <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-getcopyablefootprints">ID3D12Device::GetCopyableFootprints</a>.</para>
            <para>All the data referenced by the footprint structure must fit within the bounds of the parent resource. If you use <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-getcopyablefootprints">GetCopyableFootprints</a> to fill out the structure, the <i>pTotalBytes</i> output field indicates the required size of the resource. This structure is also used a number of helper functions (refer to <a href="https://docs.microsoft.com/windows/desktop/direct3d12/helper-structures-and-functions-for-d3d12">Helper Structures and Functions for D3D12</a>). When copying textures, use this structure along with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_texture_copy_location">D3D12_TEXTURE_COPY_LOCATION</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_placed_subresource_footprint#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT.Offset">
            <summary>
            <para>The offset of the subresource within the parent resource, in bytes. The offset between the start of the parent resource and this subresource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_placed_subresource_footprint#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT.Footprint">
            <summary>
            <para>The format, width, height, depth, and row-pitch of the subresource, as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_subresource_footprint">D3D12_SUBRESOURCE_FOOTPRINT</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_placed_subresource_footprint#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_PREDICATION_OP">
            <summary>Specifies the predication operation to apply.</summary>
            <remarks>
            <para>This enum is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-setpredication">SetPredication</a>.</para>
            <para>Predication is decoupled from queries. Predication can be set based on the value of 64-bits within a buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_predication_op#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PREDICATION_OP.D3D12_PREDICATION_OP_EQUAL_ZERO">
            <summary>Enables predication if all 64-bits are zero.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PREDICATION_OP.D3D12_PREDICATION_OP_NOT_EQUAL_ZERO">
            <summary>Enables predication if at least one of the 64-bits are not zero.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_PRIMITIVE_TOPOLOGY_TYPE">
            <summary>Specifies how the pipeline interprets geometry or hull shader input primitives.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_primitive_topology_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PRIMITIVE_TOPOLOGY_TYPE.D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED">
            <summary>The shader has not been initialized with an input primitive type.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PRIMITIVE_TOPOLOGY_TYPE.D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT">
            <summary>Interpret the input primitive as a point.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PRIMITIVE_TOPOLOGY_TYPE.D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE">
            <summary>Interpret the input primitive as a line.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PRIMITIVE_TOPOLOGY_TYPE.D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE">
            <summary>Interpret the input primitive as a triangle.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PRIMITIVE_TOPOLOGY_TYPE.D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH">
            <summary>Interpret the input primitive as a control point patch.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC">
            <summary>Describes flags for a protected resource session, per adapter.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_protected_resource_session_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC.NodeMask">
            <summary>
            <para>Type: **[UINT](/windows/win32/WinProg/windows-data-types)** The node mask. For single GPU operation, set this to zero. If there are multiple GPU nodes, then set a bit to identify the node (the device's physical adapter) to which the protected session applies. Each bit in the mask corresponds to a single node. Only 1 bit may be set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_protected_resource_session_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC.Flags">
            <summary>
            <para>Type: **[D3D12_PROTECTED_RESOURCE_SESSION_FLAGS](./ne-d3d12-d3d12_protected_resource_session_flags.md)** Specifies the supported crypto sessions options.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_protected_resource_session_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC1">
            <summary>Describes flags and protection type for a protected resource session, per adapter.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_protected_resource_session_desc1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC1.NodeMask">
            <summary>
            <para>Type: **[UINT](/windows/win32/WinProg/windows-data-types)** The node mask. For single GPU operation, set this to zero. If there are multiple GPU nodes, then set a bit to identify the node (the device's physical adapter) to which the protected session applies. Each bit in the mask corresponds to a single node. Only 1 bit may be set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_protected_resource_session_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC1.Flags">
            <summary>
            <para>Type: **[D3D12_PROTECTED_RESOURCE_SESSION_FLAGS](./ne-d3d12-d3d12_protected_resource_session_flags.md)** Specifies the supported crypto sessions options.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_protected_resource_session_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC1.ProtectionType">
            <summary>
            <para>Type: **[GUID](../guiddef/ns-guiddef-guid.md)** The GUID that represents the protection type. Microsoft defines **D3D12_PROTECTED_RESOURCES_SESSION_HARDWARE_PROTECTED**. Using the **D3D12_PROTECTED_RESOURCES_SESSION_HARDWARE_PROTECTED** GUID is equivalent to calling [**ID3D12Device4::CreateProtectedResourceSession**](./nf-d3d12-id3d12device4-createprotectedresourcesession.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_protected_resource_session_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_FLAGS">
            <summary>Defines constants that specify protected resource session flags.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_protected_resource_session_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_FLAGS.D3D12_PROTECTED_RESOURCE_SESSION_FLAG_NONE">
            <summary>Specifies no flag.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_SESSION_STATUS">
            <summary>Defines constants that specify protected session status.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_protected_session_status#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_SESSION_STATUS.D3D12_PROTECTED_SESSION_STATUS_OK">
            <summary>Indicates that the protected session is in a valid state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_SESSION_STATUS.D3D12_PROTECTED_SESSION_STATUS_INVALID">
            <summary>Indicates that the protected session is not in a valid state.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC">
            <summary>Describes the purpose of a query heap. A query heap contains an array of individual queries.</summary>
            <remarks>
            <para>Use this structure with <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12device-createqueryheap">CreateQueryHeap</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_query_heap_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC.Type">
            <summary>Specifies one member of <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_query_heap_type">D3D12_QUERY_HEAP_TYPE</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC.Count">
            <summary>Specifies the number of queries the heap should contain.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC.NodeMask">
            <summary>
            <para>For single GPU operation, set this to zero. If there are multiple GPU nodes, set a bit to identify the node (the  device's physical adapter) to which the query heap applies. Each bit in the mask corresponds to a single node. Only 1 bit must be set. Refer to <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_query_heap_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_TYPE">
            <summary>Specifies the type of query heap to create.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_query_heap_desc">D3D12_QUERY_HEAP_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_query_heap_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_TYPE.D3D12_QUERY_HEAP_TYPE_OCCLUSION">
            <summary>This returns a binary 0/1 result:  0 indicates that no samples passed depth and stencil testing, 1 indicates that at least one sample passed depth and stencil testing.  This enables occlusion queries to not interfere with any GPU performance optimization associated with depth/stencil testing.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_TYPE.D3D12_QUERY_HEAP_TYPE_TIMESTAMP">
            <summary>Indicates that the heap is for high-performance timing data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_TYPE.D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS">
            <summary>Indicates the heap is to contain pipeline data. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_query_data_pipeline_statistics">D3D12_QUERY_DATA_PIPELINE_STATISTICS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_TYPE.D3D12_QUERY_HEAP_TYPE_SO_STATISTICS">
            <summary>Indicates the heap is to contain stream output data. Refer to <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_query_data_so_statistics">D3D12_QUERY_DATA_SO_STATISTICS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_TYPE.D3D12_QUERY_HEAP_TYPE_VIDEO_DECODE_STATISTICS">
            <summary>
            <para>Indicates the heap is to contain video decode statistics data. Refer to [D3D12_QUERY_DATA_VIDEO_DECODE_STATISTICS](../d3d12video/ns-d3d12video-d3d12_query_data_video_decode_statistics.md). Video decode statistics can only be queried from video decode command lists (<a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_command_list_type">D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE</a>). See <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_query_type">D3D12_QUERY_TYPE_DECODE_STATISTICS</a> for more details.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_query_heap_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_TYPE.D3D12_QUERY_HEAP_TYPE_COPY_QUEUE_TIMESTAMP">
            <summary>
            <para>Indicates the heap is to contain timestamp queries emitted exclusively by copy command lists. Copy queue timestamps can only be queried from a copy command list, and a copy command list can not emit to a regular timestamp query Heap. Support for this query heap type is not universal. You must use <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12device-checkfeaturesupport">CheckFeatureSupport</a> with [D3D12_FEATURE_D3D12_OPTIONS3](./ne-d3d12-d3d12_feature.md) to determine whether the adapter supports copy queue timestamp queries.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_query_heap_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE">
            <summary>Specifies the type of query.</summary>
            <remarks>
            <para>This enum is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-beginquery">BeginQuery</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-endquery">EndQuery</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-resolvequerydata">ResolveQueryData.</a></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_query_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_OCCLUSION">
            <summary>Indicates the query is for depth/stencil occlusion counts.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_BINARY_OCCLUSION">
            <summary>
            <para>Indicates the query is for a binary depth/stencil occlusion statistics. This new query type acts like D3D12_QUERY_TYPE_OCCLUSION except that it returns simply a binary 0/1 result:  0 indicates that no samples passed depth and stencil testing, 1 indicates that at least one sample passed depth and stencil testing.  This enables occlusion queries to not interfere with any GPU performance optimization associated with depth/stencil testing.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_query_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_TIMESTAMP">
            <summary>Indicates the query is for high definition GPU and CPU timestamps.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_PIPELINE_STATISTICS">
            <summary>Indicates the query type is for graphics pipeline statistics, refer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_query_data_pipeline_statistics">D3D12_QUERY_DATA_PIPELINE_STATISTICS</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0">
            <summary>Stream 0 output statistics. In Direct3D 12 there is no single stream output (SO) overflow query for all the output streams. Apps need to issue multiple single-stream queries, and then correlate the results. Stream output is the ability of the GPU to write vertices to a buffer. The stream output counters monitor progress.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1">
            <summary>Stream 1 output statistics.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2">
            <summary>Stream 2 output statistics.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3">
            <summary>Stream 3 output statistics.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS">
            <summary>
            <para>Video decode statistics. Refer to [D3D12_QUERY_DATA_VIDEO_DECODE_STATISTICS](../d3d12video/ns-d3d12video-d3d12_query_data_video_decode_statistics.md). Use this query type to determine if a video was successfully decoded. If decoding fails due to insufficient BitRate or FrameRate parameters set during creation of the decode heap, then the status field of the query is set to [D3D12_VIDEO_DECODE_STATUS_RATE_EXCEEDED](../d3d12video/ne-d3d12video-d3d12_video_decode_status.md) and the query also contains new BitRate and FrameRate values that would succeed. This query type can only be performed on video decode command lists [(D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE)](/windows/desktop/api/d3d12/ne-d3d12-d3d12_command_list_type). This query type does not use [ID3D12VideoDecodeCommandList::BeginQuery](../d3d12video/nf-d3d12video-id3d12videodecodecommandlist-beginquery.md), only [ID3D12VideoDecodeCommandList::EndQuery](../d3d12video/nf-d3d12video-id3d12videodecodecommandlist-endquery.md). Statistics are recorded only for the most recent [ID3D12VideoDecodeCommandList::DecodeFrame](../d3d12video/nf-d3d12video-id3d12videodecodecommandlist-decodeframe.md) call in the same command list. Decode status structures are defined by the codec specification.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_query_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RANGE">
            <summary>Describes a memory range.</summary>
            <remarks>
            <para><b>End</b> is one-past-the-end. When <b>Begin</b> equals <b>End</b>, the range is empty. The size of the range is (<b>End</b> - <b>Begin</b>).</para>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12resource-map">Map</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12resource-unmap">Unmap</a> methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_range#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RANGE.Begin">
            <summary>The offset, in bytes, denoting the beginning of a memory range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RANGE.End">
            <summary>
            <para>The offset, in bytes, denoting the end of a memory range. <b>End</b> is one-past-the-end.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_range#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RANGE_UINT64">
            <summary>Describes a memory range in a 64-bit address space.</summary>
            <remarks>
            <para><b>End</b> is one-past-the-end. When <b>Begin</b> equals <b>End</b>, the range is empty. The size of the range is (<b>End</b> - <b>Begin</b>).</para>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_subresource_range_uint64">D3D12_SUBRESOURCE_RANGE_UINT64</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_range_uint64#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RANGE_UINT64.Begin">
            <summary>The offset, in bytes, denoting the beginning of a memory range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RANGE_UINT64.End">
            <summary>
            <para>The offset, in bytes, denoting the end of a memory range. <b>End</b> is one-past-the-end.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_range_uint64#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC">
            <summary>Describes rasterizer state.</summary>
            <remarks>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a> contains a rasterizer-state structure.</para>
            <para>Rasterizer state defines the behavior of the rasterizer stage.</para>
            <para>If you do not specify some rasterizer state,  the Direct3D runtime uses the following default values for rasterizer state.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_rasterizer_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC.FillMode">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_fill_mode">D3D12_FILL_MODE</a>-typed value that specifies the fill mode to use when rendering.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC.CullMode">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_cull_mode">D3D12_CULL_MODE</a>-typed value that specifies that triangles facing the specified direction are not drawn.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC.FrontCounterClockwise">
            <summary>Determines if a triangle is front- or back-facing. If this member is <b>TRUE</b>, a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If this parameter is <b>FALSE</b>, the opposite is true.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC.DepthBias">
            <summary>Depth value added to a given pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC.DepthBiasClamp">
            <summary>Maximum depth bias of a pixel. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC.SlopeScaledDepthBias">
            <summary>Scalar on a given pixel's slope. For info about depth bias, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC.DepthClipEnable">
            <summary>
            <para>Specifies whether to enable clipping based on distance.</para>
            <para>The hardware always performs x and y clipping of rasterized coordinates. When <b>DepthClipEnable</b> is set to the default–<b>TRUE</b>, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).</para>
            <para><pre class="syntax" xml:space="preserve"><code> 0 &lt; w -w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden) -w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden) 0 &lt;= z &lt;= w </code></pre> When you set <b>DepthClipEnable</b> to <b>FALSE</b>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_rasterizer_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC.MultisampleEnable">
            <summary>Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm on multisample antialiasing (MSAA) render targets. Set to <b>TRUE</b> to use the quadrilateral line anti-aliasing algorithm and to <b>FALSE</b> to use the alpha line anti-aliasing algorithm. For more info about this member, see Remarks.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC.AntialiasedLineEnable">
            <summary>Specifies whether to enable line antialiasing; only applies if doing line drawing and <b>MultisampleEnable</b> is <b>FALSE</b>. For more info about this member, see Remarks.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC.ForcedSampleCount" -->
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RASTERIZER_DESC.ConservativeRaster">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_conservative_rasterization_mode">D3D12_CONSERVATIVE_RASTERIZATION_MODE</a>-typed value that identifies whether conservative rasterization is on or off.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS">
            <summary>Specifies flags for the build of a raytracing acceleration structure. Use a value from this enumeration with the D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS structure that provides input to the acceleration structure build operation.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_build_flags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_NONE">
            <summary>No options specified for the acceleration structure build.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE">
            <summary>
            <para>Build the acceleration structure such that it supports future updates (via the flag <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE</b>) instead of the app having to entirely rebuild the structure.  This option may result in increased memory consumption, build times, and lower raytracing performance.  Future updates, however, should be faster than building the equivalent acceleration structure from scratch. This flag can only be set on an initial acceleration structure build, or on an update where the source acceleration structure specified <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE</b>.  In other words, after an acceleration structure was been built without <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE</b>, no other acceleration structures can be created from it via updates.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_build_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION">
            <summary>
            <para>Enables the option to compact the acceleration structure by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist4-copyraytracingaccelerationstructure">CopyRaytracingAccelerationStructure</a> using compact mode, specified with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_copy_mode">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_COMPACT</a>. This option may result in increased memory consumption and build times.  After future compaction, however, the resulting acceleration structure should consume a smaller memory footprint than building the acceleration structure from scratch. This flag is compatible with all other flags.  If specified as part of an acceleration structure update, the source acceleration structure must have also been built with this flag.  In other words, after an acceleration structure was been built without <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION</b>, no other acceleration structures can be created from it via updates that specify <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION</b>.</para>
            <para>Specifying ALLOW_COMPACTION may increase pre-compaction acceleration structure size versus not specifying ALLOW_COMPACTION.</para>
            <para>If multiple incremental builds are performed before finally compacting, there may be redundant compaction related work performed.</para>
            <para>The size required for the compacted acceleration structure can be queried before compaction via <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist4-emitraytracingaccelerationstructurepostbuildinfo">EmitRaytracingAccelerationStructurePostbuildInfo</a>. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_raytracing_acceleration_structure_postbuild_info_compacted_size_desc">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC</a> for more information on properties of compacted acceleration structure size. <div class="alert"><b>Note</b>  When<b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE</b> is specified, there is certain information that needs to be retained in the acceleration structure, and compaction will only help so much. However, if the pipeline knows that the acceleration structure will no longer be updated, it can make the structure more compact.  Some apps may benefit from compacting twice - once after the initial build, and again after the acceleration structure has settled to a static state, if that occurs.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_build_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_TRACE">
            <summary>
            <para>Construct a high quality acceleration structure that maximizes raytracing performance at the expense of additional build time.  Typically, the implementation will take 2-3 times the build time than the default setting in order to get better tracing performance. This flag is recommended for static geometry in particular.  It is compatible with all other flags except for <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_build_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD">
            <summary>
            <para>Construct a lower quality acceleration structure, trading raytracing performance for build speed.  Typically, the implementation will take 1/2 to 1/3 the build time than default setting, with a sacrifice in tracing performance. This flag is compatible with all other flags except for <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_build_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_MINIMIZE_MEMORY">
            <summary>
            <para>Minimize the amount of scratch memory used during the acceleration structure build as well as the size of the result.  This option may result in increased build times and/or raytracing times. This is orthogonal to the <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION</b> flag and the explicit acceleration structure compaction that it enables.  Combining the flags can mean both the initial acceleration structure as well as the result of compacting it use less memory. The impact of using this flag for a build is reflected in the result of calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device5-getraytracingaccelerationstructureprebuildinfo">GetRaytracingAccelerationStructurePrebuildInfo</a> before doing the build to retrieve memory requirements for the build. This flag is compatible with all other flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_build_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE">
            <summary>
            <para>Perform an acceleration structure update, as opposed to building from scratch.  This is faster than a full build, but can negatively impact raytracing performance, especially if the positions of the underlying objects have changed significantly from the original build of the acceleration structure before updates. If the addresses of the source and destination acceleration structures are identical, the update is performed in-place.  Any other overlapping of address ranges of the source and destination is invalid.  For non-overlapping source and destinations, the source acceleration structure is unmodified.  The memory requirement for the output acceleration structure is the same as in the input acceleration structure The source acceleration structure must have been built with <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE</b>. This flag is compatible with all other flags.  The other flags selections, aside from <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE</b> and <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE</b>, must match the flags in the source acceleration structure. Acceleration structure updates can be performed in unlimited succession, as long as the source acceleration structure was created with <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE</b> and the flags for the update build continue to specify <b>D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_build_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE">
            <summary>Specifies the type of copy operation performed when calling CopyRaytracingAccelerationStructure.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_copy_mode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_CLONE">
            <summary>
            <para>Copy an acceleration structure while fixing any self-referential pointers that may be present so that the destination is a self-contained copy of the source.  Any external pointers to other acceleration structures remain unchanged from source to destination in the copy.  The size of the destination is identical to the size of the source. > [!IMPORTANT] > The source memory must be in state [**D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states). > The destination memory must be in state [**D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_copy_mode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_COMPACT">
            <summary>
            <para>Produces a functionally equivalent acceleration structure to source in the destination, similar to the clone mode, but also fits the destination into a potentially smaller, and certainly not larger, memory footprint.  The size required for the destination can be retrieved beforehand from <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist4-emitraytracingaccelerationstructurepostbuildinfo">EmitRaytracingAccelerationStructurePostbuildInfo</a>. This mode is only valid if the source acceleration structure was originally built with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_build_flags">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION</a>  flag, otherwise results are undefined. Compacting geometry requires the entire acceleration structure to be constructed, which is why you must first build and then compact the structure. > [!IMPORTANT] > The source memory must be in state [**D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states). > The destination memory must be in state [**D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_copy_mode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_VISUALIZATION_DECODE_FOR_TOOLS">
            <summary>
            <para>The destination is takes  the layout described in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_build_raytracing_acceleration_structure_tools_visualization_header">D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER</a>.  The size required for the destination can be retrieved beforehand from <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist4-emitraytracingaccelerationstructurepostbuildinfo">EmitRaytracingAccelerationStructurePostbuildInfo</a>. This mode is only intended for tools such as PIX, though nothing stops any app from using it.  The output is essentially the inverse of an acceleration structure build.  This overall structure with is sufficient for tools/PIX to be able to give the application some visual sense of the acceleration structure the driver made out of the app’s input.  Visualization can help reveal driver bugs in acceleration structures if what is shown grossly mismatches the data the application used to create the acceleration structure, beyond allowed tolerances. For top-level acceleration structures, the output includes a set of instance descriptions that are identical to the data used in the original build and in the same order.  For bottom-level acceleration structures, the output includes a set of geometry descriptions roughly matching the data used in the original build.  The output is only a rough match for the original in part because of the tolerances allowed in the specification for acceleration structures and in part due to the inherent complexity of reporting exactly the same structure as is conceptually encoded.  For example. axis-aligned bounding boxes (AABBs) returned for procedural primitives could be more conservative (larger) in volume and even different in number than what is actually in the acceleration structure representation.  Geometries, each with its own geometry description, appear in the same order as in the original acceleration, as shader table indexing calculations depend on this.</para>
            <para>> [!IMPORTANT] > The source memory must be in state [**D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states). > The destination memory must be in state [**D3D12_RESOURCE_STATE_UNORDERED_ACCESS**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states). This mode is only permitted when developer mode is enabled in the OS.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_copy_mode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_SERIALIZE">
            <summary>
            <para>Destination takes the layout and size described in the documentation for <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_raytracing_acceleration_structure_postbuild_info_serialization_desc">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC</a>, itself a structure generated with a call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist4-emitraytracingaccelerationstructurepostbuildinfo">EmitRaytracingAccelerationStructurePostbuildInfo</a>. This mode serializes an acceleration structure so that an app or tools can store it to a file for later reuse, typically on a different device instance, via deserialization. When serializing a top-level acceleration structure, the bottom-level acceleration structures it refers to do not have to still be present or intact in memory.  Likewise, bottom-level acceleration structures can be serialized independent of whether any top-level acceleration structures are pointing to them.  In other words, the order of serialization of acceleration structures doesn’t matter. > [!IMPORTANT] > The source memory must be in state [**D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states). > The destination memory must be in state [**D3D12_RESOURCE_STATE_UNORDERED_ACCESS**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_copy_mode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_DESERIALIZE">
            <summary>
            <para>The source must be a serialized acceleration structure, with any pointers, directly after the header, fixed to point to their new locations. For more information, see  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_raytracing_acceleration_structure_postbuild_info_serialization_desc">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC</a>. The destination gets an acceleration structure that is functionally equivalent to the acceleration structure that was originally serialized.  It does not matter what order top-level and bottom-level acceleration structures are deserialized, as long as by the time a top-level acceleration structure is used for raytracing or acceleration structure updates the bottom-level acceleration structures it references are present. Deserialization can only be performed on the same device and driver version on which the data was serialized. Otherwise, the results are undefined. This mode is only intended for tools such as PIX, though nothing stops any app from using it, but this mode is only permitted when developer mode is enabled in the OS.   This copy operation is not intended to be used for caching acceleration structures, because running a full acceleration structure build is likely to be faster than loading one from disk.</para>
            <para>> [!IMPORTANT] > The source memory must be in state [**D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states). > The destination memory must be in state [**D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE**](/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_copy_mode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC">
            <summary>Description of the post-build information to generate from an acceleration structure. Use this structure in calls to EmitRaytracingAccelerationStructurePostbuildInfo and BuildRaytracingAccelerationStructure.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_acceleration_structure_postbuild_info_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC.DestBuffer">
            <summary>
            <para>Storage for the post-build info result.  Size required and the layout of the contents written by the system depend on the value of the <i>InfoType</i> field. The memory pointed to must be in state <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_UNORDERED_ACCESS</a>.  The memory must be aligned to the natural alignment for the members of the particular output structure being generated (e.g. 8 bytes for a struct with the largest members being UINT64).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_acceleration_structure_postbuild_info_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC.InfoType">
            <summary>The type of post-build information to retrieve.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE">
            <summary>Specifies the type of acceleration structure post-build info that can be retrieved with calls to EmitRaytracingAccelerationStructurePostbuildInfo and BuildRaytracingAccelerationStructure.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_postbuild_info_type">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE">
            <summary>The post-build info is space requirements for an acceleration structure after compaction. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_raytracing_acceleration_structure_postbuild_info_compacted_size_desc">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION">
            <summary>The post-build info is space requirements for generating tools visualization for an acceleration structure. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_raytracing_acceleration_structure_postbuild_info_tools_visualization_desc">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION">
            <summary>The post-build info is space requirements for serializing an acceleration structure. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_raytracing_acceleration_structure_postbuild_info_serialization_desc">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE">
            <summary>The post-build info is size of the current acceleration structure. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_raytracing_acceleration_structure_postbuild_info_current_size_desc">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC</a>.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO">
            <summary>Represents prebuild information about a raytracing acceleration structure. Get an instance of this stucture by calling GetRaytracingAccelerationStructurePrebuildInfo.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_acceleration_structure_prebuild_info">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO.ResultDataMaxSizeInBytes">
            <summary>Size required to hold the result of an acceleration structure build based on the specified inputs.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO.ScratchDataSizeInBytes">
            <summary>Scratch storage on the GPU required during acceleration structure build based on the specified inputs.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO.UpdateScratchDataSizeInBytes">
            <summary></summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV">
            <summary>A shader resource view (SRV) structure for storing a raytracing acceleration structure.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_acceleration_structure_srv">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV.Location">
            <summary>The GPU virtual address of the SRV.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE">
            <summary>Specifies the type of a raytracing acceleration structure.</summary>
            <remarks>
            <para>Bottom-level acceleration structures each consist of a set of geometries that are building blocks for a scene. A top-level acceleration structure represents a set of instances of bottom-level acceleration structures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL">
            <summary>Top-level acceleration structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL">
            <summary>Bottom-level acceleration structure.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_AABBS_DESC">
            <summary>Describes a set of Axis-aligned bounding boxes that are used in the D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS structure to provide input data to a raytracing acceleration structure build operation.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_geometry_aabbs_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_AABBS_DESC.AABBCount">
            <summary>The number of AABBs pointed to in the contiguous array at <i>AABBs</i>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_AABBS_DESC.AABBs">
            <summary>the GPU memory location where an array of AABB descriptions is to be found, including the data stride between AABBs.  The address and stride must each be aligned to 8 bytes, defined as The address must be aligned to 16 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants"> D3D12_RAYTRACING_AABB_BYTE_ALIGNMENT</a>.  The stride can be 0.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_DESC">
            <summary>Describes a set of geometry that is used in the D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS structure to provide input data to a raytracing acceleration structure build operation.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_geometry_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_DESC.Type">
            <summary>The type of geometry.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_DESC.Flags">
            <summary>The geometry flags</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_FLAGS">
            <summary>Specifies flags for raytracing geometry in a D3D12_RAYTRACING_GEOMETRY_DESC structure.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_geometry_flags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_FLAGS.D3D12_RAYTRACING_GEOMETRY_FLAG_NONE">
            <summary>No options specified.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_FLAGS.D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE">
            <summary>When rays encounter this geometry, the geometry acts as if no any hit shader is present.  It is recommended that apps use this flag liberally, as it can enable important ray-processing optimizations.  Note that this behavior can be overridden on a per-instance basis with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_raytracing_instance_flags">D3D12_RAYTRACING_INSTANCE_FLAGS</a> and on a per-ray basis using ray flags in <b>TraceRay</b>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_FLAGS.D3D12_RAYTRACING_GEOMETRY_FLAG_NO_DUPLICATE_ANYHIT_INVOCATION">
            <summary>
            <para>By default, the system is free to trigger an any hit shader more than once for a given ray-primitive intersection. This flexibility helps improve the traversal efficiency of acceleration structures in certain cases.  For instance, if the acceleration structure is implemented internally with bounding volumes, the implementation may find it beneficial to store relatively long triangles in multiple bounding boxes rather than a larger single box. However, some application use cases require that intersections be reported to the any hit shader at most once. This flag enables that guarantee for the given geometry, potentially with some performance impact. This flag applies to all geometry types.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_geometry_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC">
            <summary>Describes a set of triangles used as raytracing geometry. The geometry pointed to by this struct are always in triangle list form, indexed or non-indexed. Triangle strips are not supported.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_geometry_triangles_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC.Transform3x4">
            <summary>
            <para>Address of a 3x4 affine transform matrix in row-major layout to be applied to the vertices in the <i>VertexBuffer</i> during an acceleration structure build.  The contents of <i>VertexBuffer</i> are not modified.  If a 2D vertex format is used, the transformation is applied with the third vertex component assumed to be zero. If <i>Transform3x4</i> is NULL the vertices will not be transformed. Using <i>Transform3x4</i> may result in increased computation and/or memory requirements for the acceleration structure build.</para>
            <para>The memory pointed to must be in state <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE</a>.  The address must be aligned to 16 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_TRANSFORM3X4_BYTE_ALIGNMENT</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_geometry_triangles_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC.IndexFormat">
            <summary>
            <para>Format of the indices in the <i>IndexBuffer</i>.  Must be one of the following: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_geometry_triangles_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC.VertexFormat">
            <summary>
            <para>Format of the vertices in <i>VertexBuffer</i>.  Must be one of the following: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_geometry_triangles_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC.IndexCount">
            <summary>Number of indices in <i>IndexBuffer</i>.  Must be 0 if <i>IndexBuffer</i> is NULL.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC.VertexCount">
            <summary>Number of vertices in <i>VertexBuffer</i>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC.IndexBuffer">
            <summary>
            <para>Array of vertex indices.  If NULL, triangles are non-indexed.  Just as with graphics, the address must be aligned to the size of <i>IndexFormat</i>. The memory pointed to must be in state <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE</a>.  Note that if an app wants to share index buffer inputs between graphics input assembler and raytracing acceleration structure build input, it can always put a resource into a combination of read states simultaneously, e.g. <b>D3D12_RESOURCE_STATE_INDEX_BUFFER</b> | <b>D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_geometry_triangles_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC.VertexBuffer">
            <summary>
            <para>Array of vertices including a stride.  The alignment on the address and stride must be a multiple of the component size, so 4 bytes for formats with 32bit components and 2 bytes for formats with 16bit components.  Unlike graphics, there is no constraint on the stride, other than that the bottom 32bits of the value are all that are used – the field is UINT64 purely to make neighboring fields align cleanly/obviously everywhere.  Each vertex position is expected to be at the start address of the stride range and any excess space is ignored by acceleration structure builds.  This excess space might contain other app data such as vertex attributes, which the app is responsible for manually fetching in shaders, whether it is interleaved in vertex buffers or elsewhere. The memory pointed to must be in state <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE</a>.  Note that if an app wants to share vertex buffer inputs between graphics input assembler and raytracing acceleration structure build input, it can always put a resource into a combination of read states simultaneously, e.g. <b>D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER</b> | <b>D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE</b></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_raytracing_geometry_triangles_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_TYPE">
            <summary>Specifies the type of geometry used for raytracing. Use a value from this enumeration to specify the geometry type in a D3D12_RAYTRACING_GEOMETRY_DESC.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_raytracing_geometry_type">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_TYPE.D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES">
            <summary>The geometry consists of triangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_GEOMETRY_TYPE.D3D12_RAYTRACING_GEOMETRY_TYPE_PROCEDURAL_PRIMITIVE_AABBS">
            <summary>The geometry procedurally is defined during raytracing by intersection shaders.  For the purpose of acceleration structure builds, the geometry’s bounds are described with axis-aligned bounding boxes using the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_raytracing_geometry_aabbs_desc">D3D12_RAYTRACING_GEOMETRY_AABBS_DESC</a> structure.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_BEGINNING_ACCESS">
            <summary>Describes the access to resource(s) that is requested by an application at the transition into a render pass.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_render_pass_beginning_access">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_BEGINNING_ACCESS.Type">
            <summary>A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_render_pass_beginning_access_type">D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE</a>. The type of access being requested.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS">
            <summary>Describes the clear value to which resource(s) should be cleared at the beginning of a render pass.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_render_pass_beginning_access_clear_parameters">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS.ClearValue">
            <summary>A  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_clear_value">D3D12_CLEAR_VALUE</a>. The clear value to which the resource(s) should be cleared.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE">
            <summary>Specifies the type of access that an application is given to the specified resource(s) at the transition into a render pass.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_render_pass_beginning_access_type">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD">
            <summary>
            <para>Indicates that your application doesn't have any dependency on the prior contents of the resource(s). You also shouldn't have any expectations about those contents, because a display driver may return the previously-written contents, or it may return uninitialized data. You can be assured that reading from the resource(s) won't hang the GPU, even if you do get undefined data back. A read is defined as a traditional read from an unordered access view (UAV), a shader resource view (SRV), a constant buffer view (CBV), a vertex buffer view (VBV), an index buffer view (IBV), an IndirectArg binding/read, or a blend/depth-testing-induced read.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_render_pass_beginning_access_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE">
            <summary>Indicates that your application has a dependency on the prior contents of the resource(s), so the contents must be loaded from main memory.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR">
            <summary>
            <para>Indicates that your application needs the resource(s) to be cleared to a specific value (a value that your application specifies). This clear occurs whether or not you interact with the resource(s) during the render pass. You specify the clear value at <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist4-beginrenderpass">BeginRenderPass</a> time, in the <b>Clear</b> member of your <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_pass_beginning_access">D3D12_RENDER_PASS_BEGINNING_ACCESS</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_render_pass_beginning_access_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE.D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_NO_ACCESS">
            <summary>Indicates that your application will neither read from nor write  to the resource(s) during the render pass. You would most likely use this value to indicate that you won't be accessing the depth/stencil plane for a depth/stencil view (DSV). You must pair this value with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_render_pass_ending_access_type">D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_NO_ACCESS</a> in the corresponding <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_pass_ending_access">D3D12_RENDER_PASS_ENDING_ACCESS</a> structure.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC">
            <summary>Describes a binding (fixed for the duration of the render pass) to a depth stencil view (DSV), as well as its beginning and ending access characteristics.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_render_pass_depth_stencil_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC.cpuDescriptor">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a>. The CPU descriptor handle corresponding to the depth stencil view (DSV).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC.DepthBeginningAccess">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_pass_beginning_access">D3D12_RENDER_PASS_BEGINNING_ACCESS</a>. The access to the depth buffer requested at the transition into a render pass.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC.StencilBeginningAccess">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_pass_beginning_access">D3D12_RENDER_PASS_BEGINNING_ACCESS</a>. The access to the stencil buffer requested at the transition into a render pass.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC.DepthEndingAccess">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_pass_ending_access">D3D12_RENDER_PASS_ENDING_ACCESS</a>. The access to the depth buffer requested at the transition out of a render pass.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC.StencilEndingAccess">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_pass_ending_access">D3D12_RENDER_PASS_ENDING_ACCESS</a>. The access to the stencil buffer requested at the transition out of a render pass.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS">
            <summary>Describes the access to resource(s) that is requested by an application at the transition out of a render pass.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_render_pass_ending_access">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS.Type">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_render_pass_ending_access_type">D3D12_RENDER_PASS_ENDING_ACCESS_TYPE</a>. The type of access being requested.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS">
            <summary>Describes the subresources involved in resolving at the conclusion of a render pass.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_render_pass_ending_access_resolve_subresource_parameters">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS.SrcSubresource">
            <summary>A <b>UINT</b>. The source subresource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS.DstSubresource">
            <summary>A <b>UINT</b>. The destination subresource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS.DstX">
            <summary>A <b>UINT</b>. The x coordinate within the destination subresource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS.DstY">
            <summary>A <b>UINT</b>. The y coordinate within the destination subresource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS.SrcRect">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/direct3d12/d3d12-rect">D3D12_RECT</a>. The rectangle within the source subresource.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE">
            <summary>Specifies the type of access that an application is given to the specified resource(s) at the transition out of a render pass.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_render_pass_ending_access_type">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD">
            <summary>Indicates that your application won't have any future dependency on any data that you wrote to the resource(s) during this render pass. For example, a depth buffer that won't be textured from before it's written to again.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE">
            <summary>Indicates that your application will have a dependency on the written contents of the resource(s) in the future, and so they must be preserved.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE">
            <summary>Indicates that the resource(s)—for example, a multi-sample anti-aliasing (MSAA) surface—should be directly resolved to a separate resource at the conclusion of the render pass. For a tile-based deferred renderer (TBDR), this should ideally happenwhile the MSAA contents are still in the tile cache. You should ensure that the resolve destination is in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_RESOLVE_DEST</a> resource state when the render pass ends. The resolve source is left in its initial resource state at the time the render pass ends.  A resolve operation submitted by a render pass doesn't implicitly change the state of any resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE.D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_NO_ACCESS">
            <summary>Indicates that your application will neither read from nor write  to the resource(s) during the render pass. You would most likely use this value to indicate that you won't be accessing the depth/stencil plane for a depth/stencil view (DSV). You must pair this value with <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_render_pass_beginning_access_type">D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_NO_ACCESS</a> in the corresponding <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_pass_beginning_access">D3D12_RENDER_PASS_BEGINNING_ACCESS</a> structure.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_FLAGS">
            <summary>Specifies the nature of the render pass; for example, whether it is a suspending or a resuming render pass.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_render_pass_flags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_FLAGS.D3D12_RENDER_PASS_FLAG_NONE">
            <summary>Indicates that the render pass has no special requirements.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_FLAGS.D3D12_RENDER_PASS_FLAG_ALLOW_UAV_WRITES">
            <summary>Indicates that writes to unordered access view(s) should be allowed during the render pass.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_FLAGS.D3D12_RENDER_PASS_FLAG_SUSPENDING_PASS">
            <summary>Indicates that this is a suspending render pass.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_FLAGS.D3D12_RENDER_PASS_FLAG_RESUMING_PASS">
            <summary>Indicates that this is a resuming render pass.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_RENDER_TARGET_DESC">
            <summary>Describes bindings (fixed for the duration of the render pass) to one or more render target views (RTVs), as well as their beginning and ending access characteristics.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_render_pass_render_target_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_RENDER_TARGET_DESC.cpuDescriptor">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a>. The CPU descriptor handle corresponding to the render target view(s) (RTVs).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_RENDER_TARGET_DESC.BeginningAccess">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_pass_beginning_access">D3D12_RENDER_PASS_BEGINNING_ACCESS</a>. The access to the RTV(s) requested at the transition into a render pass.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_RENDER_TARGET_DESC.EndingAccess">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_pass_ending_access">D3D12_RENDER_PASS_ENDING_ACCESS</a>. The access to the RTV(s) requested at the transition out of a render pass.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_BLEND_DESC">
            <summary>Describes the blend state for a render target.</summary>
            <remarks>
            <para>> [!NOTE] > It's not valid for *LogicOpEnable* and *BlendEnable* to both be **TRUE**. You specify an array of <b>D3D12_RENDER_TARGET_BLEND_DESC</b> structures in the <b>RenderTarget</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_blend_desc">D3D12_BLEND_DESC</a> structure to describe the blend states for render targets; you can bind up to eight render targets to the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a> at one time. For info about how blending is done, see the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage">output-merger stage</a>. Here are the default values for blend state. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_render_target_blend_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_BLEND_DESC.BlendEnable">
            <summary>
            <para>Specifies whether to enable (or disable) blending. Set to <b>TRUE</b> to enable blending. > [!NOTE] > It's not valid for *LogicOpEnable* and *BlendEnable* to both be **TRUE**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_BLEND_DESC.LogicOpEnable">
            <summary>
            <para>Specifies whether to enable (or disable) a logical operation. Set to <b>TRUE</b> to enable a logical operation. > [!NOTE] > It's not valid for *LogicOpEnable* and *BlendEnable* to both be **TRUE**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_render_target_blend_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_BLEND_DESC.SrcBlend">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_blend">D3D12_BLEND</a>-typed value that specifies the operation to perform on the RGB value that the pixel shader outputs. The <b>BlendOp</b> member defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_BLEND_DESC.DestBlend">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_blend">D3D12_BLEND</a>-typed value that specifies the operation to perform on the current RGB value in the render target. The <b>BlendOp</b> member defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_BLEND_DESC.BlendOp">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_blend_op">D3D12_BLEND_OP</a>-typed value that defines how to combine the <b>SrcBlend</b> and <b>DestBlend</b> operations.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_BLEND_DESC.SrcBlendAlpha">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_blend">D3D12_BLEND</a>-typed value that specifies the operation to perform on the alpha value that the pixel shader outputs. Blend options that end in _COLOR are not allowed. The <b>BlendOpAlpha</b> member defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_BLEND_DESC.DestBlendAlpha">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_blend">D3D12_BLEND</a>-typed value that specifies the operation to perform on the current alpha value in the render target. Blend options that end in _COLOR are not allowed. The <b>BlendOpAlpha</b> member defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_BLEND_DESC.BlendOpAlpha">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_blend_op">D3D12_BLEND_OP</a>-typed value that defines how to combine the <b>SrcBlendAlpha</b> and <b>DestBlendAlpha</b> operations.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_BLEND_DESC.LogicOp">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_logic_op">D3D12_LOGIC_OP</a>-typed value that specifies the logical operation to configure for the render target.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_BLEND_DESC.RenderTargetWriteMask">
            <summary>A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_color_write_enable">D3D12_COLOR_WRITE_ENABLE</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies a write mask.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC">
            <summary>Describes the subresources from a resource that are accessible by using a render-target view.</summary>
            <remarks>
            <para>Pass a render-target-view description into <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createrendertargetview">ID3D12Device::CreateRenderTargetView</a> to create a render-target view. A render-target view can't use the following formats: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_render_target_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC.Format">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value that specifies the viewing format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC.ViewDimension">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_rtv_dimension">D3D12_RTV_DIMENSION</a>-typed value that specifies how the render-target resource will be accessed. This type specifies how the resource will be accessed. This member also determines which _RTV to use in the following union.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS">
            <summary>Used with the EnqueuMakeResident function to choose how residency operations proceed when the memory budget is exceeded.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_residency_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS.D3D12_RESIDENCY_FLAG_NONE">
            <summary>Specifies the default residency policy, which allows residency operations to succeed regardless of the application's current memory budget. EnqueueMakeResident returns E_OUTOFMEMORY only when there is no memory available.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS.D3D12_RESIDENCY_FLAG_DENY_OVERBUDGET">
            <summary>Specifies that the EnqueueMakeResident function should return E_OUTOFMEMORY when the residency operation would exceed the application's current memory budget.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY">
            <summary>Specifies broad residency priority buckets useful for quickly establishing an application priority scheme.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device1-setresidencypriority">SetResidencyPriority</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_residency_priority#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY.D3D12_RESIDENCY_PRIORITY_MINIMUM">
            <summary>Indicates a minimum priority.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY.D3D12_RESIDENCY_PRIORITY_LOW">
            <summary>Indicates a low priority.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY.D3D12_RESIDENCY_PRIORITY_NORMAL">
            <summary>Indicates a normal, medium, priority.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY.D3D12_RESIDENCY_PRIORITY_HIGH">
            <summary>Indicates a high priority. Applications are discouraged from using priories greater than this. For more information see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device1-setresidencypriority">ID3D12Device1::SetResidencyPriority</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY.D3D12_RESIDENCY_PRIORITY_MAXIMUM">
            <summary>Indicates a maximum priority. Applications are discouraged from using priorities greater than this; <b>D3D12_RESIDENCY_PRIORITY_MAXIMUM</b> is not guaranteed to be available. For more information see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device1-setresidencypriority">ID3D12Device1::SetResidencyPriority</a></summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE">
            <summary>Specifies a resolve operation.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion">ID3D12GraphicsCommandList1::ResolveSubresourceRegion</a> function.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resolve_mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE.D3D12_RESOLVE_MODE_DECOMPRESS">
            <summary>Resolves compressed source samples to their uncompressed values. When using this operation, the source and destination resources must have the same sample count, unlike the min, max, and average operations that require the destination to have a sample count of 1.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE.D3D12_RESOLVE_MODE_MIN">
            <summary>Resolves the source samples to their minimum value. It can be used with any render target or depth stencil format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE.D3D12_RESOLVE_MODE_MAX">
            <summary>Resolves the source samples to their maximum value. It can be used with any render target or depth stencil format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE.D3D12_RESOLVE_MODE_AVERAGE">
            <summary>Resolves the source samples to their average value. It can be used with any non-integer render target format, including the depth plane. It can't be used with integer render target formats, including the stencil plane.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO">
            <summary>Describes parameters needed to allocate resources.</summary>
            <remarks>
            <para>This structure is used by the [ID3D12Device::GetResourceAllocationInfo](./nf-d3d12-id3d12device-getresourceallocationinfo.md) and [ID3D12Device::GetResourceAllocationInfo1](./nf-d3d12-id3d12device4-getresourceallocationinfo1.md) methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_resource_allocation_info#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO.SizeInBytes">
            <summary>
            <para>Type: **[UINT64](/windows/win32/WinProg/windows-data-types)** The size, in bytes, of the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_resource_allocation_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO.Alignment">
            <summary>
            <para>Type: **[UINT64](/windows/win32/WinProg/windows-data-types)** The alignment value for the resource; one of 4KB (4096), 64KB (65536), or 4MB (4194304) alignment.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_resource_allocation_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1">
            <summary>Describes parameters needed to allocate resources, including offset.</summary>
            <remarks>
            <para>This structure is used by the [ID3D12Device::GetResourceAllocationInfo1](./nf-d3d12-id3d12device4-getresourceallocationinfo1.md) method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_resource_allocation_info1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1.Offset">
            <summary>
            <para>Type: **[UINT64](/windows/win32/WinProg/windows-data-types)** The offset, in bytes, of the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_resource_allocation_info1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1.Alignment">
            <summary>
            <para>Type: **[UINT64](/windows/win32/WinProg/windows-data-types)** The alignment value for the resource; one of 4KB (4096), 64KB (65536), or 4MB (4194304) alignment.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_resource_allocation_info1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1.SizeInBytes">
            <summary>
            <para>Type: **[UINT64](/windows/win32/WinProg/windows-data-types)** The size, in bytes, of the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_resource_allocation_info1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER">
            <summary>Describes a resource barrier (transition in resource use).</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-resourcebarrier">ID3D12GraphicsCommandList::ResourceBarrier</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_resource_barrier#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER.Type">
            <summary>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_barrier_type">D3D12_RESOURCE_BARRIER_TYPE</a>-typed value that specifies the type of resource barrier. This member determines which type to use in the union below.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_resource_barrier#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER.Flags">
            <summary>Specifies a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_barrier_flags">D3D12_RESOURCE_BARRIER_FLAGS</a> enumeration constant such as for "begin only" or "end only".</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER_FLAGS">
            <summary>Flags for setting split resource barriers.</summary>
            <remarks>
            <para>Split barriers allow a single transition to be split into begin and end halves (refer to <a href="https://docs.microsoft.com/windows/win32/direct3d12/user-mode-heap-synchronization">Multi-engine synchronization</a>). This enum is used by the <i>Flags</i> member of the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_resource_barrier">D3D12_RESOURCE_BARRIER</a>structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_barrier_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER_FLAGS.D3D12_RESOURCE_BARRIER_FLAG_NONE">
            <summary>No flags.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER_FLAGS.D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY">
            <summary>This starts a barrier transition in a new state, putting a resource in a temporary no-access condition.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER_FLAGS.D3D12_RESOURCE_BARRIER_FLAG_END_ONLY">
            <summary>This barrier completes a transition, setting a new state and restoring active access to a resource.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER_TYPE">
            <summary>Specifies a type of resource barrier (transition in resource use) description.</summary>
            <remarks>
            <para>This enum is used in the <b>D3D12_RESOURCE_BARRIER_TYPE</b> structure. Use these values with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-resourcebarrier">ID3D12GraphicsCommandList::ResourceBarrier</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_barrier_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER_TYPE.D3D12_RESOURCE_BARRIER_TYPE_TRANSITION">
            <summary>A transition barrier that indicates a transition of a set of subresources between different usages. The caller must specify the before and after usages of the subresources.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER_TYPE.D3D12_RESOURCE_BARRIER_TYPE_ALIASING">
            <summary>An aliasing barrier that indicates a transition between usages of 2 different resources that have mappings into the same tile pool. The caller can specify both the before and the after resource. Note that one or both resources can be <b>NULL</b>, which indicates that any tiled resource could cause aliasing.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER_TYPE.D3D12_RESOURCE_BARRIER_TYPE_UAV">
            <summary>An unordered access view (UAV) barrier that indicates all UAV accesses (reads or writes) to a particular resource must complete before any future UAV accesses (read or write) can begin.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC">
            <summary>Describes a resource, such as a texture. This structure is used extensively.</summary>
            <remarks>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_resource_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC.Dimension">
            <summary>One member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_dimension">D3D12_RESOURCE_DIMENSION</a>, specifying the dimensions of the resource (for example, D3D12_RESOURCE_DIMENSION_TEXTURE1D), or whether it is a buffer ((D3D12_RESOURCE_DIMENSION_BUFFER).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC.Alignment">
            <summary>Specifies the alignment.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC.Width">
            <summary>Specifies the width of the resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC.Height">
            <summary>Specifies the height of the resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC.DepthOrArraySize">
            <summary>Specifies the depth of the resource, if it is 3D, or the array size if it is an array of 1D or 2D resources.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC.MipLevels">
            <summary>Specifies the number of MIP levels.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC.Format">
            <summary>Specifies one member of  <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC.SampleDesc">
            <summary>Specifies a <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC.Layout">
            <summary>Specifies one member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_texture_layout">D3D12_TEXTURE_LAYOUT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC.Flags">
            <summary>Bitwise-OR'd flags, as <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_flags">D3D12_RESOURCE_FLAGS</a> enumeration constants.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1">
            <summary>Describes a resource, such as a texture, including a mip region. This structure is used in several methods.</summary>
            <remarks>
            <para>For remarks, see [D3D12_RESOURCE_DESC1](./ns-d3d12-d3d12_resource_desc.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_resource_desc1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1.Dimension">
            <summary>One member of <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_dimension">D3D12_RESOURCE_DIMENSION</a>, specifying the dimensions of the resource (for example, D3D12_RESOURCE_DIMENSION_TEXTURE1D), or whether it is a buffer ((D3D12_RESOURCE_DIMENSION_BUFFER).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1.Alignment">
            <summary>Specifies the alignment.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1.Width">
            <summary>Specifies the width of the resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1.Height">
            <summary>Specifies the height of the resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1.DepthOrArraySize">
            <summary>Specifies the depth of the resource, if it is 3D, or the array size if it is an array of 1D or 2D resources.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1.MipLevels">
            <summary>Specifies the number of MIP levels.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1.Format">
            <summary>Specifies one member of <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1.SampleDesc">
            <summary>Specifies a <a href="https://docs.microsoft.com/windows/win32/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1.Layout">
            <summary>Specifies one member of <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_texture_layout">D3D12_TEXTURE_LAYOUT</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1.Flags">
            <summary>Bitwise-OR'd flags, as <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_flags">D3D12_RESOURCE_FLAGS</a> enumeration constants.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1.SamplerFeedbackMipRegion">
            <summary>A [D3D12_MIP_REGION](./ns-d3d12-d3d12_mip_region.md) struct.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DIMENSION">
            <summary>Identifies the type of resource being used.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_resource_desc">D3D12_RESOURCE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_dimension#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DIMENSION.D3D12_RESOURCE_DIMENSION_UNKNOWN">
            <summary>Resource is of unknown type.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DIMENSION.D3D12_RESOURCE_DIMENSION_BUFFER">
            <summary>Resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DIMENSION.D3D12_RESOURCE_DIMENSION_TEXTURE1D">
            <summary>Resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DIMENSION.D3D12_RESOURCE_DIMENSION_TEXTURE2D">
            <summary>Resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DIMENSION.D3D12_RESOURCE_DIMENSION_TEXTURE3D">
            <summary>Resource is a 3D texture.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_FLAGS">
            <summary>Specifies options for working with resources.</summary>
            <remarks>
            <para>This enum is used by the <b>Flags</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_resource_desc">D3D12_RESOURCE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_FLAGS.D3D12_RESOURCE_FLAG_NONE">
            <summary>No options are specified.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_FLAGS.D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET">
            <summary>
            <para>Allows a render target view to be created for the resource, as well as enables the resource to transition into the state of D3D12_RESOURCE_STATE_RENDER_TARGET. Some adapter architectures allocate extra memory for textures with this flag to reduce the effective bandwidth during common rendering. This characteristic may not be beneficial for textures that are never rendered to, nor is it available for textures compressed with BC formats. Applications should avoid setting this flag when rendering will never occur.</para>
            <para>The following restrictions and interactions apply: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_FLAGS.D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL">
            <summary>
            <para>Allows a depth stencil view to be created for the resource, as well as enables the resource to transition into the state of D3D12_RESOURCE_STATE_DEPTH_WRITE and/or D3D12_RESOURCE_STATE_DEPTH_READ. Most adapter architectures allocate extra memory for textures with this flag to reduce the effective bandwidth and maximize optimizations for early depth-test. Applications should avoid setting this flag when depth operations will never occur.</para>
            <para>The following restrictions and interactions apply: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_FLAGS.D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS">
            <summary>
            <para>Allows an unordered access view to be created for the resource, as well as enables the resource to transition into the state of D3D12_RESOURCE_STATE_UNORDERED_ACCESS. Some adapter architectures must resort to less efficient texture layouts in order to provide this functionality. If a texture is rarely used for unordered access, it may be worth having two textures around and copying between them. One texture would have this flag, while the other wouldn't. Applications should avoid setting this flag when unordered access operations will never occur.</para>
            <para>The following restrictions and interactions apply: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_FLAGS.D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE">
            <summary>
            <para>Disallows a shader resource view to be created for the resource, as well as disables the resource to transition into the state of D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE or D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE. Some adapter architectures experience increased bandwidth for depth stencil textures when shader resource views are precluded. If a texture is rarely used for shader resource, it may be worth having two textures around and copying between them. One texture would have this flag and the other wouldn't. Applications should set this flag when depth stencil textures will never be used from shader resource views.</para>
            <para>The following restrictions and interactions apply:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_FLAGS.D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER">
            <summary>
            <para>Allows the resource to be used for cross-adapter data, as well as the same features enabled by ALLOW_SIMULTANEOUS_ACCESS. Cross adapter resources commonly preclude techniques that reduce effective texture bandwidth during usage, and some adapter architectures may require different caching behavior. Applications should avoid setting this flag when the resource data will never be used with another adapter. The following restrictions and interactions apply:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_FLAGS.D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS">
            <summary>
            <para>Allows a resource to be simultaneously accessed by multiple different queues, devices or processes (for example, allows a resource to be used with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-resourcebarrier">ResourceBarrier</a> transitions performed in more than one command list executing at the same time). Simultaneous access allows multiple readers and one writer, as long as the writer doesn't concurrently modify the texels that other readers are accessing. Some adapter architectures cannot leverage techniques to reduce effective texture bandwidth during usage. However, applications should avoid setting this flag when multiple readers are not required during frequent, non-overlapping writes to textures. Use of this flag can compromise resource fences to perform waits, and prevents any compression being used with a resource. These restrictions and interactions apply. - Can't be used with [D3D12_RESOURCE_DIMENSION_BUFFER](./ne-d3d12-d3d12_resource_dimension.md); but buffers always have the properties represented by this flag. - Can't be used with MSAA textures. - Can't be used with [D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL]().</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_FLAGS.D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY">
            <summary>
            <para>This resource may only be used as a decode reference frame.  It may only be written to or read by the video decode operation. [D3D12_VIDEO_DECODE_TIER_1](../d3d12video/ne-d3d12video-d3d12_video_decode_tier.md) and [D3D12_VIDEO_DECODE_TIER_2](../d3d12video/ne-d3d12video-d3d12_video_decode_tier.md) may report     [D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_REFERENCE_ONLY_ALLOCATIONS_REQUIRED](../d3d12video/ne-d3d12video-d3d12_video_decode_configuration_flags.md) in the [D3D12_FEATURE_DATA_VIDEO_DECODE_SUPPORT](../d3d12video/ns-d3d12video-d3d12_feature_data_video_decode_support.md) structure configuration flag.  If so, the application must allocate reference frames with the new **D3D12\_RESOURCE\_VIDEO\_DECODE\_REFERENCE\_ONLY** resource flag.  [D3D12_VIDEO_DECODE_TIER_3](../d3d12video/ne-d3d12video-d3d12_video_decode_tier.md) must not set the [D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_REFERENCE_ONLY_ALLOCATIONS_REQUIRED] (../d3d12video/ne-d3d12video-d3d12_video_decode_configuration_flags)) configuration flag and must not require the use of this resource flag.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES">
            <summary>Defines constants that specify the state of a resource regarding how the resource is being used.</summary>
            <remarks>
            <para>This enum is used by the following methods:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_states#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_COMMON">
            <summary>
            <para>Your application should transition to this state only for accessing a resource across different graphics engine types. Specifically, a resource must be in the COMMON state before being used on a COPY queue (when previous used on DIRECT/COMPUTE), and before being used on DIRECT/COMPUTE (when previously used on COPY). This restriction does not exist when accessing data between DIRECT and COMPUTE queues. The COMMON state can be used for all usages on a Copy queue using the implicit state transitions. For more info, in <a href="https://docs.microsoft.com/windows/win32/direct3d12/user-mode-heap-synchronization">Multi-engine synchronization</a>, find "common". Additionally, textures must be in the COMMON state for CPU access to be legal, assuming the texture was created in a CPU-visible heap in the first place.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_states#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER">
            <summary>A subresource must be in this state when it is accessed by the GPU as a vertex buffer or constant buffer. This is a read-only state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_INDEX_BUFFER">
            <summary>A subresource must be in this state when it is accessed by the 3D pipeline as an index buffer. This is a read-only state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_RENDER_TARGET">
            <summary>
            <para>The resource is used as a render target. A subresource must be in this state when it is rendered to or when it is cleared with <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-clearrendertargetview">ID3D12GraphicsCommandList::ClearRenderTargetView</a>. This is a write-only state. To read from a render target as a shader resource the resource must be in either  D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE or D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_states#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_UNORDERED_ACCESS">
            <summary>The resource is used for unordered access. A subresource must be in this state when it is accessed by the GPU via an unordered access view. A subresource must also be in this state when it is cleared with <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewuint">ID3D12GraphicsCommandList::ClearUnorderedAccessViewInt</a> or <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewfloat">ID3D12GraphicsCommandList::ClearUnorderedAccessViewFloat</a>. This is a read/write state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_DEPTH_WRITE">
            <summary>**D3D12_RESOURCE_STATE_DEPTH_WRITE** is a state that is mutually exclusive with other states. You should use it for <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-cleardepthstencilview">ID3D12GraphicsCommandList::ClearDepthStencilView</a> when the flags (see <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_clear_flags">D3D12_CLEAR_FLAGS</a>) indicate a given subresource should be cleared (otherwise the subresource state doesn't matter), or when using it in a writable depth stencil view (see <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_dsv_flags">D3D12_DSV_FLAGS</a>) when the PSO has depth write enabled (see <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_depth_stencil_desc">D3D12_DEPTH_STENCIL_DESC</a>).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_DEPTH_READ">
            <summary>DEPTH_READ is a state which can be combined with other states. It should be used when the subresource is in a read-only depth stencil view, or when the <i>DepthEnable</i> parameter of <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_depth_stencil_desc">D3D12_DEPTH_STENCIL_DESC</a> is false. It can be combined with other read states (for example, D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE), such that the resource can be used for the depth or stencil test, and accessed by a shader within the same draw call. Using it when depth will be written by a draw call or clear command is invalid.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE">
            <summary>The resource is used with a shader other than the pixel shader. A subresource must be in this state before being read by any stage (except for the pixel shader stage) via a shader resource view. You can still use the resource in a pixel shader with this flag as long as it also has the flag D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE set. This is a read-only state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE">
            <summary>The resource is used with a pixel shader. A subresource must be in this state before being read by the pixel shader via a shader resource view. This is a read-only state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_STREAM_OUT">
            <summary>The resource is used with stream output. A subresource must be in this state when it is accessed by the 3D pipeline as a stream-out target. This is a write-only state.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT">
            <summary>
            <para>The resource is used as an indirect argument. Subresources must be in this state when they are used as the argument buffer passed to the indirect drawing method <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-executeindirect">ID3D12GraphicsCommandList::ExecuteIndirect</a>. This is a read-only state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_states#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_COPY_DEST">
            <summary>
            <para>The resource is used as the destination in a copy operation. Subresources must be in this state when they are used as the destination of copy operation, or a blt operation. This is a write-only state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_states#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_COPY_SOURCE">
            <summary>
            <para>The resource is used as the source in a copy operation. Subresources must be in this state when they are used as the source of copy operation, or a blt operation. This is a read-only state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_resource_states#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_RESOLVE_DEST">
            <summary>The resource is used as the destination in a resolve operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_RESOLVE_SOURCE">
            <summary>The resource is used as the source in a resolve operation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE">
            <summary>When a buffer is created with this as its initial state, it indicates that the resource is a raytracing acceleration structure, for use in <a href="nf-d3d12-id3d12graphicscommandlist4-buildraytracingaccelerationstructure.md">ID3D12GraphicsCommandList4::BuildRaytracingAccelerationStructure</a>, <a href="nf-d3d12-id3d12graphicscommandlist4-copyraytracingaccelerationstructure.md">ID3D12GraphicsCommandList4::CopyRaytracingAccelerationStructure</a>, or <a href="nf-d3d12-id3d12device-createshaderresourceview.md">ID3D12Device::CreateShaderResourceView</a> for the <a href="ne-d3d12-d3d12_srv_dimension.md">D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE</a> dimension.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE">
            <summary>Starting with Windows 10, version 1903 (10.0; Build 18362), indicates that the resource is a screen-space shading-rate image for variable-rate shading (VRS). For more info, see <a href="https://docs.microsoft.com/windows/win32/direct3d12/vrs">Variable-rate shading (VRS)</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_GENERIC_READ">
            <summary>D3D12_RESOURCE_STATE_GENERIC_READ is a logically OR'd combination of other read-state bits. This is the required starting state for an upload heap. Your application should generally avoid transitioning to D3D12_RESOURCE_STATE_GENERIC_READ when possible, since that can result in premature cache flushes, or resource layout changes (for example, compress/decompress), causing unnecessary pipeline stalls. You should instead transition resources only to the actually-used states.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_PRESENT">
            <summary>Synonymous with D3D12_RESOURCE_STATE_COMMON.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_PREDICATION">
            <summary>The resource is used for <a href="https://docs.microsoft.com/windows/win32/direct3d12/predication">Predication</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_VIDEO_DECODE_READ">
            <summary>The resource is used as a source in a decode operation. Examples include reading the compressed bitstream and reading from decode references,</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE">
            <summary>The resource is used as a destination in the decode operation. This state is used for decode output and histograms.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ">
            <summary>The resource is used to read video data during video processing; that is, the resource is used as the source in a processing operation such as video encoding (compression).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE">
            <summary>The resource is used to write video data during video processing; that is, the resource is used as the destination in a processing operation such as video encoding (compression).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ">
            <summary>The resource is used as the source in an encode operation. This state is used for the input and reference of motion estimation.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES.D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE">
            <summary>This resource is used as the destination in an encode operation. This state is used for the destination texture of a resolve motion vector heap operation.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_CONSTANTS">
            <summary>Describes constants inline in the root signature that appear in shaders as one constant buffer.</summary>
            <remarks>
            <para>Refer to <a href="https://docs.microsoft.com/windows/desktop/direct3d12/resource-binding-in-hlsl">Resource Binding in HLSL</a> for more information on shader registers and spaces. <b>D3D12_ROOT_CONSTANTS</b> is the data type of the <b>Constants</b> member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_parameter">D3D12_ROOT_PARAMETER</a>. Use a <b>D3D12_ROOT_CONSTANTS</b> when you set <b>D3D12_ROOT_PARAMETER</b>'s <b>SlotType</b> field to the D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_root_parameter_type">D3D12_ROOT_PARAMETER_TYPE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_root_constants#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_CONSTANTS.ShaderRegister">
            <summary>The shader register.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_CONSTANTS.RegisterSpace">
            <summary>The register space.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_CONSTANTS.Num32BitValues">
            <summary>
            <para>The number of constants that occupy a single shader slot (these constants appear like a single constant buffer). All constants occupy a single root signature bind slot.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_root_constants#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR">
            <summary>Describes descriptors inline in the root signature version 1.0 that appear in shaders.</summary>
            <remarks>
            <para><b>D3D12_ROOT_DESCRIPTOR</b> is the data type of the <b>Descriptor</b> member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_parameter">D3D12_ROOT_PARAMETER</a>. Use a <b>D3D12_ROOT_DESCRIPTOR</b> when you set <b>D3D12_ROOT_PARAMETER</b>'s <b>ParameterType</b> field to the D3D12_ROOT_PARAMETER_TYPE_CBV, D3D12_ROOT_PARAMETER_TYPE_SRV, or D3D12_ROOT_PARAMETER_TYPE_UAV members of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_root_parameter_type">D3D12_ROOT_PARAMETER_TYPE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_root_descriptor#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR.ShaderRegister">
            <summary>The shader register.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR.RegisterSpace">
            <summary>The register space.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR1">
            <summary>Describes descriptors inline in the root signature version 1.1 that appear in shaders.</summary>
            <remarks>
            <para><b>D3D12_ROOT_DESCRIPTOR1</b> is the data type of the <b>Descriptor</b> member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_parameter1">D3D12_ROOT_PARAMETER1</a>. Use a <b>D3D12_ROOT_DESCRIPTOR1</b> when you set <b>D3D12_ROOT_PARAMETER1</b>'s <b>SlotType</b> field to the D3D12_ROOT_PARAMETER_TYPE_CBV, D3D12_ROOT_PARAMETER_TYPE_SRV, or D3D12_ROOT_PARAMETER_TYPE_UAV members of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_root_parameter_type">D3D12_ROOT_PARAMETER_TYPE</a>.</para>
            <para>Refer to the helper structure <a href="https://docs.microsoft.com/windows/desktop/direct3d12/cd3dx12-root-descriptor1">CD3DX12_ROOT_DESCRIPTOR1</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_root_descriptor1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR1.ShaderRegister">
            <summary>The shader register.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR1.RegisterSpace">
            <summary>The register space.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR1.Flags">
            <summary>Specifies the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_root_descriptor_flags">D3D12_ROOT_DESCRIPTOR_FLAGS</a> that determine the volatility of descriptors and the data they reference.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR_FLAGS">
            <summary>Specifies the volatility of the data referenced by descriptors in a Root Signature 1.1 description, which can enable some driver optimizations.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_descriptor1">D3D12_ROOT_DESCRIPTOR1</a> structure. To specify the volatility of both descriptors and data, refer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_descriptor_range_flags">D3D12_DESCRIPTOR_RANGE_FLAGS</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_root_descriptor_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR_FLAGS.D3D12_ROOT_DESCRIPTOR_FLAG_NONE">
            <summary>Default assumptions are made for data (for SRV/CBV: DATA_STATIC_WHILE_SET_AT_EXECUTE, and for UAV: DATA_VOLATILE).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR_FLAGS.D3D12_ROOT_DESCRIPTOR_FLAG_DATA_VOLATILE">
            <summary>Data is volatile. Equivalent to Root Signature Version 1.0.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR_FLAGS.D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE">
            <summary>Data is static while set at execute.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR_FLAGS.D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC">
            <summary>Data is static. The best potential for driver optimization.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR_TABLE">
            <summary>Describes the root signature 1.0 layout of a descriptor table as a collection of descriptor ranges that are all relative to a single base descriptor handle.</summary>
            <remarks>
            <para>Samplers are not allowed in the same descriptor table as constant-buffer views (CBVs), unordered-access views (UAVs), and shader-resource views (SRVs).</para>
            <para><b>D3D12_ROOT_DESCRIPTOR_TABLE</b>is the data type of the <b>DescriptorTable</b>member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_parameter">D3D12_ROOT_PARAMETER</a>. Use a <b>D3D12_ROOT_DESCRIPTOR_TABLE</b> when you set <b>D3D12_ROOT_PARAMETER</b>'s <b>SlotType</b> member to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_root_parameter_type">D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_root_descriptor_table#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR_TABLE.NumDescriptorRanges">
            <summary>The number of descriptor ranges in the table layout.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR_TABLE.pDescriptorRanges">
            <summary>An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_descriptor_range">D3D12_DESCRIPTOR_RANGE</a> structures that describe the descriptor ranges.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR_TABLE1">
            <summary>Describes the root signature 1.1 layout of a descriptor table as a collection of descriptor ranges that are all relative to a single base descriptor handle.</summary>
            <remarks>
            <para>Samplers are not allowed in the same descriptor table as constant-buffer views (CBVs), unordered-access views (UAVs), and shader-resource views (SRVs).</para>
            <para><b>D3D12_ROOT_DESCRIPTOR_TABLE1</b>is the data type of the <b>DescriptorTable</b>member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_parameter1">D3D12_ROOT_PARAMETER1</a>. Use a <b>D3D12_ROOT_DESCRIPTOR_TABLE1</b> when you set <b>D3D12_ROOT_PARAMETER1</b>'s <b>SlotType</b> member to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_root_parameter_type">D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE</a>.</para>
            <para>Refer to the helper structure <a href="https://docs.microsoft.com/windows/desktop/direct3d12/cd3dx12-root-descriptor-table1">CD3DX12_ROOT_DESCRIPTOR_TABLE1</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_root_descriptor_table1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR_TABLE1.NumDescriptorRanges">
            <summary>The number of descriptor ranges in the table layout.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_DESCRIPTOR_TABLE1.pDescriptorRanges">
            <summary>An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_descriptor_range1">D3D12_DESCRIPTOR_RANGE1</a> structures that describe the descriptor ranges.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER">
            <summary>Describes the slot of a root signature version 1.0.</summary>
            <remarks>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_signature_desc">D3D12_ROOT_SIGNATURE_DESC</a> can contain descriptor tables and inline constants. More capable hardware could support inline descriptors in the root signature as well. The number of bind slots in the root signature are most efficient if kept below a certain size, and can have an upper bound as well.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_root_parameter#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER.ParameterType">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_root_parameter_type">D3D12_ROOT_PARAMETER_TYPE</a>-typed value that  specifies the type of root signature slot. This member determines which type to use in the union below.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER.ShaderVisibility">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_shader_visibility">D3D12_SHADER_VISIBILITY</a>-typed value that  specifies the shaders that can access the contents of the root signature slot.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER1">
            <summary>Describes the slot of a root signature version 1.1.</summary>
            <remarks>
            <para>Use this structure with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_signature_desc1">D3D12_ROOT_SIGNATURE_DESC1</a> structure. Refer to the helper structure <a href="https://docs.microsoft.com/windows/desktop/direct3d12/cd3dx12-root-parameter1">CD3DX12_ROOT_PARAMETER1</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_root_parameter1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER1.ParameterType">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_root_parameter_type">D3D12_ROOT_PARAMETER_TYPE</a>-typed value that  specifies the type of root signature slot. This member determines which type to use in the union below.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER1.ShaderVisibility">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_shader_visibility">D3D12_SHADER_VISIBILITY</a>-typed value that  specifies the shaders that can access the contents of the root signature slot.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER_TYPE">
            <summary>Specifies the type of root signature slot.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_parameter">D3D12_ROOT_PARAMETER</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_root_parameter_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER_TYPE.D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE">
            <summary>The slot is for a descriptor table.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER_TYPE.D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS">
            <summary>The slot is for root constants.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER_TYPE.D3D12_ROOT_PARAMETER_TYPE_CBV">
            <summary>The slot is for a constant-buffer view (CBV).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER_TYPE.D3D12_ROOT_PARAMETER_TYPE_SRV">
            <summary>The slot is for a shader-resource view (SRV).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_PARAMETER_TYPE.D3D12_ROOT_PARAMETER_TYPE_UAV">
            <summary>The slot is for a unordered-access view (UAV).</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC">
            <summary>Describes the layout of a root signature version 1.0.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-d3d12serializerootsignature">D3D12SerializeRootSignature</a> function and is returned by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12rootsignaturedeserializer-getrootsignaturedesc">ID3D12RootSignatureDeserializer::GetRootSignatureDesc</a> method.</para>
            <para>There is one graphics root signature, and one compute root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_root_signature_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC.NumParameters">
            <summary>The number of slots in the root signature. This number is also the number of elements in the <i>pParameters</i> array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC.pParameters">
            <summary>An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_parameter">D3D12_ROOT_PARAMETER</a> structures for the slots in the root signature.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC.NumStaticSamplers">
            <summary>Specifies the number of static samplers.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC.pStaticSamplers">
            <summary>Pointer to one or more <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_static_sampler_desc">D3D12_STATIC_SAMPLER_DESC</a> structures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC.Flags">
            <summary>
            <para>A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_root_signature_flags">D3D12_ROOT_SIGNATURE_FLAGS</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies options for the root signature layout.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_root_signature_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC1">
            <summary>Describes the layout of a root signature version 1.1.</summary>
            <remarks>
            <para>Use this structure with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_versioned_root_signature_desc">D3D12_VERSIONED_ROOT_SIGNATURE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_root_signature_desc1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC1.NumParameters">
            <summary>The number of slots in the root signature. This number is also the number of elements in the <i>pParameters</i> array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC1.pParameters">
            <summary>An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_parameter1">D3D12_ROOT_PARAMETER1</a> structures for the slots in the root signature.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC1.NumStaticSamplers">
            <summary>Specifies the number of static samplers.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC1.pStaticSamplers">
            <summary>Pointer to one or more <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_static_sampler_desc">D3D12_STATIC_SAMPLER_DESC</a> structures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC1.Flags">
            <summary>Specifies the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_root_signature_flags">D3D12_ROOT_SIGNATURE_FLAGS</a> that determine the data volatility.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_FLAGS">
            <summary>Specifies options for root signature layout.</summary>
            <remarks>
            <para>This enum is used in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_signature_desc">D3D12_ROOT_SIGNATURE_DESC</a> structure.</para>
            <para>The value in denying access to shader stages is a minor optimization on some hardware. If, for example, the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_shader_visibility">D3D12_SHADER_VISIBILITY_ALL</a> flag has been set to broadcast the root signature to all shader stages, then denying access can overrule this and save the hardware some work. Alternatively if the shader is so simple that no root signature resources are needed, then denying access could be used here too.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_root_signature_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_FLAGS.D3D12_ROOT_SIGNATURE_FLAG_NONE">
            <summary>Indicates default behavior.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_FLAGS.D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT">
            <summary>The app is opting in to using the Input Assembler (requiring an input layout that defines a set of vertex buffer bindings). Omitting this flag can result in one root argument space being saved on some hardware. Omit this flag if the Input Assembler is not required, though the optimization is minor.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_FLAGS.D3D12_ROOT_SIGNATURE_FLAG_DENY_VERTEX_SHADER_ROOT_ACCESS">
            <summary>Denies the vertex shader access to the root signature.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_FLAGS.D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS">
            <summary>Denies the hull shader access to the root signature.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_FLAGS.D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS">
            <summary>Denies the domain shader access to the root signature.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_FLAGS.D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS">
            <summary>Denies the geometry shader access to the root signature.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_FLAGS.D3D12_ROOT_SIGNATURE_FLAG_DENY_PIXEL_SHADER_ROOT_ACCESS">
            <summary>Denies the pixel shader access to the root signature.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_FLAGS.D3D12_ROOT_SIGNATURE_FLAG_ALLOW_STREAM_OUTPUT">
            <summary>The app is opting in to using Stream Output. Omitting this flag can result in one root argument space being saved on some hardware. Omit this flag if Stream Output is not required, though the optimization is minor.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_FLAGS.D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE">
            <summary>The root signature is to be used with raytracing shaders to define resource bindings sourced from shader records in shader tables.  This flag cannot be combined with any other root signature flags, which are all related to the graphics pipeline.  The absence of the flag means the root signature can be used with graphics or compute, where the compute version is also shared with raytracing’s global root signature.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_RTV_DIMENSION">
            <summary>Identifies the type of resource to view as a render target.</summary>
            <remarks>
            <para>Specify one of the values in this enumeration in the <b>ViewDimension</b> member of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_view_desc">D3D12_RENDER_TARGET_VIEW_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_rtv_dimension#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RTV_DIMENSION.D3D12_RTV_DIMENSION_UNKNOWN">
            <summary>Do not use this value, as it will cause <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createrendertargetview">ID3D12Device::CreateRenderTargetView</a> to fail.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RTV_DIMENSION.D3D12_RTV_DIMENSION_BUFFER">
            <summary>The resource will be accessed as a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RTV_DIMENSION.D3D12_RTV_DIMENSION_TEXTURE1D">
            <summary>The resource will be accessed as a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RTV_DIMENSION.D3D12_RTV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource will be accessed as an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RTV_DIMENSION.D3D12_RTV_DIMENSION_TEXTURE2D">
            <summary>The resource will be accessed as a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RTV_DIMENSION.D3D12_RTV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource will be accessed as an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RTV_DIMENSION.D3D12_RTV_DIMENSION_TEXTURE2DMS">
            <summary>The resource will be accessed as a 2D texture with multisampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RTV_DIMENSION.D3D12_RTV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource will be accessed as an array of 2D textures with multisampling.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_RTV_DIMENSION.D3D12_RTV_DIMENSION_TEXTURE3D">
            <summary>The resource will be accessed as a 3D texture.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC">
            <summary>Describes a sampler state.</summary>
            <remarks>
            <para>This structure is used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createsampler">CreateSampler</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_sampler_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.Filter">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER</a>-typed value that specifies the filtering method to use when sampling a texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.AddressU">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_texture_address_mode">D3D12_TEXTURE_ADDRESS_MODE</a>-typed value that specifies the method to use for resolving a u texture coordinate that is outside the 0 to 1 range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.AddressV">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_texture_address_mode">D3D12_TEXTURE_ADDRESS_MODE</a>-typed value that specifies the method to use for resolving a v texture coordinate that is outside the 0 to 1 range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.AddressW">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_texture_address_mode">D3D12_TEXTURE_ADDRESS_MODE</a>-typed value that specifies the method to use for resolving a w texture coordinate that is outside the 0 to 1 range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.MipLODBias">
            <summary>Offset from the calculated mipmap level. For example, if the runtime calculates that a texture should be sampled at mipmap level 3 and <b>MipLODBias</b> is 2, the texture will be sampled at mipmap level 5.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.MaxAnisotropy">
            <summary>Clamping value used if <b>D3D12_FILTER_ANISOTROPIC</b> or <b>D3D12_FILTER_COMPARISON_ANISOTROPIC</b> is specified in <b>Filter</b>. Valid values are between 1 and 16.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.ComparisonFunc">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_comparison_func">D3D12_COMPARISON_FUNC</a>-typed value that specifies a function that compares sampled data against existing sampled data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.BorderColor">
            <summary>Border color to use if <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_texture_address_mode">D3D12_TEXTURE_ADDRESS_MODE_BORDER</a> is specified for <b>AddressU</b>, <b>AddressV</b>, or <b>AddressW</b>. Range must be between 0.0 and 1.0 inclusive.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.MinLOD">
            <summary>Lower end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.MaxLOD">
            <summary>Upper end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed. This value must be greater than or equal to <b>MinLOD</b>. To have no upper limit on LOD, set this member to a large value.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.__float_4.Length">
            <summary>Always <c>4</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.__float_4.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC.__float_4.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION">
            <summary>Describes a sub-pixel sample position for use with programmable sample positions.</summary>
            <remarks>
            <para>Sample positions have the origin (0, 0) at the pixel center. Each of the X and Y coordinates are signed values in the range -8 (top/left) to 7 (bottom/right). Values outside this range are invalid. Each increment of these integer values represents 1/16th of a pixel. For example, X and Y values of -8 and 4, respectively, correspond to floating-point values of -0.5 and 0.25, a point located on the left-most edge of the pixel, half-way between its center-line and the bottom edge. Because of this, the bottom-most and right-most edge of a pixel are not reachable by sampling (these positions are reachable as the top-most and left-most edges of the neighboring pixels).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_sample_position#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION.X">
            <summary>A signed sub-pixel coordinate value in the X axis.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION.Y">
            <summary>A signed sub-pixel coordinate value in the Y axis.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER">
            <summary>Opaque data structure describing driver versioning for a serialized acceleration structure.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_serialized_data_driver_matching_identifier">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER.DriverOpaqueGUID">
            <summary>The opaque identifier of the driver.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER.DriverOpaqueVersioningData">
            <summary>The opaque driver versioning data.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER.__byte_16.Length">
            <summary>Always <c>16</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER.__byte_16.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER.__byte_16.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE">
            <summary>Specifies the type of serialized data. Use a value from this enumeration when calling ID3D12Device5::CheckDriverMatchingIdentifier.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_serialized_data_type">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE.D3D12_SERIALIZED_DATA_RAYTRACING_ACCELERATION_STRUCTURE">
            <summary>The serialized data is a raytracing acceleration structure.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_BYTECODE">
            <summary>Describes shader data.</summary>
            <remarks>
            <para>The <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_compute_pipeline_state_desc">D3D12_COMPUTE_PIPELINE_STATE_DESC</a> objects contain <b>D3D12_SHADER_BYTECODE</b> structures that describe various shader types. When loading a shader from FXC/DXC, this may be the entire compiled blob as is loaded from disk.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_shader_bytecode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_BYTECODE.pShaderBytecode">
            <summary>A pointer to a memory block that contains the shader data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_BYTECODE.BytecodeLength">
            <summary>The size, in bytes, of the shader data that the <b>pShaderBytecode</b> member points to.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC">
            <summary>Describes a shader-resource view.</summary>
            <remarks>
            <para>A view is a format-specific way to look at the data in a resource. The view determines what data to look at, and how it is cast when read. When viewing a resource, the resource-view description must specify a typed format, that is compatible with the resource format. So that means that you can't create a resource-view description using any format with _TYPELESS in the name. You can however view a typeless resource by specifying a typed format for the view. For example, a DXGI_FORMAT_R32G32B32_TYPELESS resource can be viewed with one of these typed formats: DXGI_FORMAT_R32G32B32_FLOAT, DXGI_FORMAT_R32G32B32_UINT, and DXGI_FORMAT_R32G32B32_SINT, since these typed formats are compatible with the typeless resource. Create a shader-resource-view description by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_shader_resource_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC.Format">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value that specifies the viewing format. See remarks.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC.ViewDimension">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_srv_dimension">D3D12_SRV_DIMENSION</a>-typed value that specifies the resource type of the view. This type is the same as the resource type of the underlying resource. This member also determines which _SRV to use in the union below.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC.Shader4ComponentMapping">
            <summary>A value, constructed using the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_shader_component_mapping">D3D12_ENCODE_SHADER_4_COMPONENT_MAPPING</a> macro. The **D3D12_SHADER_COMPONENT_MAPPING** enumeration specifies what values from memory should be returned when the texture is accessed in a shader via this shader resource view (SRV). For example, it can route component 1 (green) from memory, or the constant `0`, into component 2 (`.b`) of the value given to the shader.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_VISIBILITY">
            <summary>Specifies the shaders that can access the contents of a given root signature slot.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_parameter">D3D12_ROOT_PARAMETER</a> structure. The compute queue always uses <b>D3D12_SHADER_VISIBILITY_ALL</b> because it has only one active stage. The 3D queue can choose values, but if it uses <b>D3D12_SHADER_VISIBILITY_ALL</b>, all shader stages can access whatever is bound at the root signature slot.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_shader_visibility#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_VISIBILITY.D3D12_SHADER_VISIBILITY_ALL">
            <summary>Specifies that all shader stages can access whatever is bound at the root signature slot.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_VISIBILITY.D3D12_SHADER_VISIBILITY_VERTEX">
            <summary>Specifies that the vertex shader stage can access whatever is bound at the root signature slot.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_VISIBILITY.D3D12_SHADER_VISIBILITY_HULL">
            <summary>Specifies that the hull shader stage can access whatever is bound at the root signature slot.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_VISIBILITY.D3D12_SHADER_VISIBILITY_DOMAIN">
            <summary>Specifies that the domain shader stage can access whatever is bound at the root signature slot.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_VISIBILITY.D3D12_SHADER_VISIBILITY_GEOMETRY">
            <summary>Specifies that the geometry shader stage can access whatever is bound at the root signature slot.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_VISIBILITY.D3D12_SHADER_VISIBILITY_PIXEL">
            <summary>Specifies that the pixel shader stage can access whatever is bound at the root signature slot.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_VISIBILITY.D3D12_SHADER_VISIBILITY_AMPLIFICATION">
            <summary>Specifies that the amplification shader stage can access whatever is bound at the root signature slot.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_VISIBILITY.D3D12_SHADER_VISIBILITY_MESH">
            <summary>Specifies that the mesh shader stage can access whatever is bound at the root signature slot.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE">
            <summary>Defines constants that specify the shading rate (for variable-rate shading, or VRS).</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_shading_rate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE.D3D12_SHADING_RATE_1X1">
            <summary>Specifies no change to the shading rate.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE.D3D12_SHADING_RATE_1X2">
            <summary>Specifies that the shading rate should reduce vertical resolution 2x.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE.D3D12_SHADING_RATE_2X1">
            <summary>Specifies that the shading rate should reduce horizontal resolution 2x.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE.D3D12_SHADING_RATE_2X2">
            <summary>Specifies that the shading rate should reduce the resolution of both axes 2x.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE.D3D12_SHADING_RATE_2X4">
            <summary>Specifies that the shading rate should reduce horizontal resolution 2x, and reduce vertical resolution 4x.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE.D3D12_SHADING_RATE_4X2">
            <summary>Specifies that the shading rate should reduce horizontal resolution 4x, and reduce vertical resolution 2x.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE.D3D12_SHADING_RATE_4X4">
            <summary>Specifies that the shading rate should reduce the resolution of both axes 4x.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE_COMBINER">
            <summary>Defines constants that specify a shading rate combiner (for variable-rate shading, or VRS).</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_shading_rate_combiner#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE_COMBINER.D3D12_SHADING_RATE_COMBINER_PASSTHROUGH">
            <summary>Specifies the combiner `C.xy = A.xy`, for combiner (C) and inputs (A and B).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE_COMBINER.D3D12_SHADING_RATE_COMBINER_OVERRIDE">
            <summary>Specifies the combiner `C.xy = B.xy`, for combiner (C) and inputs (A and B).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE_COMBINER.D3D12_SHADING_RATE_COMBINER_MIN">
            <summary>Specifies the combiner `C.xy = max(A.xy, B.xy)`, for combiner (C) and inputs (A and B).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE_COMBINER.D3D12_SHADING_RATE_COMBINER_MAX">
            <summary>Specifies the combiner `C.xy = min(A.xy, B.xy)`, for combiner (C) and inputs (A and B).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE_COMBINER.D3D12_SHADING_RATE_COMBINER_SUM">
            <summary>Specifies the combiner C.xy = min(maxRate, A.xy + B.xy)`, for combiner (C) and inputs (A and B).</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SO_DECLARATION_ENTRY">
            <summary>Describes a vertex element in a vertex buffer in an output slot.</summary>
            <remarks>
            <para>Specify an array of <b>D3D12_SO_DECLARATION_ENTRY</b> structures in the <b>pSODeclaration</b> member of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_stream_output_desc">D3D12_STREAM_OUTPUT_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_so_declaration_entry#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SO_DECLARATION_ENTRY.Stream">
            <summary>Zero-based, stream number.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SO_DECLARATION_ENTRY.SemanticName">
            <summary>
            <para>Type of output element; possible values include: <b>"POSITION"</b>, <b>"NORMAL"</b>, or <b>"TEXCOORD0"</b>. Note that if <b>SemanticName</b> is <b>NULL</b> then <b>ComponentCount</b> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SO_DECLARATION_ENTRY.SemanticIndex">
            <summary>Output element's zero-based index. Use, for example, if you have more than one texture coordinate stored in each vertex.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SO_DECLARATION_ENTRY.StartComponent">
            <summary>
            <para>The component of the entry to begin writing out to. Valid values are 0 to 3. For example, if you only wish to output to the y and z components of a position, <b>StartComponent</b> is 1 and <b>ComponentCount</b> is 2.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SO_DECLARATION_ENTRY.ComponentCount">
            <summary>
            <para>The number of components of the entry to write out to. Valid values are 1 to 4. For example, if you only wish to output to the y and z components of a position, <b>StartComponent</b> is 1 and <b>ComponentCount</b> is 2.  Note that if <b>SemanticName</b> is <b>NULL</b> then <b>ComponentCount</b> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SO_DECLARATION_ENTRY.OutputSlot">
            <summary>
            <para>The associated stream output buffer that is bound to the pipeline. The valid range for <b>OutputSlot</b> is 0 to 3.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_so_declaration_entry#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION">
            <summary>Identifies the type of resource that will be viewed as a shader resource.</summary>
            <remarks>
            <para>These values are used by a shader-resource-view description, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_srv_dimension#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_UNKNOWN">
            <summary>The type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_BUFFER">
            <summary>The resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_TEXTURE1D">
            <summary>The resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource is an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_TEXTURE2D">
            <summary>The resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource is an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_TEXTURE2DMS">
            <summary>The resource is a multisampling 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource is an array of multisampling 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_TEXTURE3D">
            <summary>The resource is a 3D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_TEXTURECUBE">
            <summary>The resource is a cube texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_TEXTURECUBEARRAY">
            <summary>The resource is an array of cube textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SRV_DIMENSION.D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE">
            <summary>The resource is a raytracing acceleration structure.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC">
            <summary>Description of a state object. Pass this structure into ID3D12Device::CreateStateObject.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_state_object_desc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC.Type">
            <summary>The type of the state object.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC.NumSubobjects">
            <summary>Size of the <i>pSubobjects</i> array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC.pSubobjects">
            <summary>An array of subobject definitions.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_TYPE">
            <summary>Specifies the type of a state object. Use with D3D12_STATE_OBJECT_DESC.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_state_object_type">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_TYPE.D3D12_STATE_OBJECT_TYPE_COLLECTION">
            <summary>Collection state object.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_TYPE.D3D12_STATE_OBJECT_TYPE_RAYTRACING_PIPELINE">
            <summary>Raytracing pipeline state object.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT">
            <summary>Represents a subobject within a state object description. Use with [D3D12_STATE_OBJECT_DESC](/windows/win32/api/d3d12/ns-d3d12-d3d12_state_object_desc).</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_state_subobject">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT.Type">
            <summary>A [D3D12_STATE_SUBOBJECT_TYPE](/windows/win32/api/d3d12/ne-d3d12-d3d12_state_subobject_type) specifying the type of the state subobject.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT.pDesc">
            <summary>Pointer to state object description of the type specified in the *Type* parameter.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE">
            <summary>The type of a state subobject. Use with D3D12_STATE_SUBOBJECT.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_state_subobject_type">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_STATE_OBJECT_CONFIG">
            <summary>Subobject type is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_state_object_config">D3D12_STATE_OBJECT_CONFIG</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_GLOBAL_ROOT_SIGNATURE">
            <summary>Subobject type is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_global_root_signature">D3D12_GLOBAL_ROOT_SIGNATURE</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_LOCAL_ROOT_SIGNATURE">
            <summary>Subobject type is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_local_root_signature">D3D12_LOCAL_ROOT_SIGNATURE</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK">
            <summary>
            <para>Subobject type is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_node_mask">D3D12_NODE_MASK</a>. > [!IMPORTANT] > On some versions of the DirectX Runtime, specifying a node via [**D3D12_NODE_MASK**](/windows/win32/api/d3d12/ns-d3d12-d3d12_node_mask) in a [**D3D12_STATE_SUBOBJECT**](/windows/win32/api/d3d12/ns-d3d12-d3d12_state_subobject) with type **D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK**, the runtime will incorrectly handle a node mask value of `0`, which should use node #1, which will lead to errors when attempting to use the state object later. Specify an explicit node value of 1, or omit the [**D3D12_NODE_MASK**](/windows/win32/api/d3d12/ns-d3d12-d3d12_node_mask) subobject to avoid this issue.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_state_subobject_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_DXIL_LIBRARY">
            <summary>Subobject type is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_dxil_library_desc">D3D12_DXIL_LIBRARY_DESC</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_EXISTING_COLLECTION">
            <summary>Subobject type is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_existing_collection_desc">D3D12_EXISTING_COLLECTION_DESC</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_SUBOBJECT_TO_EXPORTS_ASSOCIATION">
            <summary>Subobject type is <a href="../d3d12/ns-d3d12-d3d12_subobject_to_exports_association.md">D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION">
            <summary>Subobject type is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_dxil_subobject_to_exports_association">D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_SHADER_CONFIG">
            <summary>Subobject type is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_raytracing_shader_config">D3D12_RAYTRACING_SHADER_CONFIG</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG">
            <summary>Subobject type is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_raytracing_pipeline_config">D3D12_RAYTRACING_PIPELINE_CONFIG</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_HIT_GROUP">
            <summary>Subobject type is <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_hit_group_desc">D3D12_HIT_GROUP_DESC</a></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATE_SUBOBJECT_TYPE.D3D12_STATE_SUBOBJECT_TYPE_MAX_VALID">
            <summary>The maximum valid subobject type value.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_BORDER_COLOR">
            <summary>Specifies the border color for a static sampler.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_static_sampler_desc">D3D12_STATIC_SAMPLER_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_static_border_color#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_BORDER_COLOR.D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK">
            <summary>Indicates black, with the alpha component as fully transparent.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_BORDER_COLOR.D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK">
            <summary>Indicates black, with the alpha component as fully opaque.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_BORDER_COLOR.D3D12_STATIC_BORDER_COLOR_OPAQUE_WHITE">
            <summary>Indicates white, with the alpha component as fully opaque.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC">
            <summary>Describes a static sampler.</summary>
            <remarks>
            <para>Use this structure with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_signature_desc">D3D12_ROOT_SIGNATURE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_static_sampler_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.Filter">
            <summary>The filtering method to use when sampling a texture, as a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_filter">D3D12_FILTER</a> enumeration constant.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.AddressU">
            <summary>Specifies the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_texture_address_mode">D3D12_TEXTURE_ADDRESS_MODE</a> mode to use for resolving a <i>u</i> texture coordinate that is outside the 0 to 1 range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.AddressV">
            <summary>Specifies the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_texture_address_mode">D3D12_TEXTURE_ADDRESS_MODE</a> mode to use for resolving a <i>v</i> texture coordinate that is outside the 0 to 1 range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.AddressW">
            <summary>Specifies the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_texture_address_mode">D3D12_TEXTURE_ADDRESS_MODE</a> mode to use for resolving a <i>w</i> texture coordinate that is outside the 0 to 1 range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.MipLODBias">
            <summary>Offset from the calculated mipmap level. For example, if Direct3D calculates that a texture should be sampled at mipmap level 3 and MipLODBias is 2, then the texture will be sampled at mipmap level 5.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.MaxAnisotropy">
            <summary>Clamping value used if D3D12_FILTER_ANISOTROPIC or D3D12_FILTER_COMPARISON_ANISOTROPIC is specified as the filter. Valid values are between 1 and 16.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.ComparisonFunc">
            <summary>
            <para>A function that compares sampled data against existing sampled data. The function options are listed in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_comparison_func">D3D12_COMPARISON_FUNC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_static_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.BorderColor">
            <summary>
            <para>One member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_static_border_color">D3D12_STATIC_BORDER_COLOR</a>, the border color to use if D3D12_TEXTURE_ADDRESS_MODE_BORDER is specified for AddressU, AddressV, or AddressW. Range must be between 0.0 and 1.0 inclusive.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_static_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.MinLOD">
            <summary>Lower end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.MaxLOD">
            <summary>Upper end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed. This value must be greater than or equal to MinLOD. To have no upper limit on LOD set this to a large value such as D3D12_FLOAT32_MAX.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.ShaderRegister">
            <summary>
            <para>The <i>ShaderRegister</i> and <i>RegisterSpace</i> parameters correspond to the binding syntax of HLSL.  For example, in HLSL:</para>
            <para><pre class="syntax" xml:space="preserve"><c>Texture2D&lt;float4&gt; a : register(t2, space3);</c></pre> This corresponds to a  <i>ShaderRegister</i> of 2 (indicating the type is SRV), and <i>RegisterSpace</i> is 3.</para>
            <para>The  <i>ShaderRegister</i> and <i>RegisterSpace</i> pair is needed to establish correspondence between shader resources and runtime heap descriptors, using the root signature data structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_static_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.RegisterSpace">
            <summary>
            <para>See the description for <i>ShaderRegister</i>. Register space is optional; the default register space is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_static_sampler_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STATIC_SAMPLER_DESC.ShaderVisibility">
            <summary>Specifies the visibility of the sampler to the pipeline shaders, one member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_shader_visibility">D3D12_SHADER_VISIBILITY</a>.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_STENCIL_OP">
            <summary>Identifies the stencil operations that can be performed during depth-stencil testing.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencilop_desc">D3D12_DEPTH_STENCILOP_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_stencil_op#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STENCIL_OP.D3D12_STENCIL_OP_KEEP">
            <summary>Keep the existing stencil data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STENCIL_OP.D3D12_STENCIL_OP_ZERO">
            <summary>Set the stencil data to 0.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STENCIL_OP.D3D12_STENCIL_OP_REPLACE">
            <summary>Set the stencil data to the reference value set by calling <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-omsetstencilref">ID3D12GraphicsCommandList::OMSetStencilRef</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STENCIL_OP.D3D12_STENCIL_OP_INCR_SAT">
            <summary>Increment the stencil value by 1, and clamp the result.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STENCIL_OP.D3D12_STENCIL_OP_DECR_SAT">
            <summary>Decrement the stencil value by 1, and clamp the result.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STENCIL_OP.D3D12_STENCIL_OP_INVERT">
            <summary>Invert the stencil data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STENCIL_OP.D3D12_STENCIL_OP_INCR">
            <summary>Increment the stencil value by 1, and wrap the result if necessary.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STENCIL_OP.D3D12_STENCIL_OP_DECR">
            <summary>Decrement the stencil value by 1, and wrap the result if necessary.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW">
            <summary>Describes a stream output buffer.</summary>
            <remarks>
            <para>Use this structure with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-sosettargets">SOSetTargets</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_stream_output_buffer_view#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW.BufferLocation">
            <summary>
            <para>A D3D12_GPU_VIRTUAL_ADDRESS (a UINT64) that points to the stream output buffer. If <b>SizeInBytes</b> is 0, this member isn't used and can be any value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_stream_output_buffer_view#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW.SizeInBytes">
            <summary>The size of the stream output buffer in bytes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW.BufferFilledSizeLocation">
            <summary>
            <para>The location of the value of how much data has been filled into the buffer, as a D3D12_GPU_VIRTUAL_ADDRESS (a UINT64). This member can't be NULL; a filled size location must be supplied (which the hardware will increment as data is output). If <b>SizeInBytes</b> is 0, this member isn't used and can be any value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_stream_output_buffer_view#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_DESC">
            <summary>Describes a streaming output buffer.</summary>
            <remarks>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a> object contains a <b>D3D12_STREAM_OUTPUT_DESC</b> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_stream_output_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_DESC.pSODeclaration">
            <summary>An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_so_declaration_entry">D3D12_SO_DECLARATION_ENTRY</a> structures. Can't be <b>NULL</b> if <b>NumEntries</b> &gt; 0.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_DESC.NumEntries">
            <summary>The number of entries in the stream output declaration array that the <b>pSODeclaration</b> member points to.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_DESC.pBufferStrides">
            <summary>An array of buffer strides; each stride is the size of an element for that buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_DESC.NumStrides">
            <summary>The number of strides (or buffers) that the <b>pBufferStrides</b> member points to.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_DESC.RasterizedStream">
            <summary>The index number of the stream to be sent to the rasterizer stage.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_FOOTPRINT">
            <summary>Describes the format, width, height, depth, and row-pitch of the subresource into the parent resource.</summary>
            <remarks>
            <para>Use this structure in the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_placed_subresource_footprint">D3D12_PLACED_SUBRESOURCE_FOOTPRINT</a> structure.</para>
            <para>The helper structure is <a href="https://docs.microsoft.com/windows/desktop/direct3d12/cd3dx12-subresource-footprint">CD3DX12_SUBRESOURCE_FOOTPRINT</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_subresource_footprint#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_FOOTPRINT.Format">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value that  specifies the viewing format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_FOOTPRINT.Width">
            <summary>The width of the subresource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_FOOTPRINT.Height">
            <summary>The height of the subresource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_FOOTPRINT.Depth">
            <summary>The depth of the subresource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_FOOTPRINT.RowPitch">
            <summary>
            <para>The row pitch, or width, or physical size, in bytes, of the subresource data. This must be a multiple of D3D12_TEXTURE_DATA_PITCH_ALIGNMENT (256), and must be greater than or equal to the size of the data within a row.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_subresource_footprint#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64">
            <summary>Describes a subresource memory range.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint">AtomicCopyBufferUINT</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint64">AtomicCopyBufferUINT64</a> methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_subresource_range_uint64#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64.Subresource">
            <summary>The index of the subresource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64.Range">
            <summary>A memory range within the subresource.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_TILING">
            <summary>Describes a tiled subresource volume.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-getresourcetiling">GetResourceTiling</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_subresource_tiling#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_TILING.WidthInTiles">
            <summary>The width in tiles of the subresource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_TILING.HeightInTiles">
            <summary>The height in tiles of the subresource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_TILING.DepthInTiles">
            <summary>The depth in tiles of the subresource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_TILING.StartTileIndexInOverallResource">
            <summary>The index of the tile in the overall tiled subresource to start with.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_DSV">
            <summary>Describes the subresources from an array of 1D textures to use in a depth-stencil view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_view_desc">D3D12_DEPTH_STENCIL_VIEW_DESC</a> structure to view the resource as an array of 1D textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex1d_array_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_DSV.MipSlice">
            <summary>The index of the first mipmap level to use.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_DSV.FirstArraySlice">
            <summary>The index of the first texture to use in an array of textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_DSV.ArraySize">
            <summary>Number of textures to use.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_RTV">
            <summary>Describes the subresources from an array of 1D textures to use in a render-target view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_view_desc">D3D12_RENDER_TARGET_VIEW_DESC</a> structure to view the resource as an array of 1D textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex1d_array_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_RTV.MipSlice">
            <summary>The index of the mipmap level to use mip slice.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_RTV.FirstArraySlice">
            <summary>The index of the first texture to use in an array of textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_RTV.ArraySize">
            <summary>Number of textures to use.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_SRV">
            <summary>Describes the subresources from an array of 1D textures to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex1d_array_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_SRV.MostDetailedMip">
            <summary>Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture1D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> creates a view) -1.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_SRV.MipLevels">
            <summary>
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tex1d_srv">D3D12_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex1d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_SRV.FirstArraySlice">
            <summary>The index of the first texture to use in an array of textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_SRV.ArraySize">
            <summary>Number of textures in the array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_SRV.ResourceMinLODClamp">
            <summary>A value to clamp sample LOD values to. For example, if you specify 2.0f for the clamp value, you ensure that no individual sample accesses a mip level less than 2.0f.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_UAV">
            <summary>Describes an array of unordered-access 1D texture resources.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_unordered_access_view_desc">D3D12_UNORDERED_ACCESS_VIEW_DESC</a> structure to view the resource as an array of 1D textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex1d_array_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_UAV.MipSlice">
            <summary>The mipmap slice index.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_UAV.FirstArraySlice">
            <summary>The zero-based index of the first array slice to be accessed.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_ARRAY_UAV.ArraySize">
            <summary>The number of slices in the array.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_DSV">
            <summary>Describes the subresource from a 1D texture that is accessible to a depth-stencil view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_view_desc">D3D12_DEPTH_STENCIL_VIEW_DESC</a> structure to view the resource as a 1D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex1d_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_DSV.MipSlice">
            <summary>The index of the first mipmap level to use.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_RTV">
            <summary>Describes the subresource from a 1D texture to use in a render-target view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_view_desc">D3D12_RENDER_TARGET_VIEW_DESC</a> structure to view the resource as a 1D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex1d_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_RTV.MipSlice">
            <summary>The index of the mipmap level to use mip slice.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_SRV">
            <summary>Specifies the subresource from a 1D texture to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a>. As an example, assuming <b>MostDetailedMip</b> = 6 and <b>MipLevels</b> = 2, the view will have access to 2 mipmap levels, 6 and 7, of the original texture for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> creates the view. In this situation, <b>MostDetailedMip</b> is greater than the <b>MipLevels</b> in the view. However, <b>MostDetailedMip</b> is not greater than the <b>MipLevels</b> in the original resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex1d_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_SRV.MostDetailedMip">
            <summary>Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture1D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> creates a view) -1.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_SRV.MipLevels">
            <summary>
            <para>The maximum number of mipmap levels for the view  of the texture. See the remarks. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex1d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_SRV.ResourceMinLODClamp">
            <summary>A value to clamp sample LOD values to. For example, if you specify 2.0f for the clamp value, you ensure that no individual sample accesses a mip level less than 2.0f.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_UAV">
            <summary>Describes a unordered-access 1D texture resource.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_unordered_access_view_desc">D3D12_UNORDERED_ACCESS_VIEW_DESC</a> structure to view the resource as a 1D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex1d_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX1D_UAV.MipSlice">
            <summary>The mipmap slice index.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_ARRAY_DSV">
            <summary>Describes the subresources from an array of multi sampled 2D textures for a depth-stencil view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_view_desc">D3D12_DEPTH_STENCIL_VIEW_DESC</a> structure to view the resource as an array of multi sampled 2D textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2dms_array_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_ARRAY_DSV.FirstArraySlice">
            <summary>The index of the first texture to use in an array of textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_ARRAY_DSV.ArraySize">
            <summary>Number of textures to use.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_ARRAY_RTV">
            <summary>Describes the subresources from an array of multi sampled 2D textures to use in a render-target view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_view_desc">D3D12_RENDER_TARGET_VIEW_DESC</a> structure to view the resource as an array of multi sampled 2D textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2dms_array_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_ARRAY_RTV.FirstArraySlice">
            <summary>The index of the first texture to use in an array of textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_ARRAY_RTV.ArraySize">
            <summary>The number of textures to use.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_ARRAY_SRV">
            <summary>Describes the subresources from an array of multi sampled 2D textures to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2dms_array_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_ARRAY_SRV.FirstArraySlice">
            <summary>The index of the first texture to use in an array of textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_ARRAY_SRV.ArraySize">
            <summary>Number of textures to use.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_DSV">
            <summary>Describes the subresource from a multi sampled 2D texture that is accessible to a depth-stencil view.</summary>
            <remarks>
            <para>This structure is a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_view_desc">D3D12_DEPTH_STENCIL_VIEW_DESC</a> structure. Because a multi sampled 2D texture contains a single subresource, there is nothing to specify in <b>D3D12_TEX2DMS_DSV</b>. Consequently, <b>UnusedField_NothingToDefine</b> is included so that this structure will compile in C.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2dms_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_DSV.UnusedField_NothingToDefine">
            <summary>Unused.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_RTV">
            <summary>Describes the subresource from a multi sampled 2D texture to use in a render-target view.</summary>
            <remarks>
            <para>This structure is a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_view_desc">D3D12_RENDER_TARGET_VIEW_DESC</a> structure. Because a multi sampled 2D texture contains a single subresource, there is actually nothing to specify in <b>D3D12_TEX2DMS_RTV</b>. Consequently, <b>UnusedField_NothingToDefine</b> is included so that this structure will compile in C.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2dms_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_RTV.UnusedField_NothingToDefine">
            <summary>Integer of any value. See remarks.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_SRV">
            <summary>Describes the subresources from a multi sampled 2D texture to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is a member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a> structure. Since a multi sampled 2D texture contains a single subresource, there is actually nothing to specify in <b>D3D12_TEX2DMS_SRV</b>. Consequently, <b>UnusedField_NothingToDefine</b> is included so that this structure will compile in C.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2dms_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2DMS_SRV.UnusedField_NothingToDefine">
            <summary>Integer of any value. See remarks.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_DSV">
            <summary>Describes the subresources from an array of 2D textures that are accessible to a depth-stencil view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_view_desc">D3D12_DEPTH_STENCIL_VIEW_DESC</a> structure to view the resource as an array of 2D textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2d_array_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_DSV.MipSlice">
            <summary>The index of the first mipmap level to use.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_DSV.FirstArraySlice">
            <summary>The index of the first texture to use in an array of textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_DSV.ArraySize">
            <summary>Number of textures to use.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_RTV">
            <summary>Describes the subresources from an array of 2D textures to use in a render-target view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_view_desc">D3D12_RENDER_TARGET_VIEW_DESC</a> structure to view the resource as an array of 2D textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2d_array_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_RTV.MipSlice">
            <summary>The index of the mipmap level to use mip slice.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_RTV.FirstArraySlice">
            <summary>The index of the first texture to use in an array of textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_RTV.ArraySize">
            <summary>Number of textures in the array to use in the render target view, starting from <b>FirstArraySlice</b>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_RTV.PlaneSlice">
            <summary>The index (plane slice number) of the plane to use in an array of textures.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_SRV">
            <summary>Describes the subresources from an array of 2D textures to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2d_array_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_SRV.MostDetailedMip">
            <summary>Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> -1 (where <b>MipLevels</b> is from the original Texture2D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> creates a view).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_SRV.MipLevels">
            <summary>
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tex1d_srv">D3D12_TEX1D_SRV</a>.</para>
            <para>Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2d_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_SRV.FirstArraySlice">
            <summary>The index of the first texture to use in an array of textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_SRV.ArraySize">
            <summary>Number of textures in the array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_SRV.PlaneSlice">
            <summary>The index (plane slice number) of the plane to use in an array of textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_SRV.ResourceMinLODClamp">
            <summary>A value to clamp sample LOD values to. For example, if you specify 2.0f for the clamp value, you ensure that no individual sample accesses a mip level less than 2.0f.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_UAV">
            <summary>Describes an array of unordered-access 2D texture resources.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_unordered_access_view_desc">D3D12_UNORDERED_ACCESS_VIEW_DESC</a> structure to view the resource as an array of 2D textures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2d_array_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_UAV.MipSlice">
            <summary>The mipmap slice index.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_UAV.FirstArraySlice">
            <summary>The zero-based index of the first array slice to be accessed.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_UAV.ArraySize">
            <summary>The number of slices in the array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_ARRAY_UAV.PlaneSlice">
            <summary>The index (plane slice number) of the plane to use in an array of textures.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_DSV">
            <summary>Describes the subresource from a 2D texture that is accessible to a depth-stencil view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_view_desc">D3D12_DEPTH_STENCIL_VIEW_DESC</a> structure to view the resource as a 2D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2d_dsv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_DSV.MipSlice">
            <summary>The index of the first mipmap level to use.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_RTV">
            <summary>Describes the subresource from a 2D texture to use in a render-target view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_view_desc">D3D12_RENDER_TARGET_VIEW_DESC</a> structure to view the resource as a 2D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2d_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_RTV.MipSlice">
            <summary>The index of the mipmap level to use.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_RTV.PlaneSlice">
            <summary>The index (plane slice number) of the plane to use in the texture.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_SRV">
            <summary>Describes the subresource from a 2D texture to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2d_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_SRV.MostDetailedMip">
            <summary>Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture2D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> creates a view) -1.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_SRV.MipLevels">
            <summary>
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tex1d_srv">D3D12_TEX1D_SRV</a>.</para>
            <para>Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_SRV.PlaneSlice">
            <summary>The index (plane slice number) of the plane to use in the texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_SRV.ResourceMinLODClamp">
            <summary>A value to clamp sample LOD values to. For example, if you specify 2.0f for the clamp value, you ensure that no individual sample accesses a mip level less than 2.0f.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_UAV">
            <summary>Describes a unordered-access 2D texture resource.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_unordered_access_view_desc">D3D12_UNORDERED_ACCESS_VIEW_DESC</a> structure to view the resource as a 2D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex2d_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_UAV.MipSlice">
            <summary>The mipmap slice index.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX2D_UAV.PlaneSlice">
            <summary>The index (plane slice number) of the plane to use in the texture.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_RTV">
            <summary>Describes the subresources from a 3D texture to use in a render-target view.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_view_desc">D3D12_RENDER_TARGET_VIEW_DESC</a> structure to view the resource as a 3D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex3d_rtv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_RTV.MipSlice">
            <summary>The index of the mipmap level to use mip slice.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_RTV.FirstWSlice">
            <summary>First depth level to use.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_RTV.WSize">
            <summary>Number of depth levels to use in the render-target view, starting from <b>FirstWSlice</b>. A value of -1 indicates all of the slices along the w axis, starting from <b>FirstWSlice</b>.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_SRV">
            <summary>Describes the subresources from a 3D texture to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex3d_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_SRV.MostDetailedMip">
            <summary>Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original Texture3D for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> creates a view) -1.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_SRV.MipLevels">
            <summary>
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tex1d_srv">D3D12_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex3d_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_SRV.ResourceMinLODClamp">
            <summary>A value to clamp sample LOD values to. For example, if you specify 2.0f for the clamp value, you ensure that no individual sample accesses a mip level less than 2.0f.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_UAV">
            <summary>Describes a unordered-access 3D texture resource.</summary>
            <remarks>
            <para>Use this structure with a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_unordered_access_view_desc">D3D12_UNORDERED_ACCESS_VIEW_DESC</a> structure to view the resource as a 3D texture.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tex3d_uav#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_UAV.MipSlice">
            <summary>The mipmap slice index.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_UAV.FirstWSlice">
            <summary>The zero-based index of the first depth slice to be accessed.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEX3D_UAV.WSize">
            <summary>The number of depth slices.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEXCUBE_ARRAY_SRV">
            <summary>Describes the subresources from an array of cube textures to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_texcube_array_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXCUBE_ARRAY_SRV.MostDetailedMip">
            <summary>Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original TextureCube for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> creates a view) -1.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXCUBE_ARRAY_SRV.MipLevels">
            <summary>
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tex1d_srv">D3D12_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_texcube_array_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXCUBE_ARRAY_SRV.First2DArrayFace">
            <summary>Index of the first 2D texture to use.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXCUBE_ARRAY_SRV.NumCubes">
            <summary>Number of cube textures in the array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXCUBE_ARRAY_SRV.ResourceMinLODClamp">
            <summary>A value to clamp sample LOD values to. For example, if you specify 2.0f for the clamp value, you ensure that no individual sample accesses a mip level less than 2.0f.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEXCUBE_SRV">
            <summary>Describes the subresource from a cube texture to use in a shader-resource view.</summary>
            <remarks>
            <para>This structure is one member of a shader-resource-view description, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_texcube_srv#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXCUBE_SRV.MostDetailedMip">
            <summary>Index of the most detailed mipmap level to use; this number is between 0 and <b>MipLevels</b> (from the original TextureCube for which <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> creates a view) -1.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXCUBE_SRV.MipLevels">
            <summary>
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tex1d_srv">D3D12_TEX1D_SRV</a>. Set to -1 to indicate all the mipmap levels from <b>MostDetailedMip</b> on down to least detailed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_texcube_srv#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXCUBE_SRV.ResourceMinLODClamp">
            <summary>A value to clamp sample LOD values to. For example, if you specify 2.0f for the clamp value, you ensure that no individual sample accesses a mip level less than 2.0f.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_ADDRESS_MODE">
            <summary>Identifies a technique for resolving texture coordinates that are outside of the boundaries of a texture.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_sampler_desc">D3D12_SAMPLER_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_texture_address_mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_ADDRESS_MODE.D3D12_TEXTURE_ADDRESS_MODE_WRAP">
            <summary>
            <para>Tile the texture at every (u,v) integer junction. For example, for u values between 0 and 3, the texture is repeated three times.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_texture_address_mode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_ADDRESS_MODE.D3D12_TEXTURE_ADDRESS_MODE_MIRROR">
            <summary>
            <para>Flip the texture at every (u,v) integer junction. For u values between 0 and 1, for example, the texture is addressed normally; between 1 and 2, the texture is flipped (mirrored); between 2 and 3, the texture is normal again; and so on.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_texture_address_mode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_ADDRESS_MODE.D3D12_TEXTURE_ADDRESS_MODE_CLAMP">
            <summary>Texture coordinates outside the range [0.0, 1.0] are set to the texture color at 0.0 or 1.0, respectively.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_ADDRESS_MODE.D3D12_TEXTURE_ADDRESS_MODE_BORDER">
            <summary>Texture coordinates outside the range [0.0, 1.0] are set to the border color specified in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_sampler_desc">D3D12_SAMPLER_DESC</a> or HLSL code.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_ADDRESS_MODE.D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE">
            <summary>
            <para>Similar to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_texture_address_mode">D3D12_TEXTURE_ADDRESS_MODE_MIRROR</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_texture_address_mode">D3D12_TEXTURE_ADDRESS_MODE_CLAMP</a>. Takes the absolute value of the texture coordinate (thus, mirroring around 0), and then clamps to the maximum value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_texture_address_mode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION">
            <summary>Describes a portion of a texture for the purpose of texture copies.</summary>
            <remarks>
            <para>Use this structure with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-copytextureregion">CopyTextureRegion</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_texture_copy_location#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION.pResource">
            <summary>Specifies the resource which will be used for the copy operation.<div> </div>When <b>Type</b> is D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT, <b>pResource</b> must point to a buffer resource.<div> </div>When <b>Type</b> is D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX, <b>pResource</b> must point to a texture resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION.Type">
            <summary>
            <para>Specifies which type of resource location this is: a subresource of a texture, or a description of a texture layout which can be applied to a buffer. This <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_texture_copy_type">D3D12_TEXTURE_COPY_TYPE</a> enum indicates which union member to use.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_texture_copy_location#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_TYPE">
            <summary>Specifies what type of texture copy is to take place.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_texture_copy_location">D3D12_TEXTURE_COPY_LOCATION</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_texture_copy_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_TYPE.D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX">
            <summary>Indicates a subresource, identified by an index, is to be copied.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_TYPE.D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT">
            <summary>Indicates a place footprint, identified by a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_placed_subresource_footprint">D3D12_PLACED_SUBRESOURCE_FOOTPRINT</a> structure, is to be copied.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_LAYOUT">
            <summary>Specifies texture layout options.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_resource_desc">D3D12_RESOURCE_DESC</a> structure.</para>
            <para>This enumeration controls the swizzle pattern of default textures and enable map support on default textures. Callers must query <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_d3d12_options">D3D12_FEATURE_DATA_D3D12_OPTIONS</a> to ensure that each option is supported.</para>
            <para>The standard swizzle formats applies within each page-sized chunk, and pages are laid out in linear order with respect to one another. A 16-bit interleave pattern defines the conversion from pre-swizzled intra-page location to the post-swizzled location.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_texture_layout#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_LAYOUT.D3D12_TEXTURE_LAYOUT_UNKNOWN">
            <summary>
            <para>Indicates that the layout is unknown, and is likely adapter-dependent. During creation, the driver chooses the most efficient layout based on other resource properties, especially resource size and flags. Prefer this choice unless certain functionality is required from another texture layout.</para>
            <para>Zero-copy texture upload optimizations exist for UMA architectures; see <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12resource-writetosubresource">ID3D12Resource::WriteToSubresource</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_texture_layout#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_LAYOUT.D3D12_TEXTURE_LAYOUT_ROW_MAJOR">
            <summary>
            <para>Indicates that data for the texture is stored in row-major order (sometimes called "pitch-linear order").</para>
            <para>This texture layout locates consecutive texels of a row contiguously in memory, before the texels of the next row. Similarly, consecutive texels of a particular depth or array slice are contiguous in memory before the texels of the next depth or array slice. Padding may exist between rows and between depth or array slices to align collections of data. A stride is the distance in memory between rows, depth, or array slices; and it includes any padding.</para>
            <para>This texture layout enables sharing of the texture data between multiple adapters, when other layouts aren't available.</para>
            <para>Many restrictions apply, because this layout is generally not efficient for extensive usage:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_texture_layout#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_LAYOUT.D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE">
            <summary>
            <para>Indicates that the layout within 64KB tiles and tail mip packing is up to the driver. No standard swizzle pattern.</para>
            <para>This texture layout is arranged into contiguous 64KB regions, also known as tiles, containing near equilateral amount of consecutive number of texels along each dimension. Tiles are arranged in row-major order. While there is no padding between tiles, there are typically unused texels within the last tile in each dimension. The layout of texels within the tile is undefined. Each subresource immediately follows where the previous subresource end, and the subresource order follows the same sequence as subresource ordinals. However, tail mip packing is adapter-specific. For more details, see tiled resource tier and <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12device-getresourcetiling">ID3D12Device::GetResourceTiling</a>.</para>
            <para>This texture layout enables partially resident or sparse texture scenarios when used together with virtual memory page mapping functionality. This texture layout must be used together with <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12device-createreservedresource">ID3D12Device::CreateReservedResource</a>to enable the usage of <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12commandqueue-updatetilemappings">ID3D12CommandQueue::UpdateTileMappings</a>.</para>
            <para>Some restrictions apply to textures with this layout:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_texture_layout#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_LAYOUT.D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE">
            <summary>
            <para>Indicates that a default texture uses the standardized swizzle pattern.</para>
            <para>This texture layout is arranged the same way that D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE is, except that the layout of texels within the tile is defined. Tail mip packing is adapter-specific.</para>
            <para>This texture layout enables optimizations when marshaling data between multiple adapters or between the CPU and GPU. The amount of copying can be reduced when multiple components understand the texture memory layout. This layout is generally more efficient for extensive usage than row-major layout, due to the rotationally invariant locality of neighboring texels. This layout can typically only be used with adapters that support standard swizzle, but exceptions exist for cross-adapter shared heaps.</para>
            <para>The restrictions for this layout are that the following aren't supported:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_texture_layout#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE">
            <summary>Describes the coordinates of a tiled resource.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles">CopyTiles</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-copytilemappings">CopyTileMappings</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-updatetilemappings">UpdateTileMappings</a> methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tiled_resource_coordinate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE.X">
            <summary>The x-coordinate of the tiled resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE.Y">
            <summary>The y-coordinate of the tiled resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE.Z">
            <summary>The z-coordinate of the tiled resource.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE.Subresource">
            <summary>
            <para>The index of the subresource for the tiled resource. For mipmaps that use nonstandard tiling, or are packed, or both use nonstandard tiling and are packed, any subresource value that indicates any of the packed mipmaps all refer to the same tile. Additionally, the X coordinate is used to indicate a tile within the packed mip region, rather than a logical region of a single subresource. The Y and Z coordinates must be zero.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tiled_resource_coordinate#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS">
            <summary>Specifies how to copy a tile.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles">CopyTiles</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_tile_copy_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS.D3D12_TILE_COPY_FLAG_NONE">
            <summary>No tile-copy flags are specified.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS.D3D12_TILE_COPY_FLAG_NO_HAZARD">
            <summary>
            <para>Indicates that the GPU isn't currently referencing any of the portions of destination memory being written.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_tile_copy_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS.D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE">
            <summary>
            <para>Indicates that the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles">ID3D12GraphicsCommandList::CopyTiles</a> operation involves copying a linear buffer to a swizzled tiled resource. This means to copy tile data from the specified buffer location, reading tiles sequentially, to the specified tile region (in x,y,z order if the region is a box), swizzling to optimal hardware memory layout as needed. In this <b>ID3D12GraphicsCommandList::CopyTiles</b> call, you specify the source data with the  <i>pBuffer</i> parameter and the destination with the <i>pTiledResource</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_tile_copy_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS.D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER">
            <summary>
            <para>Indicates that the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles">ID3D12GraphicsCommandList::CopyTiles</a> operation involves copying a swizzled tiled resource to a linear buffer. This means to copy tile data from the tile region, reading tiles sequentially (in x,y,z order if the region is a box), to the specified buffer location, deswizzling to linear memory layout as needed. In this <b>ID3D12GraphicsCommandList::CopyTiles</b> call, you specify the source data with the <i>pTiledResource</i> parameter and the destination with the  <i>pBuffer</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_tile_copy_flags#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_MAPPING_FLAGS">
            <summary>Specifies how to perform a tile-mapping operation.</summary>
            <remarks>
            <para>This enum is used by the following methods: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_tile_mapping_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_MAPPING_FLAGS.D3D12_TILE_MAPPING_FLAG_NONE">
            <summary>No tile-mapping flags are specified.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_MAPPING_FLAGS.D3D12_TILE_MAPPING_FLAG_NO_HAZARD">
            <summary>Unsupported, do not use.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_RANGE_FLAGS">
            <summary>Specifies a range of tile mappings.</summary>
            <remarks>
            <para>Use these flags with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-updatetilemappings">ID3D12CommandQueue::UpdateTileMappings</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_tile_range_flags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_RANGE_FLAGS.D3D12_TILE_RANGE_FLAG_NONE">
            <summary>No tile-mapping flags are specified.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_RANGE_FLAGS.D3D12_TILE_RANGE_FLAG_NULL">
            <summary>The tile range is <b>NULL</b>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_RANGE_FLAGS.D3D12_TILE_RANGE_FLAG_SKIP">
            <summary>Skip the tile range.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_RANGE_FLAGS.D3D12_TILE_RANGE_FLAG_REUSE_SINGLE_TILE">
            <summary>Reuse a single tile in the tile range.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE">
            <summary>Describes the size of a tiled region.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles">CopyTiles</a>, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-copytilemappings">CopyTileMappings</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-updatetilemappings">UpdateTileMappings</a> methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tile_region_size#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE.NumTiles">
            <summary>The number of tiles in the tiled region.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE.UseBox">
            <summary>
            <para>Specifies whether the runtime uses the <b>Width</b>, <b>Height</b>, and <b>Depth</b> members to define the region.</para>
            <para>If <b>TRUE</b>, the runtime uses the <b>Width</b>, <b>Height</b>, and <b>Depth</b> members to define the region. In this case,  <b>NumTiles</b> should be equal to <b>Width</b> *  <b>Height</b> * <b>Depth</b>. If <b>FALSE</b>, the runtime ignores the <b>Width</b>, <b>Height</b>, and <b>Depth</b> members and uses the <b>NumTiles</b> member to traverse tiles in the resource linearly across x, then y, then z (as applicable) and then spills over mipmaps/arrays in subresource order.  For example, use this technique to map an entire resource at once.</para>
            <para>Regardless of whether you specify <b>TRUE</b> or <b>FALSE</b> for <b>UseBox</b>, you use a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tiled_resource_coordinate">D3D12_TILED_RESOURCE_COORDINATE</a> structure to specify the starting location for the region within the resource as a separate parameter outside of this structure by using x, y, and z coordinates.</para>
            <para>When the region includes mipmaps that are packed with nonstandard tiling, <b>UseBox</b> must be <b>FALSE</b> because tile dimensions are not standard and the app only knows a count of how many tiles are consumed by the packed area, which is per array slice.  The corresponding (separate) starting location parameter uses x to offset into the flat range of tiles in this case, and y and z coordinates must each be 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tile_region_size#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE.Width">
            <summary>The width of the tiled region, in tiles. Used for buffer and 1D, 2D, and 3D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE.Height">
            <summary>The height of the tiled region, in tiles. Used for 2D and 3D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE.Depth">
            <summary>The depth of the tiled region, in tiles. Used for 3D textures or arrays. For arrays, used for advancing in depth jumps to next slice of same mipmap size, which isn't contiguous in the subresource counting space if there are multiple mipmaps.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_SHAPE">
            <summary>Describes the shape of a tile by specifying its dimensions.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-getresourcetiling">GetResourceTiling</a>     method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_tile_shape#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_SHAPE.WidthInTexels">
            <summary>The width in texels of the tile.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_SHAPE.HeightInTexels">
            <summary>The height in texels of the tile.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_TILE_SHAPE.DepthInTexels">
            <summary>The depth in texels of the tile.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_UAV_DIMENSION">
            <summary>Identifies unordered-access view options.</summary>
            <remarks>
            <para>Specify one of the values in this enumeration in the <b>ViewDimension</b> member of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_unordered_access_view_desc">D3D12_UNORDERED_ACCESS_VIEW_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_uav_dimension#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_UAV_DIMENSION.D3D12_UAV_DIMENSION_UNKNOWN">
            <summary>The view type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_UAV_DIMENSION.D3D12_UAV_DIMENSION_BUFFER">
            <summary>View the resource as a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_UAV_DIMENSION.D3D12_UAV_DIMENSION_TEXTURE1D">
            <summary>View the resource as a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_UAV_DIMENSION.D3D12_UAV_DIMENSION_TEXTURE1DARRAY">
            <summary>View the resource as a 1D texture array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_UAV_DIMENSION.D3D12_UAV_DIMENSION_TEXTURE2D">
            <summary>View the resource as a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_UAV_DIMENSION.D3D12_UAV_DIMENSION_TEXTURE2DARRAY">
            <summary>View the resource as a 2D texture array.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_UAV_DIMENSION.D3D12_UAV_DIMENSION_TEXTURE3D">
            <summary>View the resource as a 3D texture array.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC">
            <summary>Describes the subresources from a resource that are accessible by using an unordered-access view.</summary>
            <remarks>
            <para>Pass an unordered-access-view description into <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createunorderedaccessview">ID3D12Device::CreateUnorderedAccessView</a> to create a view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_unordered_access_view_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC.Format">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value that specifies the viewing format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC.ViewDimension">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_uav_dimension">D3D12_UAV_DIMENSION</a>-typed value that specifies the resource type of the view. This type specifies how the resource will be accessed. This member also determines which _UAV to use in the union below.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_VERSIONED_ROOT_SIGNATURE_DESC">
            <summary>Holds any version of a root signature description, and is designed to be used with serialization/deserialization functions.</summary>
            <remarks>
            <para>Use this structure with the following methods. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_versioned_root_signature_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_VERSIONED_ROOT_SIGNATURE_DESC.Version">
            <summary>Specifies one member of D3D_ROOT_SIGNATURE_VERSION that determines the contents of the union.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW">
            <summary>Describes a vertex buffer view.</summary>
            <remarks>
            <para>Use this structure with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-iasetvertexbuffers">IASetVertexBuffers</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_vertex_buffer_view#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW.BufferLocation">
            <summary>Specifies a D3D12_GPU_VIRTUAL_ADDRESS that identifies the address of the buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW.SizeInBytes">
            <summary>Specifies the size in bytes of the buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW.StrideInBytes">
            <summary>Specifies the size in bytes of each vertex entry.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE">
            <summary>Specifies the mode used by a WriteBufferImmediate operation.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d12_writebufferimmediate_mode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE.D3D12_WRITEBUFFERIMMEDIATE_MODE_DEFAULT">
            <summary>The write operation behaves the same as normal copy-write operations.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE.D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_IN">
            <summary>The write operation is guaranteed to occur after all preceding commands in the command stream have started, including previous <b>WriteBufferImmediate</b> operations.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE.D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_OUT">
            <summary>The write operation is deferred until all previous commands in the command stream have completed through the GPU pipeline, including previous <b>WriteBufferImmediate</b> operations. Write operations that specify <b>D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_OUT</b> don't block subsequent operations from starting. If there are no previous operations in the command stream, then the write operation behaves as if <b>D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_IN</b> was specified.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER">
            <summary>Specifies the immediate value and destination address written using ID3D12CommandList2::WriteBufferImmediate.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ns-d3d12-d3d12_writebufferimmediate_parameter#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER.Dest">
            <summary>The GPU virtual address at which to write the value. The address must be aligned to a 32-bit (4-byte) boundary.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER.Value">
            <summary>The 32-bit value to write.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D12.D3D_ROOT_SIGNATURE_VERSION">
            <summary>Specifies the version of root signature layout.</summary>
            <remarks>
            <para>This enum is used by the following structures and methods. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/ne-d3d12-d3d_root_signature_version#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D_ROOT_SIGNATURE_VERSION.D3D_ROOT_SIGNATURE_VERSION_1">
            <summary>Version one of root signature layout.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D_ROOT_SIGNATURE_VERSION.D3D_ROOT_SIGNATURE_VERSION_1_0">
            <summary>Version one of root signature layout.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D12.D3D_ROOT_SIGNATURE_VERSION.D3D_ROOT_SIGNATURE_VERSION_1_1">
            <summary>Version 1.1  of root signature layout. Refer to <a href="https://docs.microsoft.com/windows/desktop/direct3d12/root-signature-version-1-1">Root Signature Version 1.1</a>.</summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator.Reset">
            <summary>Indicates to re-use the memory that is associated with the command allocator.</summary>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>E_FAIL</b> if there is an actively recording command list referencing the command allocator.  The debug layer will also issue an error in this case. See <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandallocator-reset">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandList.GetType">
            <summary>Gets the type of the command list, such as direct, bundle, compute, or copy.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/api/d3d12/ne-d3d12-d3d12_command_list_type">D3D12_COMMAND_LIST_TYPE</a></b> This method returns the type of the command list, as a <a href="/windows/desktop/api/d3d12/ne-d3d12-d3d12_command_list_type">D3D12_COMMAND_LIST_TYPE</a> enumeration constant, such as direct, bundle, compute, or copy.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandlist-gettype">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.UpdateTileMappings(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE*,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_RANGE_FLAGS*,System.UInt32*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_MAPPING_FLAGS)">
            <summary>Updates mappings of tile locations in reserved resources to memory locations in a resource heap.</summary>
            <param name="pResource">A pointer to the reserved resource.</param>
            <param name="NumResourceRegions">The number of reserved resource regions.</param>
            <param name="pResourceRegionStartCoordinates">An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tiled_resource_coordinate">D3D12_TILED_RESOURCE_COORDINATE</a> structures that describe the starting coordinates of the reserved resource regions. The <i>NumResourceRegions</i> parameter specifies the number of <b>D3D12_TILED_RESOURCE_COORDINATE</b> structures in the array.</param>
            <param name="pResourceRegionSizes">An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tile_region_size">D3D12_TILE_REGION_SIZE</a> structures that describe the sizes of the reserved resource regions. The <i>NumResourceRegions</i> parameter specifies the number of <b>D3D12_TILE_REGION_SIZE</b> structures in the array.</param>
            <param name="pHeap">A pointer to the resource heap.</param>
            <param name="NumRanges">The number of tile  ranges.</param>
            <param name="pRangeFlags">A pointer to an  array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_tile_range_flags">D3D12_TILE_RANGE_FLAGS</a> values that describes each tile range. The <i>NumRanges</i> parameter specifies the number of values in the array.</param>
            <param name="pHeapRangeStartOffsets">An array of offsets into the resource heap. These are 0-based tile offsets, counting in tiles (not bytes).</param>
            <param name="pRangeTileCounts">
            <para>An array of tiles. An array of values that specify the number of tiles in each tile range. The <i>NumRanges</i> parameter specifies the number of values in the array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-updatetilemappings#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_tile_mapping_flags">D3D12_TILE_MAPPING_FLAGS</a> values that are combined by using a bitwise OR operation.</param>
            <remarks>
            <para>Use <b>UpdateTileMappings</b> to map the virtual pages of a reserved resource to the physical pages of a heap. The mapping does not have to be in order. The operation is similar to  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_2/nf-d3d11_2-id3d11devicecontext2-updatetilemappings">ID3D11DeviceContext2::UpdateTileMappings</a> with the one key difference that D3D12 allows a reserved resource to have tiles from multiple heaps. In a single call to <b>UpdateTileMappings</b>, you can map one or more ranges of resource tiles to one or more ranges of heap tiles.</para>
            <para>You can organize the parameters of  <b>UpdateTileMappings</b> in these ways to perform an update:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-updatetilemappings#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.CopyTileMappings(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_MAPPING_FLAGS)">
            <summary>Copies mappings from a source reserved resource to a destination reserved resource.</summary>
            <param name="pDstResource">A pointer to the destination reserved resource.</param>
            <param name="pDstRegionStartCoordinate">
            <para>A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tiled_resource_coordinate">D3D12_TILED_RESOURCE_COORDINATE</a> structure that describes the starting coordinates of the destination reserved resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-copytilemappings#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcResource">A pointer to the source reserved resource.</param>
            <param name="pSrcRegionStartCoordinate">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tiled_resource_coordinate">D3D12_TILED_RESOURCE_COORDINATE</a> structure that describes the starting coordinates of the source reserved resource.</param>
            <param name="pRegionSize">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tile_region_size">D3D12_TILE_REGION_SIZE</a> structure that describes the size of the reserved region.</param>
            <param name="Flags">One member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_tile_mapping_flags">D3D12_TILE_MAPPING_FLAGS</a>.</param>
            <remarks>
            <para>Use <b>CopyTileMappings</b> to copy the tile mappings from one reserved resource to another, either to duplicate a resource mapping, or to initialize a new mapping before modifying it using <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-updatetilemappings">UpdateTileMappings</a>. <b>CopyTileMappings</b> helps with tasks such as shifting mappings around within and across reserved resources, for example, scrolling tiles. The source and destination regions can overlap; the result of the copy in this situation is as if the source was saved to a temporary location and from there written to the destination.</para>
            <para>The destination and the source regions must each entirely fit in their resource or behavior is undefined and the debug layer will emit an error.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-copytilemappings#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.ExecuteCommandLists(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12CommandList[])">
            <summary>Submits an array of command lists for execution.</summary>
            <param name="NumCommandLists">The number of command lists to be executed.</param>
            <param name="ppCommandLists">The array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandlist">ID3D12CommandList</a> command lists to be executed.</param>
            <remarks>
            <para>Calling **ExecuteCommandLists** twice in succession (from the same thread, or different threads) guarantees that the first workload (A) finishes before the second workload (B). Calling **ExecuteCommandLists** with *two* command lists allows the driver to merge the two command lists such that the second command list (D) may begin executing work before all work from the first (C) has finished. Specifically, your application is allowed to insert a fence signal or wait between A and B, and the driver has no visibility into this, so the driver must ensure that everything in A is complete before the fence operation. There is no such opportunity in a single call to the API, so the driver is able to optimize that scenario. The driver is free to patch the submitted command lists. It is the calling application’s responsibility to ensure that the graphics processing unit (GPU) is not currently reading the any of the submitted command lists from a previous execution. Applications are encouraged to batch together command list executions to reduce fixed costs associated with submitted commands to the GPU.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-executecommandlists#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.SetMarker(System.UInt32,System.Void*,System.UInt32)">
            <summary>Not intended to be called directly.  Use the PIX event runtime to insert events into a command queue.</summary>
            <param name="Metadata">
            <para>Type: <b>UINT</b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-setmarker#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const void*</b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-setmarker#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Size">
            <para>Type: <b>UINT</b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-setmarker#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This is a support method used internally by the PIX event runtime.  It is not intended to be called directly. To insert instrumentation markers at the current location within a D3D12 command queue, use the <b>PIXSetMarker</b> function.  This is provided by the <a href="https://devblogs.microsoft.com/pix/winpixeventruntime/">WinPixEventRuntime</a> NuGet package.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-setmarker#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.BeginEvent(System.UInt32,System.Void*,System.UInt32)">
            <summary>Not intended to be called directly.  Use the PIX event runtime to insert events into a command queue.</summary>
            <param name="Metadata">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-beginevent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const void*</b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-beginevent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Size">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-beginevent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This is a support method used internally by the PIX event runtime.  It is not intended to be called directly. To mark the start of an instrumentation region at the current location within a D3D12 command queue, use the <b>PIXBeginEvent</b> function or <b>PIXScopedEvent</b> macro.  These are provided by the <a href="https://devblogs.microsoft.com/pix/winpixeventruntime/">WinPixEventRuntime</a> NuGet package.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-beginevent#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.EndEvent">
            <summary>Not intended to be called directly.  Use the PIX event runtime to insert events into a command queue.</summary>
            <remarks>
            <para>This is a support method used internally by the PIX event runtime.  It is not intended to be called directly. To mark the end of an instrumentation region at the current location within a D3D12 command queue, use the <b>PIXEndEvent</b> function or <b>PIXScopedEvent</b> macro.  These are provided by the <a href="https://devblogs.microsoft.com/pix/winpixeventruntime/">WinPixEventRuntime</a> NuGet package.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-endevent#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.Signal(Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)">
            <summary>Updates a fence to a specified value.</summary>
            <param name="pFence">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12fence">ID3D12Fence</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12fence">ID3D12Fence</a> object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-signal#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Value">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">UINT64</a></b> The value to set the fence to.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-signal#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-signal">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.Wait(Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)">
            <summary>Queues a GPU-side wait, and returns immediately. A GPU-side wait is where the GPU waits until the specified fence reaches or exceeds the specified value.</summary>
            <param name="pFence">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12fence">ID3D12Fence</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12fence">ID3D12Fence</a> object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-wait#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Value">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">UINT64</a></b> The value that the command queue is waiting for the fence to reach or exceed.  So when  <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12fence-getcompletedvalue">ID3D12Fence::GetCompletedValue</a> is greater than or equal to <i>Value</i>, the wait is terminated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-wait#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-wait">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.GetTimestampFrequency(System.UInt64*)">
            <summary>This method is used to determine the rate at which the GPU timestamp counter increments.</summary>
            <param name="pFrequency">
            <para>Type: <b>UINT64*</b> The GPU timestamp counter frequency (in ticks/second).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-gettimestampfrequency#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-gettimestampfrequency">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.GetClockCalibration(System.UInt64*,System.UInt64*)">
            <summary>This method samples the CPU and GPU timestamp counters at the same moment in time.</summary>
            <param name="pGpuTimestamp">
            <para>Type: <b>UINT64*</b> The value of the GPU timestamp counter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-getclockcalibration#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pCpuTimestamp">
            <para>Type: <b>UINT64*</b> The value of the CPU timestamp counter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-getclockcalibration#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-getclockcalibration">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.GetDesc">
            <summary>Gets the description of the command queue.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/api/d3d12/ns-d3d12-d3d12_command_queue_desc">D3D12_COMMAND_QUEUE_DESC</a></b> The description of the command queue, as a <a href="/windows/desktop/api/d3d12/ns-d3d12-d3d12_command_queue_desc">D3D12_COMMAND_QUEUE_DESC</a> structure.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12commandqueue-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Debug.EnableDebugLayer">
            <summary>Enables the debug layer.</summary>
            <remarks>
            <para>To enable the debug layers using this API, it must be called before the D3D12 device is created. Calling this API after creating the D3D12 device will cause the D3D12 runtime to remove the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug-enabledebuglayer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Debug1.EnableDebugLayer">
            <summary>Enables the debug layer.</summary>
            <remarks>
            <para>This method is identical to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12sdklayers/nf-d3d12sdklayers-id3d12debug-enabledebuglayer">ID3D12Debug::EnableDebugLayer</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug1-enabledebuglayer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Debug1.SetEnableGPUBasedValidation(Windows.Win32.Foundation.BOOL)">
            <summary>This method enables or disables GPU-Based Validation (GBV) before creating a device with the debug layer enabled.</summary>
            <param name="Enable">
            <para>Type: <b>BOOL</b> TRUE to enable GPU-Based Validation, otherwise FALSE.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug1-setenablegpubasedvalidation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>GPU-Based Validation can only be enabled/disabled prior to creating a device.  By default, GPU-Based Validation is disabled.  To disable GPU-Based Validation after initially enabling it the device must be fully released and recreated. For more information, see <a href="https://docs.microsoft.com/windows/desktop/direct3d12/using-d3d12-debug-layer-gpu-based-validation">Using D3D12 Debug Layer GPU-Based Validation</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug1-setenablegpubasedvalidation#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Debug1.SetEnableSynchronizedCommandQueueValidation(Windows.Win32.Foundation.BOOL)">
            <summary>Enables or disables dependent command queue synchronization when using a D3D12 device with the debug layer enabled.</summary>
            <param name="Enable">
            <para>Type: <b>BOOL</b> TRUE to enable Dependent Command Queue Synchronization, otherwise FALSE.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug1-setenablesynchronizedcommandqueuevalidation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Dependent Command Queue Synchronization is a D3D12 Debug Layer feature that gives the debug layer the ability to track resource states more accurately when enabled.  Dependent Command Queue Synchronization is enabled by default. When Dependent Command Queue Synchronization is enabled, the debug layer holds back actual submission of GPU work until all outstanding fence <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-wait">Wait</a> conditions are met.  This gives the debug layer the ability to make reasonable assumptions about GPU state (such as resource states) on the CPU-timeline when multiple command queues are potentially doing concurrent work. With Dependent Command Queue Synchronization disabled, all resource states tracked by the debug layer are cleared each time <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-signal">ID3D12CommandQueue::Signal</a> is called.  This results in significantly less useful resource state validation. Disabling Dependent Command Queue Synchronization may reduce some debug layer performance overhead when using multiple command queues.  However, it is suggested to leave it enabled unless this overhead is problematic.  Note that applications that use only a single command queue will see no performance changes with Dependent Command Queue Synchronization disabled.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug1-setenablesynchronizedcommandqueuevalidation#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Debug2.SetGPUBasedValidationFlags(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_BASED_VALIDATION_FLAGS)">
            <summary>This method configures the level of GPU-based validation that the debug device is to perform at runtime.</summary>
            <param name="Flags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12sdklayers/ne-d3d12sdklayers-d3d12_gpu_based_validation_flags">D3D12_GPU_BASED_VALIDATION_FLAGS</a></b> Specifies the level of GPU-based validation to perform at runtime.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug2-setgpubasedvalidationflags#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This method overrides the default behavior of GPU-based validation so it must be called before creating the Direct3D 12 device. These settings can't be changed or cancelled after the device is created. If you want to change the behavior of GPU-based validation at a later time, the device must be destroyed and recreated with different parameters.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug2-setgpubasedvalidationflags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Debug3.SetEnableGPUBasedValidation(Windows.Win32.Foundation.BOOL)">
            <summary>This method enables or disables GPU-based validation (GBV) before creating a device with the debug layer enabled.</summary>
            <param name="Enable">
            <para>Type: <b>BOOL</b> TRUE to enable GPU-based validation, otherwise FALSE.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug3-setenablegpubasedvalidation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>GPU-based validation can be enabled/disabled only prior to creating a device. By default, GPU-based validation is disabled. To disable GPU-based validation after initially enabling it, the device must be fully released and recreated. For more information, see <a href="https://docs.microsoft.com/windows/win32/direct3d12/using-d3d12-debug-layer-gpu-based-validation">Using D3D12 Debug Layer GPU-based validation</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug3-setenablegpubasedvalidation#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Debug3.SetEnableSynchronizedCommandQueueValidation(Windows.Win32.Foundation.BOOL)">
            <summary>Enables or disables dependent command queue synchronization when using a Direct3D 12 device with the debug layer enabled.</summary>
            <param name="Enable">
            <para>Type: <b>BOOL</b> TRUE to enable Dependent Command Queue Synchronization, otherwise FALSE.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug3-setenablesynchronizedcommandqueuevalidation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Dependent Command Queue Synchronization is a D3D12 Debug Layer feature that gives the debug layer the ability to track resource states more accurately when enabled. Dependent Command Queue Synchronization is enabled by default. When Dependent Command Queue Synchronization is enabled, the debug layer holds back actual submission of GPU work until all outstanding fence <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-wait">Wait</a> conditions are met. This gives the debug layer the ability to make reasonable assumptions about GPU state (such as resource states) on the CPU-timeline when multiple command queues are potentially doing concurrent work. With Dependent Command Queue Synchronization disabled, all resource states tracked by the debug layer are cleared each time <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-signal">ID3D12CommandQueue::Signal</a> is called. This results in significantly less useful resource state validation. Disabling Dependent Command Queue Synchronization may reduce some debug layer performance overhead when using multiple command queues. However, it is suggested to leave it enabled unless this overhead is problematic. Note that applications that use only a single command queue will see no performance changes with Dependent Command Queue Synchronization disabled.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug3-setenablesynchronizedcommandqueuevalidation#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Debug3.SetGPUBasedValidationFlags(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_BASED_VALIDATION_FLAGS)">
            <summary>This method configures the level of GPU-based validation that the debug device is to perform at runtime.</summary>
            <param name="Flags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12sdklayers/ne-d3d12sdklayers-d3d12_gpu_based_validation_flags">D3D12_GPU_BASED_VALIDATION_FLAGS</a></b> Specifies the level of GPU-based validation to perform at runtime.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug3-setgpubasedvalidationflags#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This method overrides the default behavior of GPU-based validation so it must be called before creating the D3D12 Device. These settings can't be changed or cancelled after the device is created. If you want to change the behavior of GPU-based validation at a later time, the device must be destroyed and recreated with different parameters.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12sdklayers/nf-d3d12sdklayers-id3d12debug3-setgpubasedvalidationflags#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap.GetDesc">
            <summary>Gets the descriptor heap description.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/api/d3d12/ns-d3d12-d3d12_descriptor_heap_desc">D3D12_DESCRIPTOR_HEAP_DESC</a></b> The description of the descriptor heap, as a <a href="/windows/desktop/api/d3d12/ns-d3d12-d3d12_descriptor_heap_desc">D3D12_DESCRIPTOR_HEAP_DESC</a> structure.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12descriptorheap-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap.GetCPUDescriptorHandleForHeapStart">
            <summary>Gets the CPU descriptor handle that represents the start of the heap.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> Returns the CPU descriptor handle that represents the start of the heap.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12descriptorheap-getcpudescriptorhandleforheapstart">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap.GetGPUDescriptorHandleForHeapStart">
            <summary>Gets the GPU descriptor handle that represents the start of the heap.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/api/d3d12/ns-d3d12-d3d12_gpu_descriptor_handle">D3D12_GPU_DESCRIPTOR_HANDLE</a></b> Returns the GPU descriptor handle that represents the start of the heap.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12descriptorheap-getgpudescriptorhandleforheapstart">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.GetNodeCount">
            <summary>Reports the number of physical adapters (nodes) that are associated with this device.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of physical adapters (nodes) that this device has.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getnodecount">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Object@)">
            <summary>Creates a command queue.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_command_queue_desc">D3D12_COMMAND_QUEUE_DESC</a>*</b> Specifies a D3D12_COMMAND_QUEUE_DESC that describes the command queue.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandqueue#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b><b>REFIID</b></b> The globally unique identifier (GUID) for the command queue interface. See remarks.  An input parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandqueue#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppCommandQueue">
            <para>Type: <b><b>void</b>**</b> A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandqueue">ID3D12CommandQueue</a> interface for the command queue.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandqueue#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>E_OUTOFMEMORY</b> if there is insufficient memory to create the command queue. See <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandqueue">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid*,System.Object@)">
            <summary>Creates a command allocator object.</summary>
            <param name="type">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_command_list_type">D3D12_COMMAND_LIST_TYPE</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_command_list_type">D3D12_COMMAND_LIST_TYPE</a>-typed value that specifies the type of command allocator to create. The type of command allocator can be the type that records either direct command lists or bundles.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandallocator#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (<b>GUID</b>) for the command allocator interface (<a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandallocator">ID3D12CommandAllocator</a>). The <b>REFIID</b>, or <b>GUID</b>, of the interface to the command allocator can be obtained by using the __uuidof() macro. For example, __uuidof(ID3D12CommandAllocator) will get the <b>GUID</b> of the interface to a command allocator.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandallocator#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppCommandAllocator">
            <para>Type: <b>void**</b> A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandallocator">ID3D12CommandAllocator</a> interface for the command allocator.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandallocator#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>E_OUTOFMEMORY</b> if there is insufficient memory to create the command allocator. See <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandallocator">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)">
            <summary>Creates a graphics pipeline state object.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_graphics_pipeline_state_desc">D3D12_GRAPHICS_PIPELINE_STATE_DESC</a> structure that describes graphics pipeline state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-creategraphicspipelinestate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (<b>GUID</b>) for the pipeline state interface (<a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pipelinestate">ID3D12PipelineState</a>). The <b>REFIID</b>, or <b>GUID</b>, of the interface to the pipeline state can be obtained by using the __uuidof() macro. For example, __uuidof(ID3D12PipelineState) will get the <b>GUID</b> of the interface to a pipeline state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-creategraphicspipelinestate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppPipelineState">
            <para>Type: <b>void**</b> A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pipelinestate">ID3D12PipelineState</a> interface for the pipeline state object. The pipeline state object is an immutable state object.  It contains no methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-creategraphicspipelinestate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>E_OUTOFMEMORY</b> if there is insufficient memory to create the pipeline state object. See <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-creategraphicspipelinestate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)">
            <summary>Creates a compute pipeline state object.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_compute_pipeline_state_desc">D3D12_COMPUTE_PIPELINE_STATE_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_compute_pipeline_state_desc">D3D12_COMPUTE_PIPELINE_STATE_DESC</a> structure that describes compute pipeline state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcomputepipelinestate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (<b>GUID</b>) for the pipeline state interface (<a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pipelinestate">ID3D12PipelineState</a>). The <b>REFIID</b>, or <b>GUID</b>, of the interface to the pipeline state can be obtained by using the __uuidof() macro. For example, __uuidof(ID3D12PipelineState) will get the <b>GUID</b> of the interface to a pipeline state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcomputepipelinestate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppPipelineState">
            <para>Type: <b>void**</b> A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pipelinestate">ID3D12PipelineState</a> interface for the pipeline state object. The pipeline state object is an immutable state object.  It contains no methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcomputepipelinestate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>E_OUTOFMEMORY</b> if there is insufficient memory to create the pipeline state object. See <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcomputepipelinestate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateCommandList(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid*,System.Object@)">
            <summary>Creates a command list.</summary>
            <param name="nodeMask">
            <para>Type: **[UINT](/windows/win32/WinProg/windows-data-types)** For single-GPU operation, set this to zero. If there are multiple GPU nodes, then set a bit to identify the node (the device's physical adapter) for which to create the command list. Each bit in the mask corresponds to a single node. Only one bit must be set. Also see [Multi-adapter systems](/windows/win32/direct3d12/multi-engine).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="type">
            <para>Type: **[D3D12_COMMAND_LIST_TYPE](./ne-d3d12-d3d12_command_list_type.md)** Specifies the type of command list to create.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pCommandAllocator">
            <para>Type: **[ID3D12CommandAllocator](./nn-d3d12-id3d12commandallocator.md)\*** A pointer to the command allocator object from which the device creates command lists.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pInitialState">
            <para>Type: **[ID3D12PipelineState](./nn-d3d12-id3d12pipelinestate.md)\*** An optional pointer to the pipeline state object that contains the initial pipeline state for the command list. If it is `nulltpr`, then the runtime sets a dummy initial pipeline state, so that drivers don't have to deal with undefined state. The overhead for this is low, particularly for a command list, for which the overall cost of recording the command list likely dwarfs the cost of a single initial state setting. So there's little cost in not setting the initial pipeline state parameter, if doing so is inconvenient. For bundles, on the other hand, it might make more sense to try to set the initial state parameter (since bundles are likely smaller overall, and can be reused frequently).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: **REFIID** A reference to the globally unique identifier (**GUID**) of the command list interface to return in *ppCommandList*.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppCommandList">
            <para>Type: **void\*\*** A pointer to a memory block that receives a pointer to the [ID3D12CommandList](./nn-d3d12-id3d12commandlist.md) or [ID3D12GraphicsCommandList](./nn-d3d12-id3d12graphicscommandlist.md) interface for the command list.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandlist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: **[HRESULT](/windows/win32/com/structure-of-com-error-codes)** If the function succeeds, it returns **S_OK**. Otherwise, it returns an [**HRESULT**](/windows/desktop/com/structure-of-com-error-codes) [error code](/windows/win32/com/com-error-codes-10). |Return value|Description| |-|-| |E_OUTOFMEMORY|There is insufficient memory to create the command list.| See [Direct3D 12 return codes](/windows/win32/direct3d12/d3d12-graphics-reference-returnvalues) for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandlist">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CheckFeatureSupport(Windows.Win32.Graphics.Direct3D12.D3D12_FEATURE,System.Void*,System.UInt32)">
            <summary>Gets information about the features that are supported by the current graphics driver.</summary>
            <param name="Feature">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_feature">D3D12_FEATURE</a></b> A constant from the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_feature">D3D12_FEATURE</a> enumeration describing the feature(s) that you want to query for support.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFeatureSupportData">
            <para>Type: <b>void*</b> A pointer to a data structure that corresponds to the value of the <i>Feature</i> parameter. To determine the corresponding data structure for each constant, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_feature">D3D12_FEATURE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="FeatureSupportDataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of the structure pointed to by the <i>pFeatureSupportData</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns <b>S_OK</b> if successful. Returns <b>E_INVALIDARG</b> if an unsupported data type is passed to the <i>pFeatureSupportData</i> parameter or if a size mismatch is detected for the <i>FeatureSupportDataSize</i> parameter.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-checkfeaturesupport">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC*,System.Guid*,System.Object@)">
            <summary>Creates a descriptor heap object.</summary>
            <param name="pDescriptorHeapDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_descriptor_heap_desc">D3D12_DESCRIPTOR_HEAP_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_descriptor_heap_desc">D3D12_DESCRIPTOR_HEAP_DESC</a> structure that describes the heap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createdescriptorheap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b><b>REFIID</b></b> The globally unique identifier (<b>GUID</b>) for the descriptor heap interface. See Remarks. An input parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createdescriptorheap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvHeap">
            <para>Type: <b><b>void</b>**</b> A pointer to a memory block that receives a pointer to the descriptor heap. <i>ppvHeap</i> can be NULL, to enable capability testing. When <i>ppvHeap</i> is NULL, no object will be created and S_FALSE will be returned when <i>pDescriptorHeapDesc</i> is valid.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createdescriptorheap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>E_OUTOFMEMORY</b> if there is insufficient memory to create the descriptor heap object. See <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createdescriptorheap">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.GetDescriptorHandleIncrementSize(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <summary>Gets the size of the handle increment for the given type of descriptor heap. This value is typically used to increment a handle into a descriptor array by the correct amount.</summary>
            <param name="DescriptorHeapType">The <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_descriptor_heap_type">D3D12_DESCRIPTOR_HEAP_TYPE</a>-typed value that specifies the type of descriptor heap to get the size of the handle increment for.</param>
            <returns>Returns the size of the handle increment for the given type of descriptor heap, including any necessary padding.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getdescriptorhandleincrementsize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateRootSignature(System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)">
            <summary>Creates a root signature layout.</summary>
            <param name="nodeMask">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">UINT</a></b> For single GPU operation, set this to zero. If there are multiple GPU nodes, set bits to identify the nodes (the  device's physical adapters) to which the root signature is to apply. Each bit in the mask corresponds to a single node. Refer to <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createrootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pBlobWithRootSignature">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">void</a>*</b> A pointer to the source data for the serialized signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createrootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="blobLengthInBytes">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">SIZE_T</a></b> The size, in bytes, of the block of memory that <i>pBlobWithRootSignature</i> points to.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createrootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b><b>REFIID</b></b> The globally unique identifier (<b>GUID</b>) for the root signature interface. See Remarks. An input parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createrootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvRootSignature">
            <para>Type: <b><b>void</b>**</b> A pointer to a memory block that receives a pointer to the root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createrootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns <b>S_OK</b> if successful; otherwise, returns one of the <a href="/windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            <para>This method returns <b>E_INVALIDARG</b> if the blob that <i>pBlobWithRootSignature</i> points to is invalid.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createrootsignature">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <summary>Creates a constant-buffer view for accessing resource data.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_constant_buffer_view_desc">D3D12_CONSTANT_BUFFER_VIEW_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_constant_buffer_view_desc">D3D12_CONSTANT_BUFFER_VIEW_DESC</a> structure that describes the constant-buffer view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createconstantbufferview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DestDescriptor">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> Describes the CPU descriptor handle that represents the start of the heap that holds the constant-buffer view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createconstantbufferview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createconstantbufferview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <summary>Creates a shader-resource view for accessing data in a resource.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a> object that represents the shader resource. At least one of <i>pResource</i> or <i>pDesc</i>  must be provided. A null <i>pResource</i> is used to initialize a null descriptor, which guarantees D3D11-like null binding behavior (reading 0s, writes are discarded), but must have a valid <i>pDesc</i> in order to determine the descriptor type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_shader_resource_view_desc">D3D12_SHADER_RESOURCE_VIEW_DESC</a> structure that describes the shader-resource view. A null <i>pDesc</i> is used to initialize a default descriptor, if possible. This behavior is identical to the D3D11 null descriptor behavior, where defaults are filled in. This behavior inherits the resource format and dimension (if not typeless) and for buffers SRVs target a full buffer and are typed (not raw or structured), and for textures SRVs target a full texture, all mips and all array slices. Not all resources support null descriptor initialization.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DestDescriptor">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> Describes the CPU descriptor handle that represents the shader-resource view. This handle can be created in a shader-visible or non-shader-visible descriptor heap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><h3><a id="Processing_YUV_4_2_0_video_formats"></a><a id="processing_yuv_4_2_0_video_formats"></a><a id="PROCESSING_YUV_4_2_0_VIDEO_FORMATS"></a>Processing YUV 4:2:0 video formats</h3> An app must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <b>CreateShaderResourceView</b> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. YUV 4:2:0 formats are listed in <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createshaderresourceview#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <summary>Creates a view for unordered accessing.</summary>
            <param name="pResource">
            <para>Type: [in, optional] <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a> object that represents the unordered access. At least one of <i>pResource</i> or <i>pDesc</i> must be provided. A null <i>pResource</i> is used to initialize a null descriptor, which guarantees Direct3D 11-like null binding behavior (reading 0s, writes are discarded), but must have a valid <i>pDesc</i> in order to determine the descriptor type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pCounterResource">
            <para>Type: [in, optional] <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> The <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a> for the counter (if any) associated with the UAV. If <i>pCounterResource</i> is not specified, then the <b>CounterOffsetInBytes</b> member of the <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_buffer_uav">D3D12_BUFFER_UAV</a> structure must be 0. If <i>pCounterResource</i> is specified, then there is a counter associated with the UAV, and the runtime performs validation of the following requirements: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: [in, optional] <b>const <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_unordered_access_view_desc">D3D12_UNORDERED_ACCESS_VIEW_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_unordered_access_view_desc">D3D12_UNORDERED_ACCESS_VIEW_DESC</a> structure that describes the unordered-access view. A null <i>pDesc</i> is used to initialize a default descriptor, if possible. This behavior is identical to the D3D11 null descriptor behavior, where defaults are filled in. This behavior inherits the resource format and dimension (if not typeless) and for buffers UAVs target a full buffer and are typed, and for textures UAVs target the first mip and all array slices. Not all resources support null descriptor initialization.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DestDescriptor">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> Describes the CPU descriptor handle that represents the start of the heap that holds the unordered-access view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createunorderedaccessview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <summary>Creates a render-target view for accessing resource data.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a> object that represents the render target.</para>
            <para>At least one of <i>pResource</i> or <i>pDesc</i>  must be provided. A null <i>pResource</i> is used to initialize a null descriptor, which guarantees D3D11-like null binding behavior (reading 0s, writes are discarded), but must have a valid <i>pDesc</i> in order to determine the descriptor type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_view_desc">D3D12_RENDER_TARGET_VIEW_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_render_target_view_desc">D3D12_RENDER_TARGET_VIEW_DESC</a> structure that describes the render-target view. A null <i>pDesc</i> is used to initialize a default descriptor, if possible. This behavior is identical to the D3D11 null descriptor behavior, where defaults are filled in. This behavior inherits the resource format and dimension (if not typeless) and RTVs target the first mip and all array slices. Not all resources support null descriptor initialization.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DestDescriptor">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> Describes the CPU descriptor handle that represents the destination where the newly-created render target view will reside.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createrendertargetview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <summary>Creates a depth-stencil view for accessing resource data.</summary>
            <param name="pResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a> object that represents the depth stencil.</para>
            <para>At least one of <i>pResource</i> or <i>pDesc</i>  must be provided. A null <i>pResource</i> is used to initialize a null descriptor, which guarantees D3D11-like null binding behavior (reading 0s, writes are discarded), but must have a valid <i>pDesc</i> in order to determine the descriptor type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createdepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_view_desc">D3D12_DEPTH_STENCIL_VIEW_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_depth_stencil_view_desc">D3D12_DEPTH_STENCIL_VIEW_DESC</a> structure that describes the depth-stencil view.</para>
            <para>A null <i>pDesc</i> is used to initialize a default descriptor, if possible. This behavior is identical to the D3D11 null descriptor behavior, where defaults are filled in. This behavior inherits the resource format and dimension (if not typeless) and DSVs target the  first mip and all array slices. Not all resources support null descriptor initialization.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createdepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DestDescriptor">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> Describes the CPU descriptor handle that represents the start of the heap that holds the depth-stencil view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createdepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createdepthstencilview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateSampler(Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <summary>Create a sampler object that encapsulates sampling information for a texture.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_sampler_desc">D3D12_SAMPLER_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_sampler_desc">D3D12_SAMPLER_DESC</a> structure that describes the sampler.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createsampler#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DestDescriptor">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> Describes the CPU descriptor handle that represents the start of the heap that holds the sampler.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createsampler#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createsampler">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CopyDescriptors(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <summary>Copies descriptors from a source to a destination.</summary>
            <param name="NumDestDescriptorRanges">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of destination descriptor ranges to copy to.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptors#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDestDescriptorRangeStarts">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a>*</b> An array of <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> objects to copy to. All the destination and source descriptors must be in heaps of the same [D3D12_DESCRIPTOR_HEAP_TYPE](/windows/win32/api/d3d12/ne-d3d12-d3d12_descriptor_heap_type).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptors#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDestDescriptorRangeSizes">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> An array of destination descriptor range sizes to copy to.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptors#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSrcDescriptorRanges">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of source descriptor ranges to copy from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptors#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcDescriptorRangeStarts">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a>*</b> An array of <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> objects to copy from. > [!IMPORTANT] > All elements in the *pSrcDescriptorRangeStarts* parameter must be in a non shader-visible descriptor heap. This is because shader-visible descriptor heaps may be created in **WRITE_COMBINE** memory or GPU local memory, which is prohibitively slow to read from. If your application manages descriptor heaps via copying the descriptors required for a given pass or frame from local "storage" descriptor heaps to the GPU-bound descriptor heap, use shader-opaque heaps for the storage heaps and copy into the GPU-visible heap as required.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptors#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcDescriptorRangeSizes">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> An array of source descriptor range sizes to copy from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptors#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DescriptorHeapsType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_descriptor_heap_type">D3D12_DESCRIPTOR_HEAP_TYPE</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_descriptor_heap_type">D3D12_DESCRIPTOR_HEAP_TYPE</a>-typed value that specifies the type of descriptor heap to copy with. This is required as different descriptor types may have different sizes. Both the source and destination descriptor heaps must have the same type, else the debug layer will emit an error.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptors#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Where applicable, prefer [**ID3D12Device::CopyDescriptorsSimple**](/windows/win32/api/d3d12/nf-d3d12-id3d12device-copydescriptorssimple) to this method. It can have a better CPU cache miss rate due to the linear nature of the copy.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptors#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CopyDescriptorsSimple(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <summary>Copies descriptors from a source to a destination.</summary>
            <param name="NumDescriptors">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of descriptors to copy.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptorssimple#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DestDescriptorRangeStart">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> A <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> that describes the destination descriptors to start to copy to. The destination and source descriptors must be in heaps of the same [D3D12_DESCRIPTOR_HEAP_TYPE](/windows/win32/api/d3d12/ne-d3d12-d3d12_descriptor_heap_type).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptorssimple#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcDescriptorRangeStart">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> A <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> that describes the source descriptors to start to copy from. > [!IMPORTANT] > The *SrcDescriptorRangeStart* parameter must be in a non shader-visible descriptor heap. This is because shader-visible descriptor heaps may be created in **WRITE_COMBINE** memory or GPU local memory, which is prohibitively slow to read from. If your application manages descriptor heaps via copying the descriptors required for a given pass or frame from local "storage" descriptor heaps to the GPU-bound descriptor heap, then use shader-opaque heaps for the storage heaps and copy into the GPU-visible heap as required.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptorssimple#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DescriptorHeapsType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_descriptor_heap_type">D3D12_DESCRIPTOR_HEAP_TYPE</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_descriptor_heap_type">D3D12_DESCRIPTOR_HEAP_TYPE</a>-typed value that specifies the type of descriptor heap to copy with. This is required as different descriptor types may have different sizes. Both the source and destination descriptor heaps must have the same type, else the debug layer will emit an error.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptorssimple#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Where applicable, prefer this method to [**ID3D12Device::CopyDescriptors**](/windows/win32/api/d3d12/nf-d3d12-id3d12device-copydescriptors). It can have a better CPU cache miss rate due to the linear nature of the copy.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-copydescriptorssimple#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.GetResourceAllocationInfo(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*)">
            <summary>Gets the size and alignment of memory required for a collection of resources on this adapter.</summary>
            <param name="visibleMask">
            <para>Type: **[UINT](/windows/win32/WinProg/windows-data-types)** For single-GPU operation, set this to zero. If there are multiple GPU nodes, then set bits to identify the nodes (the device's physical adapters). Each bit in the mask corresponds to a single node. Also see [Multi-adapter systems](/windows/win32/direct3d12/multi-engine).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourceallocationinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="numResourceDescs">
            <para>Type: **[UINT](/windows/win32/WinProg/windows-data-types)** The number of resource descriptors in the *pResourceDescs* array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourceallocationinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pResourceDescs">
            <para>Type: **const [D3D12_RESOURCE_DESC](./ns-d3d12-d3d12_resource_desc.md)\*** An array of **D3D12_RESOURCE_DESC** structures that described the resources to get info about.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourceallocationinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: **[D3D12_RESOURCE_ALLOCATION_INFO](./ns-d3d12-d3d12_resource_allocation_info.md)** A [D3D12_RESOURCE_ALLOCATION_INFO](./ns-d3d12-d3d12_resource_allocation_info.md) structure that provides info about video memory allocated for the specified array of resources.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourceallocationinfo">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.GetCustomHeapProperties(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_TYPE)">
            <summary>Divulges the equivalent custom heap properties that are used for non-custom heap types, based on the adapter's architectural properties.</summary>
            <param name="nodeMask">
            <para>Type: <b>UINT</b> For single-GPU operation, set this to zero. If there are multiple GPU nodes, set a bit to identify the node (the  device's physical adapter). Each bit in the mask corresponds to a single node. Only 1 bit must be set. See <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcustomheapproperties#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="heapType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_heap_type">D3D12_HEAP_TYPE</a></b> A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_heap_type">D3D12_HEAP_TYPE</a>-typed value that specifies the heap to get properties for. D3D12_HEAP_TYPE_CUSTOM is not supported as a parameter value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcustomheapproperties#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/api/d3d12/ns-d3d12-d3d12_heap_properties">D3D12_HEAP_PROPERTIES</a></b> Returns a <a href="/windows/win32/api/d3d12/ns-d3d12-d3d12_heap_properties">D3D12_HEAP_PROPERTIES</a> structure that provides properties for the specified heap. The <b>Type</b> member of the returned D3D12_HEAP_PROPERTIES is always D3D12_HEAP_TYPE_CUSTOM.</para>
            <para>When <a href="/windows/win32/api/d3d12/ns-d3d12-d3d12_feature_data_architecture">D3D12_FEATURE_DATA_ARCHITECTURE</a>::UMA is FALSE, the returned D3D12_HEAP_PROPERTIES members convert as follows:</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcustomheapproperties">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)">
            <summary>Creates both a resource and an implicit heap, such that the heap is big enough to contain the entire resource, and the resource is mapped to the heap.</summary>
            <param name="pHeapProperties">
            <para>Type: **const [D3D12_HEAP_PROPERTIES](./ns-d3d12-d3d12_heap_properties.md)\*** A pointer to a **D3D12_HEAP_PROPERTIES** structure that provides properties for the resource's heap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommittedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="HeapFlags">
            <para>Type: **[D3D12_HEAP_FLAGS](./ne-d3d12-d3d12_heap_flags.md)** Heap options, as a bitwise-OR'd combination of **D3D12_HEAP_FLAGS** enumeration constants.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommittedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: **const [D3D12_RESOURCE_DESC](./ns-d3d12-d3d12_resource_desc.md)\*** A pointer to a **D3D12_RESOURCE_DESC** structure that describes the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommittedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="InitialResourceState">
            <para>Type: **[D3D12_RESOURCE_STATES](./ne-d3d12-d3d12_resource_states.md)** The initial state of the resource, as a bitwise-OR'd combination of **D3D12_RESOURCE_STATES** enumeration constants. When you create a resource together with a [D3D12_HEAP_TYPE_UPLOAD](./ne-d3d12-d3d12_heap_type.md) heap, you must set *InitialResourceState* to [D3D12_RESOURCE_STATE_GENERIC_READ](./ne-d3d12-d3d12_resource_states.md). When you create a resource together with a [D3D12_HEAP_TYPE_READBACK](./ne-d3d12-d3d12_heap_type.md) heap, you must set *InitialResourceState* to [D3D12_RESOURCE_STATE_COPY_DEST](./ne-d3d12-d3d12_resource_states.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommittedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pOptimizedClearValue">
            <para>Type: **const [D3D12_CLEAR_VALUE](./ns-d3d12-d3d12_clear_value.md)\*** Specifies a **D3D12_CLEAR_VALUE** structure that describes the default value for a clear color. *pOptimizedClearValue* specifies a value for which clear operations are most optimal. When the created resource is a texture with either the [D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET](./ne-d3d12-d3d12_resource_flags.md) or **D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL** flags, you should choose the value with which the clear operation will most commonly be called. You can call the clear operation with other values, but those operations won't be as efficient as when the value matches the one passed in to resource creation. When you use [D3D12_RESOURCE_DIMENSION_BUFFER](./ne-d3d12-d3d12_resource_dimension.md), you must set *pOptimizedClearValue* to `nullptr`.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommittedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riidResource">
            <para>Type: **REFIID** A reference to the globally unique identifier (**GUID**) of the resource interface to return in *ppvResource*. While *riidResource* is most commonly the **GUID** of [ID3D12Resource](./nn-d3d12-id3d12resource.md), it may be the **GUID** of any interface. If the resource object doesn't support the interface for this **GUID**, then creation fails with **E_NOINTERFACE**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommittedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvResource">
            <para>Type: **void\*\*** An optional pointer to a memory block that receives the requested interface pointer to the created resource object. *ppvResource* can be `nullptr`, to enable capability testing. When *ppvResource* is `nullptr`, no object is created, and **S_FALSE** is returned when *pDesc* is valid.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommittedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: **[HRESULT](/windows/win32/com/structure-of-com-error-codes)** If the function succeeds, it returns **S_OK**. Otherwise, it returns an [**HRESULT**](/windows/desktop/com/structure-of-com-error-codes) [error code](/windows/win32/com/com-error-codes-10). |Return value|Description| |-|-| |E_OUTOFMEMORY|There is insufficient memory to create the resource.| See [Direct3D 12 return codes](/windows/win32/direct3d12/d3d12-graphics-reference-returnvalues) for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommittedresource">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateHeap(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,System.Guid*,System.Object@)">
            <summary>Creates a heap that can be used with placed resources and reserved resources.</summary>
            <param name="pDesc">
            <para>Type: **const [D3D12_HEAP_DESC](./ns-d3d12-d3d12_heap_desc.md)\*** A pointer to a constant **D3D12_HEAP_DESC** structure that describes the heap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createheap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: **REFIID** A reference to the globally unique identifier (**GUID**) of the heap interface to return in *ppvHeap*. While *riidResource* is most commonly the **GUID** of [ID3D12Heap](./nn-d3d12-id3d12heap.md), it may be the **GUID** of any interface. If the resource object doesn't support the interface for this **GUID**, then creation fails with **E_NOINTERFACE**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createheap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvHeap">
            <para>Type: **void\*\*** An optional pointer to a memory block that receives the requested interface pointer to the created heap object. *ppvHeap* can be `nullptr`, to enable capability testing. When *ppvHeap* is `nullptr`, no object is created, and **S_FALSE** is returned when *pDesc* is valid.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createheap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: **[HRESULT](/windows/win32/com/structure-of-com-error-codes)** If the function succeeds, it returns **S_OK**. Otherwise, it returns an [**HRESULT**](/windows/desktop/com/structure-of-com-error-codes) [error code](/windows/win32/com/com-error-codes-10). |Return value|Description| |-|-| |E_OUTOFMEMORY|There is insufficient memory to create the heap.| See [Direct3D 12 return codes](/windows/win32/direct3d12/d3d12-graphics-reference-returnvalues) for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createheap">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)">
            <summary>Creates a resource that is placed in a specific heap. Placed resources are the lightest weight resource objects available, and are the fastest to create and destroy.</summary>
            <param name="pHeap">
            <para>Type: [in] **<a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12heap">ID3D12Heap</a>*** A pointer to the **ID3D12Heap** interface that represents the heap in which the resource is placed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createplacedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="HeapOffset">
            <para>Type: **<a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">UINT64</a>** The offset, in bytes, to the resource. The *HeapOffset* must be a multiple of the resource's alignment, and *HeapOffset* plus the resource size must be smaller than or equal to the heap size. <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12device-getresourceallocationinfo">**GetResourceAllocationInfo**</a> must be used to understand the sizes of texture resources.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createplacedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: [in] **const <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_resource_desc">D3D12_RESOURCE_DESC</a>*** A pointer to a **D3D12_RESOURCE_DESC** structure that describes the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createplacedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="InitialState">
            <para>Type: **<a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATES</a>** The initial state of the resource, as a bitwise-OR'd combination of **D3D12_RESOURCE_STATES** enumeration constants. When a resource is created together with a **D3D12_HEAP_TYPE_UPLOAD** heap, *InitialState* must be **D3D12_RESOURCE_STATE_GENERIC_READ**. When a resource is created together with a **D3D12_HEAP_TYPE_READBACK** heap, *InitialState* must be **D3D12_RESOURCE_STATE_COPY_DEST**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createplacedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pOptimizedClearValue">
            <para>Type: [in, optional] **const <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_clear_value">D3D12_CLEAR_VALUE</a>*** Specifies a **D3D12_CLEAR_VALUE** that describes the default value for a clear color. *pOptimizedClearValue* specifies a value for which clear operations are most optimal. When the created resource is a texture with either the **D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET** or **D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL** flags, your application should choose the value that the clear operation will most commonly be called with. Clear operations can be called with other values, but those operations will not be as efficient as when the value matches the one passed into resource creation. *pOptimizedClearValue* must be NULL when used with **D3D12_RESOURCE_DIMENSION_BUFFER**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createplacedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: **REFIID** The globally unique identifier (**GUID**) for the resource interface. This is an input parameter. The **REFIID**, or **GUID**, of the interface to the resource can be obtained by using the `__uuidof` macro. For example, `__uuidof(ID3D12Resource)` gets the **GUID** of the interface to a resource. Although **riid** is, most commonly, the GUID for <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12resource">**ID3D12Resource**</a>, it may be any **GUID** for any interface. If the resource object doesn't support the interface for this **GUID**, then creation fails with **E_NOINTERFACE**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createplacedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvResource">
            <para>Type: [out, optional] **void**** A pointer to a memory block that receives a pointer to the resource. *ppvResource* can be NULL, to enable capability testing. When *ppvResource* is NULL, no object will be created and S_FALSE will be returned when *pResourceDesc* and other parameters are valid.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createplacedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: **<a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a>** This method returns **E_OUTOFMEMORY** if there is insufficient memory to create the resource. See <a href="/windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createplacedresource">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)">
            <summary>Creates a resource that is reserved, and not yet mapped to any pages in a heap.</summary>
            <param name="pDesc">
            <para>Type: **const [D3D12_RESOURCE_DESC](./ns-d3d12-d3d12_resource_desc.md)\*** A pointer to a **D3D12_RESOURCE_DESC** structure that describes the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createreservedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="InitialState">
            <para>Type: **[D3D12_RESOURCE_STATES](./ne-d3d12-d3d12_resource_states.md)** The initial state of the resource, as a bitwise-OR'd combination of **D3D12_RESOURCE_STATES** enumeration constants.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createreservedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pOptimizedClearValue">
            <para>Type: **const [D3D12_CLEAR_VALUE](./ns-d3d12-d3d12_clear_value.md)\*** Specifies a **D3D12_CLEAR_VALUE** structure that describes the default value for a clear color. *pOptimizedClearValue* specifies a value for which clear operations are most optimal. When the created resource is a texture with either the [D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET](./ne-d3d12-d3d12_resource_flags.md) or **D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL** flags, you should choose the value with which the clear operation will most commonly be called. You can call the clear operation with other values, but those operations won't be as efficient as when the value matches the one passed in to resource creation. When you use [D3D12_RESOURCE_DIMENSION_BUFFER](./ne-d3d12-d3d12_resource_dimension.md), you must set *pOptimizedClearValue* to `nullptr`.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createreservedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: **REFIID** A reference to the globally unique identifier (**GUID**) of the resource interface to return in *ppvResource*. See **Remarks**. While *riidResource* is most commonly the **GUID** of [ID3D12Resource](./nn-d3d12-id3d12resource.md), it may be the **GUID** of any interface. If the resource object doesn't support the interface for this **GUID**, then creation fails with **E_NOINTERFACE**.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createreservedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvResource">
            <para>Type: **void\*\*** An optional pointer to a memory block that receives the requested interface pointer to the created resource object. *ppvResource* can be `nullptr`, to enable capability testing. When *ppvResource* is `nullptr`, no object is created, and **S_FALSE** is returned when *pDesc* is valid.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createreservedresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: **[HRESULT](/windows/win32/com/structure-of-com-error-codes)** If the function succeeds, it returns **S_OK**. Otherwise, it returns an [**HRESULT**](/windows/win32/com/structure-of-com-error-codes) [error code](/windows/win32/com/com-error-codes-10). |Return value|Description| |-|-| |E_OUTOFMEMORY|There is insufficient memory to create the resource.| See [Direct3D 12 return codes](/windows/win32/direct3d12/d3d12-graphics-reference-returnvalues) for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createreservedresource">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,Windows.Win32.Security.SECURITY_ATTRIBUTES*,System.UInt32,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.HANDLE*)">
            <summary>Creates a shared handle to an heap, resource, or fence object.</summary>
            <param name="pObject">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12devicechild">ID3D12DeviceChild</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12devicechild">ID3D12DeviceChild</a> interface that represents the heap, resource, or fence object to create for sharing. The following interfaces (derived from <b>ID3D12DeviceChild</b>) are supported:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createsharedhandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pAttributes">
            <para>Type: <b>const <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/aa379560(v=vs.85)">SECURITY_ATTRIBUTES</a>*</b> A pointer to a <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/aa379560(v=vs.85)">SECURITY_ATTRIBUTES</a>structure that contains two separate but related data members: an optional security descriptor, and a <b>Boolean</b>value that determines whether child processes can inherit the returned handle.</para>
            <para>Set this parameter to <b>NULL</b> if you want child processes that the application might create to not  inherit  the handle returned by <b>CreateSharedHandle</b>, and if you want the resource that is associated with the returned handle to get a default security descriptor.</para>
            <para>The <b>lpSecurityDescriptor</b> member of the structure specifies a <a href="https://docs.microsoft.com/windows/desktop/api/winnt/ns-winnt-security_descriptor">SECURITY_DESCRIPTOR</a> for the resource. Set this member to <b>NULL</b> if you want the runtime to assign a default security descriptor to the resource that is associated with the returned handle. The ACLs in the default security descriptor for the resource come from the primary or impersonation token of the creator. For more info, see <a href="https://docs.microsoft.com/windows/desktop/Sync/synchronization-object-security-and-access-rights">Synchronization Object Security and Access Rights</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createsharedhandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Access">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">DWORD</a></b> Currently the only value this parameter accepts is GENERIC_ALL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createsharedhandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Name">
            <para>Type: <b>LPCWSTR</b> A <b>NULL</b>-terminated <b>UNICODE</b> string that contains the name to associate with the shared heap. The name is limited to MAX_PATH characters. Name comparison is case-sensitive.</para>
            <para>If <i>Name</i> matches the name of an existing resource, <b>CreateSharedHandle</b> fails with <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_NAME_ALREADY_EXISTS</a>. This occurs because these objects share the same namespace.</para>
            <para>The name can have a "Global\" or "Local\" prefix to explicitly create the object in the global or session namespace. The remainder of the name can contain any character except the backslash character (\\). For more information, see <a href="https://docs.microsoft.com/windows/desktop/TermServ/kernel-object-namespaces">Kernel Object Namespaces</a>. Fast user switching is implemented using Terminal Services sessions. Kernel object names must follow the guidelines outlined for Terminal Services so that applications can support multiple users.</para>
            <para>The object can be created in a private namespace. For more information, see <a href="https://docs.microsoft.com/windows/desktop/Sync/object-namespaces">Object Namespaces</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createsharedhandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pHandle">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HANDLE</a>*</b> A pointer to a variable that receives the NT HANDLE value to the resource to share. You can use this handle in calls to access the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createsharedhandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the following values:</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createsharedhandle">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.OpenSharedHandle(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)">
            <summary>Opens a handle for shared resources, shared heaps, and shared fences, by using HANDLE and REFIID.</summary>
            <param name="NTHandle">
            <para>Type: <b>HANDLE</b> The handle that was output by the call to <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12device-createsharedhandle">ID3D12Device::CreateSharedHandle</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-opensharedhandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (<b>GUID</b>) for one of the following interfaces:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-opensharedhandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvObj">
            <para>Type: <b>void**</b> A pointer to a memory block that receives a pointer to one of the following interfaces:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-opensharedhandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-opensharedhandle">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.OpenSharedHandleByName(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.Foundation.HANDLE*)">
            <summary>Opens a handle for shared resources, shared heaps, and shared fences, by using Name and Access.</summary>
            <param name="Name">
            <para>Type: <b>LPCWSTR</b> The name that was optionally passed as the <i>Name</i> parameter in the call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createsharedhandle">ID3D12Device::CreateSharedHandle</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-opensharedhandlebyname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Access">
            <para>Type: <b>DWORD</b> The access level that was specified in the <i>Access</i> parameter in the call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createsharedhandle">ID3D12Device::CreateSharedHandle</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-opensharedhandlebyname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNTHandle">
            <para>Type: <b>HANDLE*</b> Pointer to the shared handle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-opensharedhandlebyname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-opensharedhandlebyname">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.MakeResident(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <summary>Makes objects resident for the device.</summary>
            <param name="NumObjects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of objects  in the <i>ppObjects</i> array to make resident for the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-makeresident#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppObjects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pageable">ID3D12Pageable</a>*</b> A pointer to a memory block that contains an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pageable">ID3D12Pageable</a> interface pointers for the objects.</para>
            <para>Even though most D3D12 objects inherit from <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pageable">ID3D12Pageable</a>, residency changes are only supported on the following objects: Descriptor Heaps, Heaps, Committed Resources, and Query Heaps</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-makeresident#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-makeresident">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.Evict(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <summary>Enables the page-out of data, which precludes GPU access of that data.</summary>
            <param name="NumObjects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of objects in the <i>ppObjects</i> array to evict from the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-evict#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppObjects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pageable">ID3D12Pageable</a>*</b> A pointer to a memory block that contains an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pageable">ID3D12Pageable</a> interface pointers for the objects.</para>
            <para>Even though most D3D12 objects inherit from <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pageable">ID3D12Pageable</a>, residency changes are only supported on the following objects: Descriptor Heaps, Heaps, Committed Resources, and Query Heaps</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-evict#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-evict">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateFence(System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid*,System.Object@)">
            <summary>Creates a fence object.</summary>
            <param name="InitialValue">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT64</a></b> The initial value for the fence.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createfence#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_fence_flags">D3D12_FENCE_FLAGS</a></b> A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_fence_flags">D3D12_FENCE_FLAGS</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies options for the fence.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createfence#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (<b>GUID</b>) for the fence interface (<a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12fence">ID3D12Fence</a>). The <b>REFIID</b>, or <b>GUID</b>, of the interface to the fence can be obtained by using the __uuidof() macro. For example, __uuidof(ID3D12Fence) will get the <b>GUID</b> of the interface to a fence.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createfence#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppFence">
            <para>Type: <b>void**</b> A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12fence">ID3D12Fence</a> interface that is used to access the fence.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createfence#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">HRESULT</a></b> Returns <b>S_OK</b> if successful; otherwise, returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createfence">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.GetDeviceRemovedReason">
            <summary>Gets the reason that the device was removed.</summary>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns the reason that the device was removed.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getdeviceremovedreason">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)">
            <summary>Gets a resource layout that can be copied. Helps the app fill-in D3D12_PLACED_SUBRESOURCE_FOOTPRINT and D3D12_SUBRESOURCE_FOOTPRINT when suballocating space in upload heaps.</summary>
            <param name="pResourceDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_resource_desc">D3D12_RESOURCE_DESC</a>*</b> A description of the resource, as a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_resource_desc">D3D12_RESOURCE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcopyablefootprints#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="FirstSubresource">
            <para>Type: <b>UINT</b> Index of the first subresource in the resource. The range of valid values is 0 to D3D12_REQ_SUBRESOURCES.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcopyablefootprints#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSubresources">
            <para>Type: <b>UINT</b> The number of subresources in the resource.  The range of valid values is 0 to (D3D12_REQ_SUBRESOURCES - <i>FirstSubresource</i>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcopyablefootprints#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BaseOffset">
            <para>Type: <b>UINT64</b> The offset, in bytes, to the resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcopyablefootprints#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pLayouts">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_placed_subresource_footprint">D3D12_PLACED_SUBRESOURCE_FOOTPRINT</a>*</b> A pointer to an array (of length <i>NumSubresources</i>) of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_placed_subresource_footprint">D3D12_PLACED_SUBRESOURCE_FOOTPRINT</a> structures, to be filled with the description and placement of each subresource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcopyablefootprints#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumRows">
            <para>Type: <b>UINT*</b> A pointer to an array (of length <i>NumSubresources</i>) of integer  variables, to be filled with the number of rows for each subresource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcopyablefootprints#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRowSizeInBytes">
            <para>Type: <b>UINT64*</b> A pointer to an array (of length <i>NumSubresources</i>) of integer variables, each entry to be filled with the unpadded size in bytes of a row, of each subresource.</para>
            <para>For example, if a Texture2D resource has a width of 32 and bytes per pixel of 4, then <i>pRowSizeInBytes</i> returns 128. <i>pRowSizeInBytes</i> should not be confused with <b>row pitch</b>, as examining <i>pLayouts</i> and getting the row pitch from that will give you 256 as it is aligned to D3D12_TEXTURE_DATA_PITCH_ALIGNMENT.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcopyablefootprints#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pTotalBytes">
            <para>Type: <b>UINT64*</b> A pointer to an integer variable, to be filled with the total size, in bytes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcopyablefootprints#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This routine assists the application in filling out <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_placed_subresource_footprint">D3D12_PLACED_SUBRESOURCE_FOOTPRINT</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_subresource_footprint">D3D12_SUBRESOURCE_FOOTPRINT</a> structures, when suballocating space in upload heaps. The resulting structures are GPU adapter-agnostic, meaning that the values will not vary from one GPU adapter to the next. <b>GetCopyableFootprints</b> uses specified details about resource formats, texture layouts, and alignment requirements (from the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_resource_desc">D3D12_RESOURCE_DESC</a> structure)  to fill out the subresource structures. Applications have access to all these details, so this method, or a variation of it, could be  written as part of the app.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getcopyablefootprints#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC*,System.Guid*,System.Object@)">
            <summary>Creates a query heap. A query heap contains an array of queries.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_query_heap_desc">D3D12_QUERY_HEAP_DESC</a>*</b> Specifies the query heap in a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_query_heap_desc">D3D12_QUERY_HEAP_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createqueryheap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> Specifies a REFIID that uniquely identifies the heap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createqueryheap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvHeap">
            <para>Type: <b>void**</b> Specifies a pointer to the heap, that will be returned on successful completion of the method. <i>ppvHeap</i> can be NULL, to enable capability testing. When <i>ppvHeap</i> is NULL, no object will be created and S_FALSE will be returned when <i>pDesc</i> is valid.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createqueryheap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createqueryheap">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.SetStablePowerState(Windows.Win32.Foundation.BOOL)">
            <summary>A development-time aid for certain types of profiling and experimental prototyping.</summary>
            <param name="Enable">
            <para>Type: <b>BOOL</b> Specifies a BOOL that turns the stable power state on or off.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-setstablepowerstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-setstablepowerstate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid*,System.Object@)">
            <summary>This method creates a command signature.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_command_signature_desc">D3D12_COMMAND_SIGNATURE_DESC</a>*</b> Describes the command signature to be created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_command_signature_desc">D3D12_COMMAND_SIGNATURE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRootSignature">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12rootsignature">ID3D12RootSignature</a>*</b> Specifies the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12rootsignature">ID3D12RootSignature</a> that the command signature applies to.</para>
            <para>The root signature is required if any of the commands in the signature will update bindings on the pipeline. If the only command present is a draw or dispatch, the root signature parameter can be set to NULL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (<b>GUID</b>) for the command signature interface (<a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandsignature">ID3D12CommandSignature</a>). The <b>REFIID</b>, or <b>GUID</b>, of the interface to the command signature can be obtained by using the __uuidof() macro. For example, __uuidof(<b>ID3D12CommandSignature</b>) will get the <b>GUID</b> of the interface to a command signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvCommandSignature">
            <para>Type: <b>void**</b> Specifies a pointer, that on successful completion of the method will point to the created command signature (<a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandsignature">ID3D12CommandSignature</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-createcommandsignature">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.GetResourceTiling(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_PACKED_MIP_INFO*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_SHAPE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_TILING*)">
            <summary>Gets info about how a tiled resource is broken into tiles.</summary>
            <param name="pTiledResource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> Specifies a tiled <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>  to get info about.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourcetiling#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumTilesForEntireResource">
            <para>Type: <b>UINT*</b> A pointer to a variable that receives the number of tiles needed to store the entire tiled resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourcetiling#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pPackedMipDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_packed_mip_info">D3D12_PACKED_MIP_INFO</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_packed_mip_info">D3D12_PACKED_MIP_INFO</a> structure that <b>GetResourceTiling</b> fills with info about how the tiled resource's mipmaps are packed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourcetiling#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pStandardTileShapeForNonPackedMips">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tile_shape">D3D12_TILE_SHAPE</a>*</b> Specifies a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tile_shape">D3D12_TILE_SHAPE</a> structure that <b>GetResourceTiling</b> fills with info about the tile shape. This is info about how pixels fit in the tiles, independent of tiled resource's dimensions, not including packed mipmaps. If the entire tiled resource is packed, this parameter is meaningless because the tiled resource has no defined layout for packed mipmaps. In this situation, <b>GetResourceTiling</b> sets the members of D3D12_TILE_SHAPE to zeros.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourcetiling#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumSubresourceTilings">
            <para>Type: <b>UINT*</b> A pointer to a variable that contains the number of tiles in the subresource. On input, this is the number of subresources to query tilings for; on output, this is the number that was actually retrieved at <i>pSubresourceTilingsForNonPackedMips</i> (clamped to what's available).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourcetiling#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="FirstSubresourceTilingToGet">
            <para>Type: <b>UINT</b> The number of the first subresource tile to get. <b>GetResourceTiling</b> ignores this parameter if the number that <i>pNumSubresourceTilings</i> points to is 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourcetiling#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSubresourceTilingsForNonPackedMips">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_subresource_tiling">D3D12_SUBRESOURCE_TILING</a>*</b> Specifies a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_subresource_tiling">D3D12_SUBRESOURCE_TILING</a> structure that <b>GetResourceTiling</b> fills with info about subresource tiles. If subresource tiles are part of packed mipmaps, <b>GetResourceTiling</b> sets the members of D3D12_SUBRESOURCE_TILING to zeros, except the <i>StartTileIndexInOverallResource</i> member, which <b>GetResourceTiling</b> sets to D3D12_PACKED_TILE (0xffffffff). The D3D12_PACKED_TILE constant indicates that the whole <b>D3D12_SUBRESOURCE_TILING</b> structure is meaningless for this situation, and the info that the <i>pPackedMipDesc</i> parameter points to applies.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourcetiling#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>To estimate the total resource size of textures needed when calculating heap sizes and calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createplacedresource">CreatePlacedResource</a>, use <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-getresourceallocationinfo">GetResourceAllocationInfo</a> instead of <b>GetResourceTiling</b>. <b>GetResourceTiling</b> cannot be used for this.</para>
            <para>For more information on tiled resources, refer to <a href="https://docs.microsoft.com/windows/desktop/direct3d12/volume-tiled-resources">Volume Tiled Resources</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getresourcetiling#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.GetAdapterLuid">
            <summary>Gets a locally unique identifier for the current device (adapter).</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">LUID</a></b> The locally unique identifier for the adapter.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device-getadapterluid">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreatePipelineLibrary(System.Void*,System.UIntPtr,System.Guid*,System.Object@)" -->
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.UInt64*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,Windows.Win32.Foundation.HANDLE)">
            <summary>Specifies an event that should be fired when one or more of a collection of fences reach specific values.</summary>
            <param name="ppFences">
            <para>Type: <b>ID3D12Fence*</b> An array of length <i>NumFences</i> that specifies the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12fence">ID3D12Fence</a> objects.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device1-seteventonmultiplefencecompletion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFenceValues">
            <para>Type: <b>const UINT64*</b> An array of length <i>NumFences</i> that specifies the fence values required for the event is to be signaled.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device1-seteventonmultiplefencecompletion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumFences">
            <para>Type: <b>UINT</b> Specifies the number of fences to be included.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device1-seteventonmultiplefencecompletion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_multiple_fence_wait_flags">D3D12_MULTIPLE_FENCE_WAIT_FLAGS</a></b> Specifies one  of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_multiple_fence_wait_flags">D3D12_MULTIPLE_FENCE_WAIT_FLAGS</a> that determines how to proceed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device1-seteventonmultiplefencecompletion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="hEvent">
            <para>Type: <b>HANDLE</b> A handle to the event object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device1-seteventonmultiplefencecompletion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns an HRESULT success or error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device1-seteventonmultiplefencecompletion">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.SetResidencyPriority(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY*)">
            <summary>This method sets residency priorities of a specified list of objects.</summary>
            <param name="NumObjects">
            <para>Type: <b>UINT</b> Specifies the number of objects in the <i>ppObjects</i> and <i>pPriorities</i> arrays.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device1-setresidencypriority#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppObjects">
            <para>Type: <b>ID3D12Pageable*</b> Specifies an array, of length <i>NumObjects</i>, containing references to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pageable">ID3D12Pageable</a> objects.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device1-setresidencypriority#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pPriorities">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_residency_priority">D3D12_RESIDENCY_PRIORITY</a>*</b> Specifies an array, of length <i>NumObjects</i>, of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_residency_priority">D3D12_RESIDENCY_PRIORITY</a> values for the list of objects.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device1-setresidencypriority#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns an HRESULT success or error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device1-setresidencypriority">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC*,System.Guid*,System.Object@)">
            <summary>Creates a pipeline state object from a pipeline state stream description.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_pipeline_state_stream_desc">D3D12_PIPELINE_STATE_STREAM_DESC</a>*</b> The address of a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_pipeline_state_stream_desc">D3D12_PIPELINE_STATE_STREAM_DESC</a> structure that describes the pipeline state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device2-createpipelinestate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (<b>GUID</b>) for the pipeline state interface (<a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pipelinestate">ID3D12PipelineState</a>). The <b>REFIID</b>, or <b>GUID</b>, of the interface to the pipeline state can be obtained by using the __uuidof() macro. For example, __uuidof(ID3D12PipelineState) will get the <b>GUID</b> of the interface to a pipeline state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device2-createpipelinestate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppPipelineState">
            <para>Type: <b>void**</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_COM_Outptr_</c> A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pipelinestate">ID3D12PipelineState</a> interface for the pipeline state object. The pipeline state object is an immutable state object. It contains no methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device2-createpipelinestate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>E_OUTOFMEMORY</b> if there is insufficient memory to create the pipeline state object. See <a href="https://docs.microsoft.com/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device2-createpipelinestate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)">
            <summary>Asynchronously makes objects resident for the device.</summary>
            <param name="Flags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_residency_flags">D3D12_RESIDENCY_FLAGS</a></b> Controls whether the objects should be made resident if the application is over its memory budget.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device3-enqueuemakeresident#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumObjects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of objects  in the <i>ppObjects</i> array to make resident for the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device3-enqueuemakeresident#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppObjects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pageable">ID3D12Pageable</a>*</b> A pointer to a memory block; contains an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pageable">ID3D12Pageable</a> interface pointers for the objects.</para>
            <para>Even though most D3D12 objects inherit from <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pageable">ID3D12Pageable</a>, residency changes are only supported on the following: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device3-enqueuemakeresident#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFenceToSignal">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12fence">ID3D12Fence</a>*</b> A pointer to the fence used to signal when the work is done.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device3-enqueuemakeresident#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="FenceValueToSignal">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT64</a></b> An unsigned 64-bit value signaled to the fence when the work is done.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device3-enqueuemakeresident#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device3-enqueuemakeresident">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.EnumerateMetaCommands(System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC*)">
            <summary>Queries reflection metadata about available meta commands.</summary>
            <param name="pNumMetaCommands">
            <para>Type: [in, out] <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a> containing the number of meta commands to query for. This field determines the size of the <i>pDescs</i> array, unless <i>pDescs</i> is <b>nullptr</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-enumeratemetacommands#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDescs">
            <para>Type: [out, optional] **[D3D12_META_COMMAND_DESC](./ns-d3d12-d3d12_meta_command_desc.md)\*** An optional pointer to an array of [D3D12_META_COMMAND_DESC](./ns-d3d12-d3d12_meta_command_desc.md) containing the descriptions of the available meta commands. Pass `nullptr` to have the number of available meta commands returned in <i>pNumMetaCommands</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-enumeratemetacommands#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: **[HRESULT](/windows/win32/com/structure-of-com-error-codes)** If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an [HRESULT](/windows/win32/com/structure-of-com-error-codes) error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-enumeratemetacommands">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.EnumerateMetaCommandParameters(System.Guid*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC*)">
            <summary>Queries reflection metadata about the parameters of the specified meta command.</summary>
            <param name="CommandId">
            <para>Type: <b>REFIID</b> A reference to the globally unique identifier (GUID) of the meta command whose parameters you wish to be returned in <i>pParameterDescs</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-enumeratemetacommandparameters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Stage">
            <para>Type: <b>D3D12_META_COMMAND_PARAMETER_STAGE</b> A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_meta_command_parameter_stage">D3D12_META_COMMAND_PARAMETER_STAGE</a> specifying the stage of the parameters that you wish to be included in the query.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-enumeratemetacommandparameters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pTotalStructureSizeInBytes">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> An optional pointer to a <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a> containing the size of the structure containing the parameter values, which you pass when creating/initializing/executing the meta command, as appropriate.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-enumeratemetacommandparameters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pParameterCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a> containing the number of parameters to query for. This field determines the size of the <i>pParameterDescs</i> array, unless <i>pParameterDescs</i> is <b>nullptr</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-enumeratemetacommandparameters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pParameterDescs">
            <para>Type: <b>D3D12_META_COMMAND_PARAMETER_DESC*</b> An optional pointer to an array of  <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_meta_command_parameter_desc">D3D12_META_COMMAND_PARAMETER_DESC</a> containing the descriptions of the parameters. Pass <b>nullptr</b> to have the parameter count returned in <i>pParameterCount</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-enumeratemetacommandparameters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b xmlns:loc="http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns:loc="http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-enumeratemetacommandparameters">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateMetaCommand(System.Guid*,System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)">
            <summary>Creates an instance of the specified meta command.</summary>
            <param name="CommandId">
            <para>Type: <b>REFIID</b> A reference to the globally unique identifier (GUID) of the meta command that you wish to instantiate.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-createmetacommand#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NodeMask">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">UINT</a></b> For single-adapter operation, set this to zero. If there are multiple adapter nodes, set a bit to identify the node (one of the device's physical adapters) to which the meta command applies. Each bit in the mask corresponds to a single node. Only one bit must be set. See <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-createmetacommand#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pCreationParametersData">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">void</a>*</b> An optional pointer to a constant structure containing the values of the parameters for creating the meta command.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-createmetacommand#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="CreationParametersDataSizeInBytes">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">SIZE_T</a></b> A <a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">SIZE_T</a> containing the size of the structure pointed to by <i>pCreationParametersData</i>, if set, otherwise 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-createmetacommand#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> A reference to the globally unique identifier (GUID) of the interface that you wish to be returned in <i>ppMetaCommand</i>. This is expected to be the GUID of <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12metacommand">ID3D12MetaCommand</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-createmetacommand#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppMetaCommand">
            <para>Type: <b>void**</b> A pointer to a memory block that receives a pointer to the meta command. This is the address of a pointer to an <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12metacommand">ID3D12MetaCommand</a>, representing  the meta command created.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-createmetacommand#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-createmetacommand">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateStateObject(Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC*,System.Guid*,System.Object@)">
            <summary>Creates an [ID3D12StateObject](/windows/win32/api/d3d12/nn-d3d12-id3d12stateobject).</summary>
            <param name="pDesc">The description of the state object to create.</param>
            <param name="riid">The GUID of the interface to create. Use <i>__uuidof(ID3D12StateObject)</i>.</param>
            <param name="ppStateObject">The returned state object.</param>
            <returns>
            <para>Returns S_OK if successful; otherwise, returns one of the following values: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-createstateobject">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.GetRaytracingAccelerationStructurePrebuildInfo(Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)">
            <summary>Query the driver for resource requirements to build an acceleration structure.</summary>
            <param name="pDesc">
            <para>Description of the acceleration structure build. This structure is shared with <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist4-buildraytracingaccelerationstructure">BuildRaytracingAccelerationStructure</a>.  For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_build_raytracing_acceleration_structure_inputs">D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS</a>. The implementation is allowed to look at all the CPU parameters in this struct and nested structs.  It may not inspect/dereference any GPU virtual addresses, other than to check to see if a pointer is NULL or not, such as the optional transform in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_raytracing_geometry_triangles_desc">D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC</a>, without dereferencing it. In other words, the calculation of resource requirements for the acceleration structure does not depend on the actual geometry data (such as vertex positions), rather it can only depend on overall properties, such as the number of triangles, number of instances etc.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-getraytracingaccelerationstructureprebuildinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pInfo">The result of the query.</param>
            <remarks>
            <para>The input acceleration structure description is the same as what goes into <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist4-buildraytracingaccelerationstructure">BuildRaytracingAccelerationStructure</a>. The result of this function lets the application provide the correct amount of output storage and scratch storage to <b>BuildRaytracingAccelerationStructure</b> given the same geometry. Builds can also be done with the same configuration passed to <b>GetAccelerationStructurePrebuildInfo</b> overall except equal or smaller counts for the number of geometries/instances or the  number of vertices/indices/AABBs in any given geometry.  In this case the storage requirements reported with the original sizes passed to <b>GetRaytracingAccelerationStructurePrebuildInfo</b> will be valid – the build may actually consume less space but not more.  This is handy for app scenarios where having conservatively large storage allocated for acceleration structures is fine. This method is on the device interface as opposed to command list on the assumption that drivers must be able to calculate resource requirements for an acceleration structure build from only looking at the CPU-visible portions of the call, without having to dereference any pointers to GPU memory containing actual vertex data, index data, etc.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-getraytracingaccelerationstructureprebuildinfo#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CheckDriverMatchingIdentifier(Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)">
            <summary>Reports the compatibility of serialized data, such as a serialized raytracing acceleration structure resulting from a call to CopyRaytracingAccelerationStructure with mode D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_SERIALIZE, with the current device/driver.</summary>
            <param name="SerializedDataType">The type of the serialized data. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_serialized_data_type">D3D12_SERIALIZED_DATA_TYPE</a>.</param>
            <param name="pIdentifierToCheck">Identifier from the header of the serialized data to check with the driver. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_serialized_data_driver_matching_identifier">D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER</a>.</param>
            <returns>The returned compatibility status. For more information, see <a href="../d3d12/ne-d3d12-d3d12_driver_matching_identifier_status.md">D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS</a>.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12device5-checkdrivermatchingidentifier">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild.GetDevice(System.Guid*,System.Object@)">
            <summary>Gets a pointer to the device that created this interface.</summary>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (<b>GUID</b>) for the device interface. The <b>REFIID</b>, or <b>GUID</b>, of the interface to the device can be obtained by using the __uuidof() macro. For example, __uuidof(<a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12device">ID3D12Device</a>) will get the <b>GUID</b> of the interface to a device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12devicechild-getdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvDevice">
            <para>Type: <b>void**</b> A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12device">ID3D12Device</a> interface for the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12devicechild-getdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12devicechild-getdevice">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Fence.GetCompletedValue">
            <summary>Gets the current value of the fence.</summary>
            <returns>
            <para>Type: <b><a href="/windows/win32/WinProg/windows-data-types">UINT64</a></b> Returns the current value of the fence. If the device has been removed, the return value will be <b>UINT64_MAX</b>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12fence-getcompletedvalue">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Fence.SetEventOnCompletion(System.UInt64,Windows.Win32.Foundation.HANDLE)">
            <summary>Specifies an event that should be fired when the fence reaches a certain value.</summary>
            <param name="Value">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">UINT64</a></b> The fence value when the event is to be signaled.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12fence-seteventoncompletion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="hEvent">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">HANDLE</a></b> A handle to the event object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12fence-seteventoncompletion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> This method returns <b>E_OUTOFMEMORY</b> if the kernel components don’t have sufficient memory to store the event in a list. See <a href="/windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12fence-seteventoncompletion">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Fence.Signal(System.UInt64)">
            <summary>Sets the fence to the specified value.</summary>
            <param name="Value">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">UINT64</a></b> The value to set the fence to.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12fence-signal#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12fence-signal">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.Close">
            <summary>Indicates that recording to the command list has finished.</summary>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns <b>S_OK</b> if successful; otherwise, returns one of the following values:</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-close">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.Reset(Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState)">
            <summary>Resets a command list back to its initial state as if a new command list was just created.</summary>
            <param name="pAllocator">
            <para>Type: <b>ID3D12CommandAllocator*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandallocator">ID3D12CommandAllocator</a> object that the device creates command lists from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-reset#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pInitialState">
            <para>Type: <b>ID3D12PipelineState*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pipelinestate">ID3D12PipelineState</a> object that contains the initial pipeline state for the command list.  This is optional and can be NULL.  If NULL, the runtime sets a dummy initial pipeline state so that drivers don't have to deal with undefined state.  The overhead for this is low, particularly for a command list, for which the overall cost of recording the command list likely dwarfs the cost of one initial state setting.  So there is little cost in  not setting the initial pipeline state parameter if it isn't convenient. For bundles on the other hand, it might make more sense to try to set the initial state parameter since bundles are likely smaller overall and can be reused frequently.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-reset#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns <b>S_OK</b> if successful; otherwise, returns one of the following values:</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-reset">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ClearState(Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState)">
            <summary>Resets the state of a direct command list back to the state it was in when the command list was created.</summary>
            <param name="pPipelineState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pipelinestate">ID3D12PipelineState</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pipelinestate">ID3D12PipelineState</a> object that contains the initial pipeline state for the command list.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>It is invalid to call <b>ClearState</b> on a bundle.  If an app calls <b>ClearState</b> on a bundle, the call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-close">Close</a> will return <b>E_FAIL</b>.</para>
            <para>When <b>ClearState</b> is called, all currently bound resources are unbound.  The primitive topology is set to <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_primitive_topology">D3D_PRIMITIVE_TOPOLOGY_UNDEFINED</a>.  Viewports, scissor rectangles, stencil reference value, and the blend factor are set to empty values (all zeros).  Predication is disabled.</para>
            <para>The app-provided pipeline state object becomes bound as the currently set pipeline state object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearstate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.DrawInstanced(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>Draws non-indexed, instanced primitives.</summary>
            <param name="VertexCountPerInstance">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of vertices to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="InstanceCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of instances to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartVertexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Index of the first vertex.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartInstanceLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value added to each index before reading per-instance data from a vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-drawinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>A draw API submits work to the rendering pipeline.</para>
            <para>Instancing might extend performance by reusing the same geometry to draw multiple objects in a scene. One example of instancing could be to draw the same object with different positions and colors.</para>
            <para>The vertex data for an instanced draw call typically comes from a vertex buffer that is bound to the pipeline. But, you could also provide the vertex data from a shader that has instanced data identified with a system-value semantic (SV_InstanceID).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-drawinstanced#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.DrawIndexedInstanced(System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)">
            <summary>Draws indexed, instanced primitives.</summary>
            <param name="IndexCountPerInstance">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of indices read from the index buffer for each instance.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="InstanceCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of instances to draw.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartIndexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The location of the first index read by the GPU from the index buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BaseVertexLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">INT</a></b> A value added to each index before reading a vertex from the vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartInstanceLocation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value added to each index before reading per-instance data from a vertex buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-drawindexedinstanced#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>A draw API submits work to the rendering pipeline. Instancing might extend performance by reusing the same geometry to draw multiple objects in a scene. One example of instancing could be to draw the same object with different positions and colors. Instancing requires multiple vertex buffers: at least one for per-vertex data and a second buffer for per-instance data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-drawindexedinstanced#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.Dispatch(System.UInt32,System.UInt32,System.UInt32)">
            <summary>Executes a compute shader on a thread group.</summary>
            <param name="ThreadGroupCountX">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of groups dispatched in the x direction. <i>ThreadGroupCountX</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-dispatch#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ThreadGroupCountY">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of groups dispatched in the y direction. <i>ThreadGroupCountY</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-dispatch#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ThreadGroupCountZ">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of groups dispatched in the z direction.  <i>ThreadGroupCountZ</i> must be less than or equal to D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535). In feature level 10 the value for <i>ThreadGroupCountZ</i> must be 1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-dispatch#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>You call the <b>Dispatch</b> method to execute commands in a compute shader. A compute shader can be run on many threads in parallel, within a thread group. Index a particular thread, within a thread group using a 3D vector given by (x,y,z).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-dispatch#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.CopyBufferRegion(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt64)">
            <summary>Copies a region of a buffer from one resource to another.</summary>
            <param name="pDstBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> Specifies the destination <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copybufferregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstOffset">
            <para>Type: <b>UINT64</b> Specifies a UINT64 offset (in bytes) into the destination resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copybufferregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> Specifies the source  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copybufferregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcOffset">
            <para>Type: <b>UINT64</b> Specifies a UINT64 offset (in bytes) into the source resource, to start the copy from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copybufferregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumBytes">
            <para>Type: <b>UINT64</b> Specifies the number of bytes to copy.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copybufferregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Consider using the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-copyresource">CopyResource</a> method when copying an entire resource, and use this method for copying regions of a resource.</para>
            <para><b>CopyBufferRegion</b> may be used to initialize resources which alias the same heap memory. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createplacedresource">CreatePlacedResource</a> for more details.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copybufferregion#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*)">
            <summary>This method uses the GPU to copy texture data between two locations. Both the source and the destination may reference texture data located within either a buffer resource or a texture resource.</summary>
            <param name="pDst">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_texture_copy_location">D3D12_TEXTURE_COPY_LOCATION</a>*</b> Specifies the destination <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_texture_copy_location">D3D12_TEXTURE_COPY_LOCATION</a>. The subresource referred to must be in the D3D12_RESOURCE_STATE_COPY_DEST state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytextureregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstX">
            <para>Type: <b>UINT</b> The x-coordinate of the upper left corner of the destination region.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytextureregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstY">
            <para>Type: <b>UINT</b> The y-coordinate of the upper left corner of the destination region. For a 1D subresource, this must be zero.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytextureregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstZ">
            <para>Type: <b>UINT</b> The z-coordinate of the upper left corner of the destination region. For a 1D or 2D subresource, this must be zero.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytextureregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_texture_copy_location">D3D12_TEXTURE_COPY_LOCATION</a>*</b> Specifies the source <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_texture_copy_location">D3D12_TEXTURE_COPY_LOCATION</a>. The subresource referred to must be in the D3D12_RESOURCE_STATE_COPY_SOURCE state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytextureregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcBox">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_box">D3D12_BOX</a>*</b> Specifies an optional  D3D12_BOX that sets the size of the source texture to copy.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytextureregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The source box must be within the size of the source resource. The destination offsets, (x, y, and z), allow the source box to be offset when writing into the destination resource; however, the dimensions of the source box and the offsets must be within the size of the resource. If you try and copy outside the destination resource or specify a source box that is larger than the source resource, the behavior of <b>CopyTextureRegion</b> is undefined. If you created a device that supports the <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a>, the debug output reports an error on this invalid <b>CopyTextureRegion</b> call. Invalid parameters to <b>CopyTextureRegion</b> cause undefined behavior and might result in incorrect rendering, clipping, no copy, or even the removal of the rendering device.</para>
            <para>If the resources are buffers, all coordinates are in bytes; if the resources are textures, all coordinates are in texels. <b>CopyTextureRegion</b> performs the copy on the GPU (similar to a <c>memcpy</c> by the CPU). As a consequence, the source and destination resources:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytextureregion#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.CopyResource(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource)">
            <summary>Copies the entire contents of the source resource to the destination resource.</summary>
            <param name="pDstResource">
            <para>Type: <b>ID3D12Resource*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>interface that represents the destination resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copyresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcResource">
            <para>Type: <b>ID3D12Resource*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>interface that represents the source resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copyresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>CopyResource</b> operations are performed on the GPU and do not incur a significant CPU workload linearly dependent on the size of the data to copy.</para>
            <para><b>CopyResource</b> may be used to initialize resources which alias the same heap memory. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createplacedresource">CreatePlacedResource</a> for more details. <h3><a id="Debug_layer"></a><a id="debug_layer"></a><a id="DEBUG_LAYER"></a>Debug layer</h3> The debug layer will issue an error if the source subresource is not in the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_COPY_SOURCE</a> state.</para>
            <para>The debug layer will issue an error if the destination subresource is not in the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_COPY_DEST </a>state.</para>
            <para>This method has a few restrictions designed for improving performance. For instance, the source and destination resources: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copyresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE*,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)">
            <summary>Copies tiles from buffer to tiled resource or vice versa.</summary>
            <param name="pTiledResource">
            <para>Type: <b>ID3D12Resource*</b> A pointer to a tiled resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pTileRegionStartCoordinate">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tiled_resource_coordinate">D3D12_TILED_RESOURCE_COORDINATE</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tiled_resource_coordinate">D3D12_TILED_RESOURCE_COORDINATE</a> structure that describes the starting coordinates of the tiled resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pTileRegionSize">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tile_region_size">D3D12_TILE_REGION_SIZE</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_tile_region_size">D3D12_TILE_REGION_SIZE</a> structure that describes the size of the tiled region.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pBuffer">
            <para>Type: <b>ID3D12Resource*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a> that represents a default, dynamic, or staging buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BufferStartOffsetInBytes">
            <para>Type: <b>UINT64</b> The offset in bytes into the buffer at <i>pBuffer</i> to start the operation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_tile_copy_flags">D3D12_TILE_COPY_FLAGS</a></b> A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_tile_copy_flags">D3D12_TILE_COPY_FLAGS</a>-typed values that are combined by using a bitwise OR operation and that identifies how to copy tiles.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>CopyTiles</b> drops write operations to unmapped areas and handles read operations from unmapped areas (except on Tier_1 tiled resources, where reading and writing unmapped areas is invalid - refer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_tiled_resources_tier">D3D12_TILED_RESOURCES_TIER</a>).</para>
            <para>If a copy operation involves writing to the same memory location multiple times because multiple locations in the destination resource are mapped to the same tile memory, the resulting write operations to multi-mapped tiles are non-deterministic and non-repeatable; that is, accesses to the tile memory happen in whatever order the hardware happens to execute the copy operation. The tiles involved in the copy operation can't include tiles that contain packed mipmaps or results of the copy operation are undefined. To transfer data to and from mipmaps that the hardware packs into the one-or-more tiles that constitute the packed mips, you must use the standard (that is, non-tile specific) copy APIs like <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-copytextureregion">CopyTextureRegion</a>. <b>CopyTiles</b> does copy data in a slightly different pattern than the standard copy methods. The memory layout of the tiles in the non-tiled buffer resource side of the copy operation is linear in memory within 64 KB tiles, which the hardware and driver swizzle and de-swizzle per tile as appropriate when they transfer to and from a tiled resource. For multisample antialiasing (MSAA) surfaces, the hardware and driver traverse each pixel's samples in sample-index order before they move to the next pixel. For tiles that are partially filled on the right side (for a surface that has a width not a multiple of tile width in pixels), the pitch and stride to move down a row is the full size in bytes of the number pixels that would fit across the tile if the tile was full. So, there can be a gap between each row of pixels in memory. Mipmaps that are smaller than a tile are not packed together in the linear layout, which might seem to be a waste of memory space, but as mentioned you can't use <b>CopyTiles</b> to copy to mipmaps that the hardware packs together. You can just use generic copy APIs, like <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-copytextureregion">CopyTextureRegion</a>, to copy small mipmaps individually.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-copytiles#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ResolveSubresource(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT)">
            <summary>Copy a multi-sampled resource into a non-multi-sampled resource.</summary>
            <param name="pDstResource">
            <para>Type: [in] <b>ID3D12Resource*</b> Destination resource. Must be a created on a <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_heap_type">D3D12_HEAP_TYPE_DEFAULT</a> heap and be single-sampled. See <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstSubresource">
            <para>Type: [in] <b>UINT</b> A zero-based index, that identifies the destination subresource. Use <a href="https://docs.microsoft.com/windows/win32/direct3d12/d3d12calcsubresource">D3D12CalcSubresource</a> to calculate the subresource index if the parent resource is complex.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcResource">
            <para>Type: [in] <b>ID3D12Resource*</b> Source resource. Must be multisampled.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcSubresource">
            <para>Type: [in] <b>UINT</b> The source subresource of the source resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Format">
            <para>Type: [in] <b>DXGI_FORMAT</b> A <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> that indicates how the multisampled resource will be resolved to a single-sampled resource. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvesubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><h3><a id="Debug_layer"></a><a id="debug_layer"></a><a id="DEBUG_LAYER"></a>Debug layer</h3> The debug layer will issue an error if the subresources referenced by the source view is not in the  <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_RESOLVE_SOURCE</a> state. The debug layer will issue an error if the destination buffer is not in the  <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_RESOLVE_DEST</a>state. The source and destination resources must be the same resource type and have the same dimensions. In addition, they must have compatible formats. There are three scenarios for this: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvesubresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.IASetPrimitiveTopology(Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY)">
            <summary>Bind information about the primitive type, and data order that describes input data for the input assembler stage.</summary>
            <param name="PrimitiveTopology">
            <para>Type: <b>D3D12_PRIMITIVE_TOPOLOGY</b> The type of primitive and ordering of the primitive data (see <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_primitive_topology">D3D_PRIMITIVE_TOPOLOGY</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-iasetprimitivetopology#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-iasetprimitivetopology">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT*)">
            <summary>Bind an array of viewports to the rasterizer stage of the pipeline.</summary>
            <param name="NumViewports">
            <para>Type: <b>UINT</b> Number of viewports to bind. The range of valid values is (0, D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-rssetviewports#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pViewports">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_viewport">D3D12_VIEWPORT</a>*</b> An array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_viewport">D3D12_VIEWPORT</a> structures to bind to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-rssetviewports#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>All viewports must be set atomically as one operation. Any viewports not defined by the call are disabled.</para>
            <para>Which viewport to use is determined by the <a href="https://docs.microsoft.com/windows/desktop/direct3dhlsl/dx-graphics-hlsl-semantics">SV_ViewportArrayIndex</a> semantic output by a geometry shader; if a geometry shader does not specify the semantic, Direct3D will use the first viewport in the array.</para>
            <para><div class="alert"><b>Note</b>  Even though you specify float values to the members of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_viewport">D3D12_VIEWPORT</a> structure for the <i>pViewports</i> array in a call to  <b>RSSetViewports</b> for <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> 9_x, <b>RSSetViewports</b> uses DWORDs internally. Because of this behavior, when you use a negative top left corner for the viewport, the call to  <b>RSSetViewports</b> for feature levels 9_x fails. This failure occurs because <b>RSSetViewports</b> for 9_x casts the floating point values into unsigned integers without validation, which results in integer overflow. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-rssetviewports#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)" -->
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.OMSetBlendFactor(System.Single*)">
            <summary>Sets the blend factor that modulate values for a pixel shader, render target, or both.</summary>
            <param name="BlendFactor">
            <para>Type: <b>const FLOAT[4]</b> Array of blend factors, one for each RGBA component.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-omsetblendfactor#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>If you created the blend-state object with [D3D12_BLEND_BLEND_FACTOR](./ne-d3d12-d3d12_blend.md) or **D3D12_BLEND_INV_BLEND_FACTOR**, then the blending stage uses the non-NULL array of blend factors. Otherwise,the blending stage doesn't use the non-NULL array of blend factors; the runtime stores the blend factors. If you pass NULL, then the runtime uses or stores a blend factor equal to `{ 1, 1, 1, 1 }`.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-omsetblendfactor#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.OMSetStencilRef(System.UInt32)">
            <summary>Sets the reference value for depth stencil tests.</summary>
            <param name="StencilRef">
            <para>Type: <b>UINT</b> Reference value to perform against when doing a depth-stencil test.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-omsetstencilref#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-omsetstencilref">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetPipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState)">
            <summary>Sets all shaders and programs most of the fixed-function state of the graphics processing unit (GPU) pipeline.</summary>
            <param name="pPipelineState">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pipelinestate">ID3D12PipelineState</a>*</b> Pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12pipelinestate">ID3D12PipelineState</a> containing the pipeline state data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setpipelinestate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setpipelinestate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ResourceBarrier(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])">
            <summary>Notifies the driver that it needs to synchronize multiple accesses to resources.</summary>
            <param name="NumBarriers">
            <para>Type: <b>UINT</b> The number of submitted barrier descriptions.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resourcebarrier#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pBarriers">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_resource_barrier">D3D12_RESOURCE_BARRIER</a>*</b> Pointer to an array of barrier descriptions.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resourcebarrier#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>There are three types of barrier descriptions: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resourcebarrier#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ExecuteBundle(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList)">
            <summary>Executes a bundle.</summary>
            <param name="pCommandList">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12graphicscommandlist">ID3D12GraphicsCommandList</a>*</b> Specifies the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12graphicscommandlist">ID3D12GraphicsCommandList</a> that determines the bundle to be executed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-executebundle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Bundles inherit all state from the parent command list on which <b>ExecuteBundle</b> is called, except the pipeline state object and primitive topology. All of the state that is set in a bundle will affect the state of the parent command list. Note that <b>ExecuteBundle</b> is not a predicated operation.</para>
            <para><h3><a id="Runtime_validation"></a><a id="runtime_validation"></a><a id="RUNTIME_VALIDATION"></a>Runtime validation</h3> The runtime will validate that the "callee" is a bundle and that the "caller" is a direct command list.  The runtime will also validate that the bundle has been closed.  If the contract is violated, the runtime will silently drop the call. Validation failure will result in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-close">Close</a> returning E_INVALIDARG.</para>
            <para><h3><a id="Debug_layer"></a><a id="debug_layer"></a><a id="DEBUG_LAYER"></a>Debug layer</h3> The debug layer will issue a warning in the same cases where the runtime will fail. The debug layer will issue a warning if a predicate is set when <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-executecommandlists">ExecuteCommandList</a> is called. Also, the debug layer will issue an error if it detects that any resource reference by the command list has been destroyed.</para>
            <para>The debug layer will also validate that the command allocator associated with the bundle has not been reset since <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-close">Close</a> was called on the command list.  This validation occurs at <b>ExecuteBundle</b> time, and when the parent command list is executed on a command queue.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-executebundle#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetDescriptorHeaps(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])">
            <summary>Changes the currently bound descriptor heaps that are associated with a command list.</summary>
            <param name="NumDescriptorHeaps">
            <para>Type: [in] <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Number of descriptor heaps to bind.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setdescriptorheaps#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDescriptorHeaps">
            <para>Type: [in] <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12descriptorheap">ID3D12DescriptorHeap</a>*</b> A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12descriptorheap">ID3D12DescriptorHeap</a> objects for the heaps to set on the command list. You can only bind descriptor heaps of type [**D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV**](/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-setdescriptorheaps) and [**D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER**](/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-setdescriptorheaps). Only one descriptor heap of each type can be set at one time, which means a maximum of 2 heaps (one sampler, one CBV/SRV/UAV) can be set at one time.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setdescriptorheaps#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>SetDescriptorHeaps</b> can be called on a bundle, but the bundle descriptor heaps must match the calling command list descriptor heap. For more information on bundle restrictions, refer to <a href="https://docs.microsoft.com/windows/desktop/direct3d12/recording-command-lists-and-bundles">Creating and Recording Command Lists and Bundles</a>. All previously set heaps are unset by the call. At most one heap of each shader-visible type can be set in the call. Changing descriptor heaps can incur a pipeline flush on some hardware. Because of this, it is recommended to use a single shader-visible heap of each type, and set it once per frame, rather than regularly changing the bound descriptor heaps. Instead, use [**ID3D12Device::CopyDescriptors**](/windows/win32/api/d3d12/nf-d3d12-id3d12device-copydescriptors) and [**ID3D12Device::CopyDescriptorsSimple**](/windows/win32/api/d3d12/nf-d3d12-id3d12device-copydescriptorssimple) to copy the required descriptors from shader-opaque heaps to the single shader-visible heap as required during rendering.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setdescriptorheaps#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetComputeRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature)">
            <summary>Sets the layout of the compute root signature.</summary>
            <param name="pRootSignature">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12rootsignature">ID3D12RootSignature</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12rootsignature">ID3D12RootSignature</a> object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootsignature">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetGraphicsRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature)">
            <summary>Sets the layout of the graphics root signature.</summary>
            <param name="pRootSignature">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12rootsignature">ID3D12RootSignature</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12rootsignature">ID3D12RootSignature</a> object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootsignature">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetComputeRootDescriptorTable(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE)">
            <summary>Sets a descriptor table into the compute root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b>UINT</b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootdescriptortable#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BaseDescriptor">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_gpu_descriptor_handle">D3D12_GPU_DESCRIPTOR_HANDLE</a></b> A GPU_descriptor_handle object for the base descriptor to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootdescriptortable#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootdescriptortable">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetGraphicsRootDescriptorTable(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE)">
            <summary>Sets a descriptor table into the graphics root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootdescriptortable#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BaseDescriptor">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_gpu_descriptor_handle">D3D12_GPU_DESCRIPTOR_HANDLE</a></b> A GPU_descriptor_handle object for the base descriptor to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootdescriptortable#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootdescriptortable">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetComputeRoot32BitConstant(System.UInt32,System.UInt32,System.UInt32)">
            <summary>Sets a constant in the compute root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b>UINT</b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputeroot32bitconstant#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcData">
            <para>Type: <b>UINT</b> The source data for the constant to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputeroot32bitconstant#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DestOffsetIn32BitValues">
            <para>Type: <b>UINT</b> The offset, in 32-bit values, to set the constant in the root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputeroot32bitconstant#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputeroot32bitconstant">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetGraphicsRoot32BitConstant(System.UInt32,System.UInt32,System.UInt32)">
            <summary>Sets a constant in the graphics root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsroot32bitconstant#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcData">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The source data for the constant to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsroot32bitconstant#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DestOffsetIn32BitValues">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The offset, in 32-bit values, to set the constant in the root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsroot32bitconstant#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsroot32bitconstant">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetComputeRoot32BitConstants(System.UInt32,System.UInt32,System.Void*,System.UInt32)">
            <summary>Sets a group of constants in the compute root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputeroot32bitconstants#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Num32BitValuesToSet">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of constants to set in the root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputeroot32bitconstants#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcData">
            <para>Type: <b>const void*</b> The source data for the group of constants to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputeroot32bitconstants#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DestOffsetIn32BitValues">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The offset, in 32-bit values, to set the first constant of the group in the root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputeroot32bitconstants#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputeroot32bitconstants">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetGraphicsRoot32BitConstants(System.UInt32,System.UInt32,System.Void*,System.UInt32)">
            <summary>Sets a group of constants in the graphics root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsroot32bitconstants#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Num32BitValuesToSet">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of constants to set in the root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsroot32bitconstants#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcData">
            <para>Type: <b>const void*</b> The source data for the group of constants to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsroot32bitconstants#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DestOffsetIn32BitValues">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The offset, in 32-bit values, to set the first constant of the group in the root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsroot32bitconstants#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsroot32bitconstants">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetComputeRootConstantBufferView(System.UInt32,System.UInt64)">
            <summary>Sets a CPU descriptor handle for the constant buffer in the compute root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b>UINT</b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootconstantbufferview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BufferLocation">
            <para>Type: <b>D3D12_GPU_VIRTUAL_ADDRESS</b> Specifies the D3D12_GPU_VIRTUAL_ADDRESS of the constant buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootconstantbufferview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootconstantbufferview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetGraphicsRootConstantBufferView(System.UInt32,System.UInt64)">
            <summary>Sets a CPU descriptor handle for the constant buffer in the graphics root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootconstantbufferview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BufferLocation">
            <para>Type: <b>D3D12_GPU_VIRTUAL_ADDRESS</b> The GPU virtual address of the constant buffer. D3D12_GPU_VIRTUAL_ADDRESS is a typedef'd alias of UINT64.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootconstantbufferview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootconstantbufferview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetComputeRootShaderResourceView(System.UInt32,System.UInt64)">
            <summary>Sets a CPU descriptor handle for the shader resource in the compute root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b>UINT</b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BufferLocation">
            <para>Type: <b>D3D12_GPU_VIRTUAL_ADDRESS</b> The GPU virtual address of the buffer. D3D12_GPU_VIRTUAL_ADDRESS is a typedef'd alias of UINT64.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootshaderresourceview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetGraphicsRootShaderResourceView(System.UInt32,System.UInt64)">
            <summary>Sets a CPU descriptor handle for the shader resource in the graphics root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BufferLocation">
            <para>Type: <b>D3D12_GPU_VIRTUAL_ADDRESS</b> The GPU virtual address of the Buffer. Textures are not supported. D3D12_GPU_VIRTUAL_ADDRESS is a typedef'd alias of UINT64.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootshaderresourceview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootshaderresourceview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetComputeRootUnorderedAccessView(System.UInt32,System.UInt64)">
            <summary>Sets a CPU descriptor handle for the unordered-access-view resource in the compute root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BufferLocation">
            <para>Type: <b>D3D12_GPU_VIRTUAL_ADDRESS</b> The GPU virtual address of the buffer. D3D12_GPU_VIRTUAL_ADDRESS is a typedef'd alias of UINT64.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setcomputerootunorderedaccessview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetGraphicsRootUnorderedAccessView(System.UInt32,System.UInt64)">
            <summary>Sets a CPU descriptor handle for the unordered-access-view resource in the graphics root signature.</summary>
            <param name="RootParameterIndex">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The slot number for binding.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="BufferLocation">
            <para>Type: <b>D3D12_GPU_VIRTUAL_ADDRESS</b> The GPU virtual address of the buffer. D3D12_GPU_VIRTUAL_ADDRESS is a typedef'd alias of UINT64.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootunorderedaccessview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setgraphicsrootunorderedaccessview">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW*)">
            <summary>Sets the view for the index buffer.</summary>
            <param name="pView">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_index_buffer_view">D3D12_INDEX_BUFFER_VIEW</a>*</b> The view specifies the index buffer's address, size, and <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>, as a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_index_buffer_view">D3D12_INDEX_BUFFER_VIEW</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-iasetindexbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Only one index buffer can be bound to the graphics pipeline at any one time.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-iasetindexbuffer#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW*)">
            <summary>Sets a CPU descriptor handle for the vertex buffers.</summary>
            <param name="StartSlot">
            <para>Type: <b>UINT</b> Index into the device's zero-based array to begin setting vertex buffers.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b>UINT</b> The number of views in the <i>pViews</i> array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pViews">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_vertex_buffer_view">D3D12_VERTEX_BUFFER_VIEW</a>*</b> Specifies the vertex buffer views in an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_vertex_buffer_view">D3D12_VERTEX_BUFFER_VIEW</a> structures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-iasetvertexbuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-iasetvertexbuffers">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SOSetTargets(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW*)">
            <summary>Sets the stream output buffer views.</summary>
            <param name="StartSlot">
            <para>Type: <b>UINT</b> Index into the device's zero-based array to begin setting stream output buffers.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-sosettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumViews">
            <para>Type: <b>UINT</b> The number of entries in the <i>pViews</i> array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-sosettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pViews">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_stream_output_buffer_view">D3D12_STREAM_OUTPUT_BUFFER_VIEW</a>*</b> Specifies an array of  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_stream_output_buffer_view">D3D12_STREAM_OUTPUT_BUFFER_VIEW</a> structures.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-sosettargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-sosettargets">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.OMSetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,Windows.Win32.Foundation.BOOL,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*)">
            <summary>Sets CPU descriptor handles for the render targets and depth stencil.</summary>
            <param name="NumRenderTargetDescriptors">
            <para>Type: <b>UINT</b> The number of entries in the <i>pRenderTargetDescriptors</i> array (ranges between 0 and <b>D3D12_SIMULTANEOUS_RENDER_TARGET_COUNT</b>). If this parameter is nonzero, the number of entries in the array to which pRenderTargetDescriptors points must equal the number in this parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-omsetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRenderTargetDescriptors">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a>*</b> Specifies an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a> structures that describe the CPU descriptor handles that represents the start of the heap of render target descriptors. If this parameter is NULL and NumRenderTargetDescriptors is 0, no render targets are bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-omsetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="RTsSingleHandleToDescriptorRange">
            <para>Type: <b>BOOL</b> <b>True</b> means the handle passed in is the pointer to a contiguous range of <i>NumRenderTargetDescriptors</i>  descriptors.  This case is useful if the set of descriptors to bind already happens to be contiguous in memory (so all that’s needed is a handle to the first one).  For example, if  <i>NumRenderTargetDescriptors</i> is 3 then the memory layout is taken as follows: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-omsetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDepthStencilDescriptor">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a> structure that describes the CPU descriptor handle that represents the start of the heap that holds the depth stencil descriptor. If this parameter is NULL, no depth stencil descriptor is bound.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-omsetrendertargets#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-omsetrendertargets">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.UInt32,Windows.Win32.Foundation.RECT*)">
            <summary>Clears the depth-stencil resource.</summary>
            <param name="DepthStencilView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> Describes the CPU descriptor handle that represents the start of the heap for the depth stencil to be cleared.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ClearFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_clear_flags">D3D12_CLEAR_FLAGS</a></b> A combination of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_clear_flags">D3D12_CLEAR_FLAGS</a> values that are combined by using a bitwise OR operation. The resulting value identifies the type of data to clear (depth buffer, stencil buffer, or both).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Depth">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">FLOAT</a></b> A value to clear the depth buffer with. This value will be clamped between 0 and 1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Stencil">
            <para>Type: <b>UINT8</b> A value to clear the stencil buffer with.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumRects">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of rectangles in the array that the <i>pRects</i> parameter specifies.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRects">
            <para>Type: <b>const <b>D3D12_RECT</b>*</b> An array of <b>D3D12_RECT</b> structures for the rectangles in the resource view to clear. If <b>NULL</b>, <b>ClearDepthStencilView</b> clears the entire resource view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-cleardepthstencilview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>ClearDepthStencilView</b> may be used to initialize resources which alias the same heap memory. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createplacedresource">CreatePlacedResource</a> for more details. <h3><a id="Runtime_validation"></a><a id="runtime_validation"></a><a id="RUNTIME_VALIDATION"></a>Runtime validation</h3> For floating-point inputs, the runtime will set denormalized values to 0 (while preserving NANs).</para>
            <para>Validation failure will result in the call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-close">Close</a> returning <b>E_INVALIDARG</b>.</para>
            <para><h3><a id="Debug_layer"></a><a id="debug_layer"></a><a id="DEBUG_LAYER"></a>Debug layer</h3> The debug layer will issue errors if the input colors are denormalized.</para>
            <para>The debug layer will issue an error if the subresources referenced by the view are not in the appropriate state. For <b>ClearDepthStencilView</b>, the state must be in the state <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_DEPTH_WRITE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-cleardepthstencilview#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)">
            <summary>Sets all the elements in a render target to one value.</summary>
            <param name="RenderTargetView">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_cpu_descriptor_handle">D3D12_CPU_DESCRIPTOR_HANDLE</a></b> Specifies a D3D12_CPU_DESCRIPTOR_HANDLE structure that describes the CPU descriptor handle that represents the start of the heap for the render target to be cleared.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ColorRGBA">
            <para>Type: <b>const FLOAT[4]</b> A 4-component array that represents the color to fill the render target with.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumRects">
            <para>Type: <b>UINT</b> The number of rectangles in the array that the <i>pRects</i> parameter specifies.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRects">
            <para>Type: <b>const D3D12_RECT*</b> An array of <b>D3D12_RECT</b> structures for the rectangles in the resource view to clear. If <b>NULL</b>, <b>ClearRenderTargetView</b> clears the entire resource view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearrendertargetview#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>ClearRenderTargetView</b> may be used to initialize resources which alias the same heap memory. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createplacedresource">CreatePlacedResource</a> for more details. <h3><a id="Runtime_validation"></a><a id="runtime_validation"></a><a id="RUNTIME_VALIDATION"></a>Runtime validation</h3> For floating-point inputs, the runtime will set denormalized values to 0 (while preserving NANs). Validation failure will result in the call to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-close">Close</a> returning <b>E_INVALIDARG</b>.</para>
            <para><h3><a id="Debug_layer"></a><a id="debug_layer"></a><a id="DEBUG_LAYER"></a>Debug layer</h3> The debug layer will issue errors if the input colors are denormalized. The debug layer will issue an error if the subresources referenced by the view are not in the appropriate state. For <b>ClearRenderTargetView</b>, the state must be <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_RENDER_TARGET</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearrendertargetview#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32*,System.UInt32,Windows.Win32.Foundation.RECT*)">
            <summary>Sets all the elements in a unordered-access view (UAV) to the specified integer values.</summary>
            <param name="ViewGPUHandleInCurrentHeap">
            <para>Type: [in] **[D3D12_GPU_DESCRIPTOR_HANDLE](./ns-d3d12-d3d12_gpu_descriptor_handle.md)** A [D3D12_GPU_DESCRIPTOR_HANDLE](./ns-d3d12-d3d12_gpu_descriptor_handle.md) that references an initialized descriptor for the unordered-access view (UAV) that is to be cleared. This descriptor must be in a shader-visible descriptor heap, which must be set on the command list via [SetDescriptorHeaps](nf-d3d12-id3d12graphicscommandlist-setdescriptorheaps.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ViewCPUHandle">
            <para>Type: [in] **[D3D12_CPU_DESCRIPTOR_HANDLE](./ns-d3d12-d3d12_cpu_descriptor_handle.md)** A [D3D12_CPU_DESCRIPTOR_HANDLE](./ns-d3d12-d3d12_cpu_descriptor_handle.md) in a non-shader visible descriptor heap that references an initialized descriptor for the unordered-access view (UAV) that is to be cleared. > [!IMPORTANT] > This descriptor must not be in a shader-visible descriptor heap. This is to allow drivers thath implement the clear as fixed-function hardware (rather than via a dispatch) to efficiently read from the descriptor, as shader-visible heaps may be created in **WRITE_BACK** memory (similar to **D3D12_HEAP_TYPE_UPLOAD** heap types), and CPU reads from this type of memory are prohibitively slow.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pResource">
            <para>Type: [in] **[ID3D12Resource](./nn-d3d12-id3d12resource.md)\*** A pointer to the [ID3D12Resource](./nn-d3d12-id3d12resource.md) interface that represents the unordered-access-view (UAV) resource to clear.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Values">
            <para>Type: [in] **const UINT[4]** A 4-component array that containing the values to fill the unordered-access-view resource with.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumRects">
            <para>Type: [in] **UINT** The number of rectangles in the array that the *pRects* parameter specifies.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRects">
            <para>Type: [in] **const [D3D12_RECT](/windows/win32/direct3d12/d3d12-rect)\*** An array of **D3D12_RECT** structures for the rectangles in the resource view to clear. If **NULL**, **ClearUnorderedAccessViewUint** clears the entire resource view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewuint#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)">
            <summary>Sets all the elements in a unordered access view to the specified float values.</summary>
            <param name="ViewGPUHandleInCurrentHeap">
            <para>Type: [in] **[D3D12_GPU_DESCRIPTOR_HANDLE](./ns-d3d12-d3d12_gpu_descriptor_handle.md)** A [D3D12_GPU_DESCRIPTOR_HANDLE](./ns-d3d12-d3d12_gpu_descriptor_handle.md) that references an initialized descriptor for the unordered-access view (UAV) that is to be cleared. This descriptor must be in a shader-visible descriptor heap, which must be set on the command list via [SetDescriptorHeaps](nf-d3d12-id3d12graphicscommandlist-setdescriptorheaps.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewfloat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ViewCPUHandle">
            <para>Type: [in] **[D3D12_CPU_DESCRIPTOR_HANDLE](./ns-d3d12-d3d12_cpu_descriptor_handle.md)** A [D3D12_CPU_DESCRIPTOR_HANDLE](./ns-d3d12-d3d12_cpu_descriptor_handle.md) in a non-shader visible descriptor heap that references an initialized descriptor for the unordered-access view (UAV) that is to be cleared. > [!IMPORTANT] > This descriptor must not be in a shader-visible descriptor heap. This is to allow drivers thath implement the clear as fixed-function hardware (rather than via a dispatch) to efficiently read from the descriptor, as shader-visible heaps may be created in **WRITE_BACK** memory (similar to **D3D12_HEAP_TYPE_UPLOAD** heap types), and CPU reads from this type of memory are prohibitively slow.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewfloat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pResource">
            <para>Type: [in] **[ID3D12Resource](./nn-d3d12-id3d12resource.md)\*** A pointer to the [ID3D12Resource](./nn-d3d12-id3d12resource.md) interface that represents the unordered-access-view (UAV) resource to clear.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewfloat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Values">
            <para>Type: [in] **const FLOAT[4]** A 4-component array that containing the values to fill the unordered-access-view resource with.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewfloat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumRects">
            <para>Type: [in] **UINT** The number of rectangles in the array that the *pRects* parameter specifies.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewfloat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRects">
            <para>Type: [in] **const [D3D12_RECT](/windows/win32/direct3d12/d3d12-rect)\*** An array of **D3D12_RECT** structures for the rectangles in the resource view to clear. If **NULL**, **ClearUnorderedAccessViewFloat** clears the entire resource view.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewfloat#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-clearunorderedaccessviewfloat#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION*)">
            <summary>Discards a resource.</summary>
            <param name="pResource">
            <para>Type: [in] <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a> interface for the resource to discard.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-discardresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRegion">
            <para>Type: [in, optional] <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_discard_region">D3D12_DISCARD_REGION</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_discard_region">D3D12_DISCARD_REGION</a> structure that describes details for the discard-resource operation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-discardresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The semantics of <b>DiscardResource</b> change based on the command list type. For <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_command_list_type">D3D12_COMMAND_LIST_TYPE_DIRECT</a>, the following two rules apply: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-discardresource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.BeginQuery(Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE,System.UInt32)">
            <summary>Starts a query running.</summary>
            <param name="pQueryHeap">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12queryheap">ID3D12QueryHeap</a>*</b> Specifies the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12queryheap">ID3D12QueryHeap</a> containing the query.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-beginquery#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Type">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_query_type">D3D12_QUERY_TYPE</a></b> Specifies one member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_query_type">D3D12_QUERY_TYPE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-beginquery#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Index">
            <para>Type: <b>UINT</b> Specifies the index of the query within the query heap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-beginquery#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>See <a href="https://docs.microsoft.com/windows/desktop/direct3d12/queries">Queries</a> for more information about D3D12 queries.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-beginquery#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.EndQuery(Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE,System.UInt32)">
            <summary>Ends a running query.</summary>
            <param name="pQueryHeap">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12queryheap">ID3D12QueryHeap</a>*</b> Specifies the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12queryheap">ID3D12QueryHeap</a> containing the query.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-endquery#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Type">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_query_type">D3D12_QUERY_TYPE</a></b> Specifies one member of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_query_type">D3D12_QUERY_TYPE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-endquery#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Index">
            <para>Type: <b>UINT</b> Specifies the index of the query in the query heap.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-endquery#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>See <a href="https://docs.microsoft.com/windows/desktop/direct3d12/queries">Queries</a> for more information about D3D12 queries.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-endquery#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ResolveQueryData(Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_TYPE,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64)">
            <summary>Extracts data from a query. ResolveQueryData works with all heap types (default, upload, and readback).  ResolveQueryData works with all heap types (default, upload, and readback). .</summary>
            <param name="pQueryHeap">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12queryheap">ID3D12QueryHeap</a>*</b> Specifies the  <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12queryheap">ID3D12QueryHeap</a> containing the queries to resolve.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvequerydata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Type">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_query_type">D3D12_QUERY_TYPE</a></b> Specifies the type of query, one member of <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_query_type">D3D12_QUERY_TYPE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvequerydata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="StartIndex">
            <para>Type: <b>UINT</b> Specifies an index of the first query to resolve.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvequerydata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumQueries">
            <para>Type: <b>UINT</b> Specifies the number of queries to resolve.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvequerydata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDestinationBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> Specifies an <a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a> destination buffer, which must be in the state <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_COPY_DEST</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvequerydata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="AlignedDestinationBufferOffset">
            <para>Type: <b>UINT64</b> Specifies an alignment offset into the destination buffer. Must be a multiple of 8 bytes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvequerydata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><b>ResolveQueryData</b> performs a batched operation that writes query data into a destination buffer.  Query data is written contiguously to the destination buffer, and the parameter. <b>ResolveQueryData</b> turns application-opaque query data in an application-opaque query heap into adapter-agnostic values usable by your application. Resolving queries within a heap that have not been completed (so have had [**ID3D12GraphicsCommandList::BeginQuery**](/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-beginquery) called for them, but not [**ID3D12GraphicsCommandList::EndQuery**](/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-endquery)), or that have been uninitialized, results in undefined behaviour and might cause device hangs or removal. The debug layer will emit an error if it detects an application has resolved incomplete or uninitialized queries. > [!NOTE] > Resolving incomplete or uninitialized queries is undefined behaviour because the driver might internally store GPUVAs or other data within unresolved queries. And so attempting to resolve these queries on uninitialized data could cause a page fault or device hang. Older versions of the debug layer didn't validate this behavior. Binary occlusion queries write 64-bits per query. The least significant bit is either 0 (the object was entirely occluded) or 1 (at least 1 sample of the object would have been drawn). The rest of the bits are 0. Occlusion queries write 64-bits per query. The value is the number of samples that passed testing. Timestamp queries write 64-bits per query, which is a tick value that must be compared to the respective command queue frequency (see [Timing](/windows/win32/direct3d12/timing)). Pipeline statistics queries write a [**D3D12_QUERY_DATA_PIPELINE_STATISTICS**](/windows/win32/api/d3d12/ns-d3d12-d3d12_query_data_pipeline_statistics) structure per query. All stream-out statistics queries write a [**D3D12_QUERY_DATA_SO_STATISTICS**](/windows/win32/api/d3d12/ns-d3d12-d3d12_query_data_so_statistics) structure per query. The core runtime will validate the following. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-resolvequerydata#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetPredication(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PREDICATION_OP)">
            <summary>Sets a rendering predicate.</summary>
            <param name="pBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> The buffer, as an <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>, which must be in the [**D3D12_RESOURCE_STATE_PREDICATION**](/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_states) or [**D3D21_RESOURCE_STATE_INDIRECT_ARGUMENT**](/windows/win32/api/d3d12/ne-d3d12-d3d12_resource_states) state (both values are identical, and provided as aliases for clarity), or **NULL** to disable predication.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setpredication#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="AlignedBufferOffset">
            <para>Type: <b>UINT64</b> The aligned buffer offset, as a UINT64.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setpredication#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Operation">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_predication_op">D3D12_PREDICATION_OP</a></b> Specifies a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_predication_op">D3D12_PREDICATION_OP</a>, such as D3D12_PREDICATION_OP_EQUAL_ZERO or D3D12_PREDICATION_OP_NOT_EQUAL_ZERO.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setpredication#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Use this method to denote that subsequent rendering and resource manipulation commands are not actually performed if the resulting predicate data of the predicate is equal to the operation specified.</para>
            <para>Unlike Direct3D 11, in Direct3D 12 predication state is not inherited by direct command lists, and predication is always respected (there are no predication hints). All direct command lists begin with predication disabled. Bundles do inherit predication state. It is legal for the same predicate to be bound multiple times.</para>
            <para>Illegal API calls will result in <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-close">Close</a> returning an error, or <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12commandqueue-executecommandlists">ID3D12CommandQueue::ExecuteCommandLists</a> dropping the command list and removing the device.</para>
            <para>The debug layer will issue errors whenever the runtime validation fails.</para>
            <para>Refer to <a href="https://docs.microsoft.com/windows/desktop/direct3d12/predication">Predication</a> for more information.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setpredication#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetMarker(System.UInt32,System.Void*,System.UInt32)">
            <summary>Not intended to be called directly.  Use the PIX event runtime to insert events into a command list.</summary>
            <param name="Metadata">
            <para>Type: <b>UINT</b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setmarker#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const void*</b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setmarker#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Size">
            <para>Type: <b>UINT</b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setmarker#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This is a support method used internally by the PIX event runtime.  It is not intended to be called directly. To insert instrumentation markers at the current location within a D3D12 command list, use the <b>PIXSetMarker</b> function.  This is provided by the <a href="https://devblogs.microsoft.com/pix/winpixeventruntime/">WinPixEventRuntime</a> NuGet package.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-setmarker#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.BeginEvent(System.UInt32,System.Void*,System.UInt32)">
            <summary>Not intended to be called directly.  Use the PIX event runtime to insert events into a command list.</summary>
            <param name="Metadata">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-beginevent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">void</a>*</b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-beginevent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Size">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Internal.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-beginevent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This is a support method used internally by the PIX event runtime.  It is not intended to be called directly. To mark the start of an instrumentation region at the current location within a D3D12 command list, use the <b>PIXBeginEvent</b> function or <b>PIXScopedEvent</b> macro.  These are provided by the <a href="https://devblogs.microsoft.com/pix/winpixeventruntime/">WinPixEventRuntime</a> NuGet package.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-beginevent#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.EndEvent">
            <summary>Not intended to be called directly.  Use the PIX event runtime to insert events into a command list.</summary>
            <remarks>
            <para>This is a support method used internally by the PIX event runtime.  It is not intended to be called directly. To mark the end of an instrumentation region at the current location within a D3D12 command list, use the <b>PIXEndEvent</b> function or <b>PIXScopedEvent</b> macro.  These are provided by the <a href="https://devblogs.microsoft.com/pix/winpixeventruntime/">WinPixEventRuntime</a> NuGet package.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-endevent#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ExecuteIndirect(Windows.Win32.Graphics.Direct3D12.ID3D12CommandSignature,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64)">
            <summary>Apps perform indirect draws/dispatches using the ExecuteIndirect method.</summary>
            <param name="pCommandSignature">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandsignature">ID3D12CommandSignature</a>*</b> Specifies a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandsignature">ID3D12CommandSignature</a>. The data referenced by <i>pArgumentBuffer</i> will be interpreted depending on the contents of the command signature. Refer to <a href="https://docs.microsoft.com/windows/desktop/direct3d12/indirect-drawing">Indirect Drawing</a> for the APIs that are used to create a command signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-executeindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="MaxCommandCount">
            <para>Type: <b>UINT</b> There are two ways that command counts can be specified: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-executeindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pArgumentBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> Specifies one or more <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a> objects, containing the command arguments.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-executeindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ArgumentBufferOffset">
            <para>Type: <b>UINT64</b> Specifies an offset into <i>pArgumentBuffer</i> to identify the first command argument.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-executeindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pCountBuffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>*</b> Specifies a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12resource">ID3D12Resource</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-executeindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="CountBufferOffset">
            <para>Type: <b>UINT64</b> Specifies a UINT64 that is the offset into <i>pCountBuffer</i>, identifying the argument count.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-executeindirect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The semantics of this API are defined with the following pseudo-code: Non-NULL pCountBuffer: <pre class="syntax" xml:space="preserve"><code>// Read draw count out of count buffer UINT CommandCount = pCountBuffer-&gt;ReadUINT32(CountBufferOffset); CommandCount = min(CommandCount, MaxCommandCount) // Get pointer to first Commanding argument BYTE* Arguments = pArgumentBuffer-&gt;GetBase() + ArgumentBufferOffset; for(UINT CommandIndex = 0; CommandIndex &lt; CommandCount; CommandIndex++) { // Interpret the data contained in *Arguments // according to the command signature pCommandSignature-&gt;Interpret(Arguments); Arguments += pCommandSignature -&gt;GetByteStride(); } </code></pre> NULL pCountBuffer: <pre class="syntax" xml:space="preserve"><code>// Get pointer to first Commanding argument BYTE* Arguments = pArgumentBuffer-&gt;GetBase() + ArgumentBufferOffset; for(UINT CommandIndex = 0; CommandIndex &lt; MaxCommandCount; CommandIndex++) { // Interpret the data contained in *Arguments // according to the command signature pCommandSignature-&gt;Interpret(Arguments); Arguments += pCommandSignature -&gt;GetByteStride(); } </code></pre> The debug layer will issue an error if either the count buffer or the argument buffer are not in the D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT state. The core runtime will validate: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist-executeindirect#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.AtomicCopyBufferUINT(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)">
            <summary>Atomically copies a primary data element of type UINT from one resource to another, along with optional dependent resources.</summary>
            <param name="pDstBuffer">
            <para>Type: <b>ID3D12Resource*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> The resource that the UINT primary data element is copied into.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstOffset">
            <para>Type: <b>UINT64</b> An offset into the destination resource buffer that specifies where the primary data element is copied into, in bytes. This offset combined with the base address of the resource buffer must result in a memory address that's naturally aligned for UINT values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcBuffer">
            <para>Type: <b>ID3D12Resource*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> The resource that the UINT primary data element is copied from. This data is typically an address, index, or other handle that shader code can use to locate the most-recent version of latency-sensitive information.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcOffset">
            <para>Type: <b>UINT64</b> An offset into the source resource buffer that specifies where the primary data element is copied from, in bytes. This offset combined with the base address of the resource buffer must result in a memory address that's naturally aligned for UINT values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Dependencies">
            <para>Type: <b>UINT</b> The number of dependent resources.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDependentResources">
            <para>Type: <b>ID3D12Resource*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_reads_(Dependencies)</c> An array of resources that contain the dependent elements of the data payload.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDependentSubresourceRanges">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_subresource_range_uint64">D3D12_SUBRESOURCE_RANGE_UINT64</a>*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_reads_(Dependencies)</c> An array of subresource ranges that specify the dependent elements of the data payload. These elements are completely updated before the primary data element is itself atomically copied. This ensures that the entire operation is logically atomic; that is, the primary data element never refers to an incomplete data payload.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This method is typically used to update resources for which normal rendering pipeline latency can be detrimental to user experience. For example, an application can compute a view matrix from the latest user input (such as from the sensors of a head-mounted display), and use this function to update and activate this matrix in command lists already dispatched to the GPU to reduce percieved latency between input and rendering.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.AtomicCopyBufferUINT64(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)">
            <summary>Atomically copies a primary data element of type UINT64 from one resource to another, along with optional dependent resources.</summary>
            <param name="pDstBuffer">
            <para>Type: <b>ID3D12Resource*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> The resource that the UINT64 primary data element is copied into.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint64#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstOffset">
            <para>Type: <b>UINT64</b> An offset into the destination resource buffer that specifies where the primary data element is copied into, in bytes. This offset combined with the base address of the resource buffer must result in a memory address that's naturally aligned for UINT64 values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint64#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcBuffer">
            <para>Type: <b>ID3D12Resource*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> The resource that the UINT64 primary data element is copied from. This data is typically an address, index, or other handle that shader code can use to locate the most-recent version of latency-sensitive information.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint64#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcOffset">
            <para>Type: <b>UINT64</b> An offset into the source resource buffer that specifies where the primary data element is copied from, in bytes. This offset combined with the base address of the resource buffer must result in a memory address that's naturally aligned for UINT64 values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint64#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Dependencies">
            <para>Type: <b>UINT</b> The number of dependent resources.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint64#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDependentResources">
            <para>Type: <b>ID3D12Resource*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_reads_(Dependencies)</c> An array of resources that contain the dependent elements of the data payload.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint64#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDependentSubresourceRanges">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_subresource_range_uint64">D3D12_SUBRESOURCE_RANGE_UINT64</a>*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_reads_(Dependencies)</c> An array of subresource ranges that specify the dependent elements of the data payload. These elements are completely updated before the primary data element is itself atomically copied. This ensures that the entire operation is logically atomic; that is, the primary data element never refers to an incomplete data payload.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint64#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This method is typically used to update resources for which normal rendering pipeline latency can be detrimental to user experience. For example, an application can compute a view matrix from the latest user input (such as from the sensors of a head-mounted display), and use this function to update and activate this matrix in command lists already dispatched to the GPU to reduce percieved latency between input and rendering.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-atomiccopybufferuint64#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.OMSetDepthBounds(System.Single,System.Single)">
            <summary>This method enables you to change the depth bounds dynamically.</summary>
            <param name="Min">
            <para>Type: <b>FLOAT</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> Specifies the minimum depth bounds. The default value is 0. NaN values silently convert to 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-omsetdepthbounds#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Max">
            <para>Type: <b>FLOAT</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> Specifies the maximum depth bounds. The default value is 1. NaN values silently convert to 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-omsetdepthbounds#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Depth-bounds testing allows pixels and samples to be discarded if the currently-stored depth value is outside the range specified by <i>Min</i> and <i>Max</i>, inclusive. If the currently-stored depth value of the pixel or sample is inside this range, then the depth-bounds test passes and it is rendered; otherwise, the depth-bounds test fails and the pixel or sample is discarded. Note that the depth-bounds test considers the currently-stored depth value, not the depth value generated by the executing pixel shader. To use depth-bounds testing, the application must use the new <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device2-createpipelinestate">CreatePipelineState</a> method to enable depth-bounds testing on the PSO and then can use this command list method to change the depth-bounds dynamically. OMSetDepthBounds is an optional feature. Use the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-checkfeaturesupport">CheckFeatureSupport</a> method to determine whether or not this feature is supported by the user-mode driver. Support for this feature is reported through the [D3D12_FEATURE_D3D12_OPTIONS1](./ne-d3d12-d3d12_feature.md) structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-omsetdepthbounds#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.SetSamplePositions(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION*)">
            <summary>This method configures the sample positions used by subsequent draw, copy, resolve, and similar operations.</summary>
            <param name="NumSamplesPerPixel">
            <para>Type: <b>UINT</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> Specifies the number of samples to take, per pixel. This value can be 1, 2, 4, 8, or 16, otherwise the SetSamplePosition call is dropped. The number of samples must match the sample count configured in the PSO at draw time, otherwise the behavior is undefined.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-setsamplepositions#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumPixels">
            <para>Type: <b>UINT</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> Specifies the number of pixels that sample patterns are being specified for. This value can be either 1 or 4, otherwise the SetSamplePosition call is dropped. A value of 1 configures a single sample pattern to be used for each pixel; a value of 4 configures separate sample patterns for each pixel in a 2x2 pixel grid which is repeated over the render-target or viewport space, aligned to even coordintes. Note that the maximum number of combined samples can't exceed 16, otherwise the call is dropped. If NumPixels is set to 4, NumSamplesPerPixel can specify no more than 4 samples.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-setsamplepositions#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSamplePositions">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_sample_position">D3D12_SAMPLE_POSITION</a>*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_reads_(NumSamplesPerPixel*NumPixels)</c> Specifies an array of D3D12_SAMPLE_POSITION elements. The size of the array is NumPixels * NumSamplesPerPixel. If NumPixels is set to 4, then the first group of sample positions corresponds to the upper-left pixel in the 2x2 grid of pixels; the next group of sample positions corresponds to the upper-right pixel, the next group to the lower-left pixel, and the final group to the lower-right pixel. If centroid interpolation is used during rendering, the order of positions for each pixel determines centroid-sampling prioritiy. That is, the first covered sample in the order specified is chosen as the centroid sample location.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-setsamplepositions#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The operational semantics of sample positions are determined by the various draw, copy, resolve, and other operations that can occur. <b>CommandList:</b> In the absense of any prior calls to SetSamplePositions in a CommandList, samples assume the default position based on the Pipeline State Object (PSO). The default positions are determined either by the SAMPLE_DESC portion of the PSO if it is present, or by the standard sample positions if the RASTERIZER_DESC portion of the PSO has ForcedSampleCount set to a value greater than 0. After SetSamplePosition has been called, subsequent draw calls must use a PSO that specifies a matching sample count either using the SAMPLE_DESC portion of the PSO, or ForcedSampleCount in the RASTERIZER_DESC portion of the PSO. SetSamplePositions can only be called on a graphics CommandList. It can't be called in a bundle; bundles inherit sample position state from the calling CommandList and don't modify it. Calling SetSamplePositions(0, 0, NULL) reverts the sample positions to their default values. <b>Clear RenderTarget:</b> Sample positions are ignored when clearing a render target. <b>Clear DepthStencil:</b> When clearing the depth portion of a depth-stencil surface or any region of it, the sample positions must be set to match those of future rendering to the cleared surface or region; the contents of any uncleared regions produced using different sample positions become undefined. When clearing the stencil portion of a depth-stencil surface or any region of it, the sample positions are ignored. <b>Draw to RenderTarget:</b> When drawing to a render target the sample positions can be changed for each draw call, even when drawing to a region that overlaps previous draw calls. The current sample positions determine the operational semantics of each draw call and samples are taken from taken from the stored contents of the render target, even if the contents were produced using different sample positions. <b>Draw using DepthStencil:</b> When drawing to a depth-stencil surface (read or write) or any region of it, the sample positions must be set to match those used to clear the affected region previously. To use a different sample position, the target region must be cleared first. The pixels outside the clear region are unaffected. Hardware may store the depth portion or a depth-stencil surface as plane equations, and evaluate them to produce depth values when the application issues a read. Only the rasterizer and output-merger are required to suport programmable sample positions of the depth portion of a depth-stencil surface. Any other read or write of the depth portion that has been rendered with sample positions set may ignore them and instead sample at the standard positions. <b>Resolve RenderTarget:</b> When resolving a render target or any region of it, the sample positions are ignored; these APIs operate only on stored color values. <b>Resolve DepthStencil:</b> When resolving the depth portion of a depth-stencil surface or any region of it, the sample positions must be set to match those of past rendering to the resolved surface or region. To use a different sample position, the target region must be cleared first. When resolving the stencil portion of a depth-stencil surface or any region of it, the sample positions are ignored; stencil resolves operate only on stored stencil values. <b>Copy RenderTarget:</b> When copying from a render target, the sample positions are ignored regardless of whether it is a full or partial copy. <b>Copy DepthStencil (Full Subresource):</b> When copying a full subresource from a depth-stencil surface, the sample positions must be set to match the sample positions used to generate the source surface. To use a different sample position, the target region must be cleared first. On some hardware properties of the source surface (such as stored plane equations for depth values) transfer to the destination. Therefore, if the destination surface is subsequently drawn to, the sample positions originally used to generate the source content need to be used with the destination surface. The API requires this on all hardware for consistency even if it may only apply to some. <b>Copy DepthStencil (Partial Subresource):</b> When copying a partial subresource from a depth-stencil surface, the sample positions must be set to match the sample positions used to generate the source surface, similarly to copying a full subresource. However, if the content of an affected destination subresources is only partially covered by the copy, the contents of the uncovered portion within those subresources becomes undefined unless all of it was generated using the same sample positions as the copy source. To use a different sample position, the target region must be cleared first. When copying a partial subresource from the stencil portion of a depth-stencil surface, the sample postions are ignored. It doesn’t matter what sample positions were used to generate content for any other areas of the destination buffer not covered by the copy – those contents remain valid. <b>Shader SamplePos:</b> The HLSL SamplePos intrinsic is not aware of programmable sample positions and results returned to shaders calling this on a surface rendered with programmable positions is undefined. Applications must pass coordinates into their shader manually if needed. Similarly evaluating attributes by sample index is undefined with programmable sample positions. <b>Transitioning out of DEPTH_READ or DEPTH_WRITE state:</b> If a subresource in DEPTH_READ or DEPTH_WRITE state is transitioned to any other state, including COPY_SOURCE or RESOLVE_SOURCE, some hardware might need to decompress the surface. Therefore, the sample positions must be set on the command list to match those used to generate the content in the source surface. Furthermore, for any subsequent transitions of the surface while the same depth data remains in it, the sample positions must continue to match those set on the command list. To use a different sample position, the target region must be cleared first. If an application wants to minimize the decompressed area when only a portion needs to be used, or just to preserve compression, ResolveSubresourceRegion() can be called in DECOMPRESS mode with a rect specified.  This will decompress just the relevant area to a separate resource leaving the source intact on some hardware, though on other hardware even the source area is decompressed. The separate explicitly decompressed resource can then be transitioned to the desired state (such as SHADER_RESOURCE). <b>Transitioning out of RENDER_TARGET state:</b> If a subresource in RENDER_TARGET state is transitioned to anything other than COPY_SOURCE or RESOLVE_SOURCE, some implementations may need to decompress the surface. This decompression is agnostic to sample positions. If an application wants to minimize the decompressed area when only a portion needs to be used, or just to preserve compression, ResolveSubresourceRegion() can be called in DECOMPRESS mode with a rect specified.  This will decompress just the relevant area to a separate resource leaving the source intact on some hardware, though on other hardware even the source area is decompressed. The separate explicitly decompressed resource can then be transitioned to the desired state (such as SHADER_RESOURCE).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-setsamplepositions#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.ResolveSubresourceRegion(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,Windows.Win32.Foundation.RECT*,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE)">
            <summary>Copy a region of a multisampled or compressed resource into a non-multisampled or non-compressed resource.</summary>
            <param name="pDstResource">
            <para>Type: <b>ID3D12Resource*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> Destination resource. Must be created with the <b>D3D11_USAGE_DEFAULT</b> flag and must be single-sampled unless its to be resolved from a compressed resource (<b>D3D12_RESOLVE_MODE_DECOMPRESS</b>); in this case it must have the same sample count as the compressed source.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstSubresource">
            <para>Type: <b>UINT</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> A zero-based index that identifies the destination subresource. Use <a href="https://docs.microsoft.com/windows/desktop/direct3d12/d3d12calcsubresource">D3D12CalcSubresource</a> to calculate the subresource index if the parent resource is complex.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstX">
            <para>Type: <b>UINT</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> The X coordinate of the left-most edge of the destination region. The width of the destination region is the same as the width of the source rect.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstY">
            <para>Type: <b>UINT</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> The Y coordinate of the top-most edge of the destination region. The height of the destination region is the same as the height of the source rect.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcResource">
            <para>Type: <b>ID3D12Resource*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> Source resource. Must be multisampled or compressed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcSubresource">
            <para>Type: <b>UINT</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> A zero-based index that identifies the source subresource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcRect">
            <para>Type: <b>D3D12_RECT*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_opt_</c> Specifies the rectangular region of the source resource to be resolved. Passing NULL for <i>pSrcRect</i> specifies that the entire subresource is to be resolved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Format">
            <para>Type: <b>DXGI_FORMAT</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> A DXGI_FORMAT that specifies how the source and destination resource formats are consolidated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ResolveMode">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resolve_mode">D3D12_RESOLVE_MODE</a></b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>_In_</c> Specifies the operation used to resolve the source samples. When using the <b>D3D12_RESOLVE_MODE_DECOMPRESS</b> operation, the sample count can be larger than 1 as long as the source and destination have the same sample count, and source and destination may specify the same resource as long as the source rect aligns with the destination X and Y coordinates, in which case decompression occurs in place. When using the <b>D3D12_RESOLVE_MODE_MIN</b>, <b>D3D12_RESOLVE_MODE_MAX</b>, or <b>D3D12_RESOLVE_MODE_AVERAGE</b> operation, the destination must have a sample count of 1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>ResolveSubresourceRegion operates like <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-resolvesubresource">ResolveSubresource</a> but allows for only part of a resource to be resolved and for source samples to be resolved in several ways. Partial resolves can be useful in multi-adapter scenarios; for example, when the rendered area has been partitioned across adapters, each adapter might only need to resolve the portion of a subresource that corresponds to its assigned partition.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.SetViewInstanceMask(System.UInt32)">
            <summary>Set a mask that controls which view instances are enabled for subsequent draws.</summary>
            <param name="Mask">
            <para>Type: <b>UINT</b> A mask that specifies which views are enabled or disabled. If bit <i>i</i> starting from the least-significant bit is set, view instance <i>i</i> is enabled.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-setviewinstancemask#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>The view instance mask only affects PSOs that declare view instance masking by specifying the D3D12_VIEW_INSTANCING_FLAG_ENABLE_VIEW_INSTANCE_MASKING flag during their creation. Attempting to create a PSO that declares view instance masking will fail on adapters that don't support view instancing. The view instance mask defaults to 0 which disables all views. This forces applications that declare view instance masking to explicitly choose the views to enable, otherwise nothing will be rendered. If the view instance mask enabled all views by default the application might not remember to disable unused views, resulting in lost performance due to wasted work. Bundles don't inherit their view instance mask from their caller, defaulting to 0 instead. This is because the mask setting must be known when the bundle is recorded if it affects how an implementation records draws. The view instance mask set by a bundle does persist to the caller after the bundle completes, however. These inheritence semantics are similar to those of PSOs. No shader code paths that are dependent on SV_ViewID are executed at any shader stage for view instances that are masked off and no clipping, viewport processing, or rasterization is performed. Implementations that inspect the mask during rendering can incur a small performance penalty over PSOs that don't declare view instance masking at all, but usually the penalty can be overcome by the performance savings that result from skipping the work associated with the masked off views. Depending on the frequency and amount of skipped work, the performance gains can be significant.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist1-setviewinstancemask#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.WriteBufferImmediate(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE*)">
            <summary>Writes a number of 32-bit immediate values to the specified buffer locations directly from the command stream.</summary>
            <param name="Count">The number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_writebufferimmediate_parameter">D3D12_WRITEBUFFERIMMEDIATE_PARAMETER</a> structures that are pointed to by <i>pParams</i> and <i>pModes</i>.</param>
            <param name="pParams">The address of an array containing a number of <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_writebufferimmediate_parameter">D3D12_WRITEBUFFERIMMEDIATE_PARAMETER</a> structures equal to <i>Count</i>.</param>
            <param name="pModes">The address of an array containing a number of  <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_writebufferimmediate_mode">D3D12_WRITEBUFFERIMMEDIATE_MODE</a> structures equal to <i>Count</i>. The default value is <b>null</b>; passing <b>null</b> causes the system to write all immediate values using <b>D3D12_WRITEBUFFERIMMEDIATE_MODE_DEFAULT</b>.</param>
            <remarks>
            <para><b>WriteBufferImmediate</b> performs <i>Count</i> number of 32-bit writes: one for each value and destination specified in <i>pParams</i>. The receiving buffer (resource) must be in the <b>D3D12_RESOURCE_STATE_COPY_DEST</b> state to be a valid destination for <b>WriteBufferImmediate</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist2-writebufferimmediate#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.SetProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession)">
            <summary>Specifies whether or not protected resources can be accessed by subsequent commands in the command list.</summary>
            <param name="pProtectedResourceSession">
            <para>Type: **[ID3D12ProtectedResourceSession](./nn-d3d12-id3d12protectedresourcesession.md)\*** An optional pointer to an **ID3D12ProtectedResourceSession**. You can obtain an **ID3D12ProtectedResourceSession** by calling [ID3D12Device4::CreateProtectedResourceSession](./nf-d3d12-id3d12device4-createprotectedresourcesession.md).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist3-setprotectedresourcesession#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>If set, indicates that protected resources can be accessed with the given session. Access to protected resources can only happen after <b>SetProtectedResourceSession</b> is called with a valid session. The command list state is cleared when calling this method. If you pass <b>NULL</b>, then no protected resources can be accessed.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist3-setprotectedresourcesession">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.BeginRenderPass(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_RENDER_TARGET_DESC[],Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_FLAGS)">
            <summary>Marks the beginning of a render pass by binding a set of output resources for the duration of the render pass. These bindings are to one or more render target views (RTVs), and/or to a depth stencil view (DSV).</summary>
            <param name="NumRenderTargets">A <b>UINT</b>. The number of render targets being bound.</param>
            <param name="pRenderTargets">A pointer to a constant <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_render_pass_render_target_desc">D3D12_RENDER_PASS_RENDER_TARGET_DESC</a>, which describes bindings (fixed for the duration of the render pass) to one or more render target views (RTVs), as well as their beginning and ending access characteristics.</param>
            <param name="pDepthStencil">A pointer to a constant <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ns-d3d12-d3d12_render_pass_depth_stencil_desc">D3D12_RENDER_PASS_DEPTH_STENCIL_DESC</a>, which describes a binding (fixed for the duration of the render pass) to a depth stencil view (DSV), as well as its beginning and ending access characteristics.</param>
            <param name="Flags">A <a href="https://docs.microsoft.com/windows/win32/api/d3d12/ne-d3d12-d3d12_render_pass_flags">D3D12_RENDER_PASS_FLAGS</a>. The nature/requirements of the render pass; for example, whether it is a suspending or a resuming render pass, or whether it wants to write to unordered access view(s).</param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-beginrenderpass">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.EndRenderPass">
            <summary>Marks the ending of a render pass.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-endrenderpass">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.InitializeMetaCommand(Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand,System.Void*,System.UIntPtr)">
            <summary>Initializes the specified meta command.</summary>
            <param name="pMetaCommand">A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12metacommand">ID3D12MetaCommand</a> representing the meta command to initialize.</param>
            <param name="pInitializationParametersData">An optional pointer to a constant structure containing the values of the parameters for initializing the meta command.</param>
            <param name="InitializationParametersDataSizeInBytes">A <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a> containing the size of the structure pointed to by <i>pInitializationParametersData</i>, if set, otherwise 0.</param>
            <returns>If this method succeeds, it returns <b xmlns:loc="http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns:loc="http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-initializemetacommand">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.ExecuteMetaCommand(Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand,System.Void*,System.UIntPtr)">
            <summary>Records the execution (or invocation) of the specified meta command into a graphics command list.</summary>
            <param name="pMetaCommand">A pointer to an <b>ID3D12MetaCommand</b> representing the meta command to initialize.</param>
            <param name="pExecutionParametersData">An optional pointer to a constant structure containing the values of the parameters for executing the meta command.</param>
            <param name="ExecutionParametersDataSizeInBytes">A <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a> containing the size of the structure pointed to by <i>pExecutionParametersData</i>, if set, otherwise 0.</param>
            <returns>If this method succeeds, it returns <b xmlns:loc="http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns:loc="http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-executemetacommand">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.BuildRaytracingAccelerationStructure(Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)">
            <summary>Performs a raytracing acceleration structure build on the GPU and optionally outputs post-build information immediately after the build.</summary>
            <param name="pDesc">Description of the acceleration structure to build.</param>
            <param name="NumPostbuildInfoDescs">Size of the <i>pPostbuildInfoDescs</i> array.  Set to 0 if no post-build info is needed.</param>
            <param name="pPostbuildInfoDescs">Optional array of descriptions for post-build info to generate describing properties of the acceleration structure that was built.</param>
            <remarks>
            <para>This method can be called on graphics or compute command lists but not from bundles. Post-build information can also be obtained separately from an already built acceleration structure by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist4-emitraytracingaccelerationstructurepostbuildinfo">EmitRaytracingAccelerationStructurePostbuildInfo</a>.  The advantage of generating post-build info along with a build is that a barrier isn’t needed in between the build completing and requesting post-build information, enabling scenarios where the app needs the post-build info right away.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-buildraytracingaccelerationstructure#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.EmitRaytracingAccelerationStructurePostbuildInfo(Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,System.UInt32,System.UInt64*)">
            <summary>Emits post-build properties for a set of acceleration structures. This enables applications to know the output resource requirements for performing acceleration structure operations via ID3D12GraphicsCommandList4::CopyRaytracingAccelerationStructure.</summary>
            <param name="pDesc">Description of pos-tbuild information to generate.</param>
            <param name="NumSourceAccelerationStructures">Number of pointers to acceleration structure GPU virtual addresses pointed to by <i>pSourceAccelerationStructureData</i>.  This number also affects the destination (output), which will be a contiguous array of <b>NumSourceAccelerationStructures</b> output structures, where the type of the structures depends on <i>InfoType</i> field of the supplied in the <i>pDesc</i> description.</param>
            <param name="pSourceAccelerationStructureData">
            <para>Pointer to array of GPU virtual addresses of size <i>NumSourceAccelerationStructures</i>. The address must be aligned to 256 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT</a>. The memory pointed to must be in state <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_resource_states">D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-emitraytracingaccelerationstructurepostbuildinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>This method can be called from graphics or compute command lists but not from bundles.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-emitraytracingaccelerationstructurepostbuildinfo#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.CopyRaytracingAccelerationStructure(System.UInt64,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE)">
            <summary>Copies a source acceleration structure to destination memory while applying the specified transformation.</summary>
            <param name="DestAccelerationStructureData">
            <para>The destination memory. The required size can be discovered by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist4-emitraytracingaccelerationstructurepostbuildinfo">EmitRaytracingAccelerationStructurePostbuildInfo</a> beforehand, if necessary for the specified <i>Mode</i>. The destination start address must be aligned to 256 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT</a>, regardless of the specified <i>Mode</i>. The destination memory range cannot overlap source. Otherwise, results are undefined. The resource state that the memory pointed to must be in depends on the <i>Mode</i> parameter. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_copy_mode">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-copyraytracingaccelerationstructure#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SourceAccelerationStructureData">
            <para>The address of the acceleration structure or other type of data to copy/transform based on the specified <i>Mode</i>.  The data remains unchanged and usable.  The operation only copies the data  pointed to by <i>SourceAccelerationStructureData</i> and not any other data, such as acceleration structures, that the source data may point to.  For example, in the case of a top-level acceleration structure, any bottom-level acceleration structures that it points to are not copied in the operation. The source memory must be aligned to 256 bytes, defined as <a href="https://docs.microsoft.com/windows/desktop/direct3d12/constants">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT</a>, regardless of the specified <i>Mode</i>. The resource state that the memory pointed to must be in depends on the <i>Mode</i> parameter. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_copy_mode">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-copyraytracingaccelerationstructure#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Mode">The type of copy operation to perform. For more information, see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_raytracing_acceleration_structure_copy_mode">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE</a>.</param>
            <remarks>
            <para>Since raytracing acceleration structures may contain internal pointers and have a device dependent opaque layout, copying them around or otherwise manipulating them requires a dedicated API so that drivers can handle the requested operation. This method can be called from graphics or compute command lists but not from bundles.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-copyraytracingaccelerationstructure#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.SetPipelineState1(Windows.Win32.Graphics.Direct3D12.ID3D12StateObject)">
            <summary>Sets a state object on the command list.</summary>
            <param name="pStateObject">The state object to set on the command list. In the current release, this can only be of type <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_state_object_type">D3D12_STATE_OBJECT_TYPE_RAYTRACING_PIPELINE</a>.</param>
            <remarks>
            <para>This method can be called from graphics or compute command lists and bundles. This method is an alternative to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12graphicscommandlist-setpipelinestate">ID3D12GraphicsCommandList::SetPipelineState</a>, which is only defined for graphics and compute shaders.  There is only one pipeline state active on a command list at a time, so either call sets the current pipeline state.  The distinction between the calls is that each sets particular types of pipeline state only.  In the current release, <b>SetPipelineState1</b> is only used for setting raytracing pipeline state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-setpipelinestate1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.DispatchRays(Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC*)">
            <summary>Launch the threads of a ray generation shader.</summary>
            <param name="pDesc">A description of the ray dispatch</param>
            <remarks>
            <para>This method can be called from graphics or compute command lists and bundles.</para>
            <para>A raytracing pipeline state must be set on the command list. Otherwise, the behavior of this call is undefined. There are 3 dimensions passed in to set the grid size:  width/height/depth.  These dimensions are constrained such that width * height * depth &lt;= 2^30. Exceeding this produces undefined behavior. If any grid dimension is 0, no threads are launched.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12graphicscommandlist4-dispatchrays#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Heap.GetDesc">
            <summary>Gets the heap description.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/api/d3d12/ns-d3d12-d3d12_heap_desc">D3D12_HEAP_DESC</a></b> Returns the <a href="/windows/desktop/api/d3d12/ns-d3d12-d3d12_heap_desc">D3D12_HEAP_DESC</a> structure that describes the heap.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12heap-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand.GetRequiredParameterResourceSize(Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32)">
            <summary>Retrieves the amount of memory required for the specified runtime parameter resource for a meta command, for the specified stage.</summary>
            <param name="Stage">
            <para>Type: <b>D3D12_META_COMMAND_PARAMETER_STAGE</b> A <b>D3D12_META_COMMAND_PARAMETER_STAGE</b> specifying the stage to which the parameter belongs.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12metacommand-getrequiredparameterresourcesize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ParameterIndex">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The zero-based index of the parameter within the stage.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12metacommand-getrequiredparameterresourcesize#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">UINT64</a></b> The number of bytes required for the  specified  runtime parameter resource.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12metacommand-getrequiredparameterresourcesize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Object.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)">
            <summary>Gets application-defined data from a device object.</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> The <b>GUID</b> that is associated with the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a variable that on input contains the size, in bytes, of the buffer that <i>pData</i> points to, and on output contains the size, in bytes, of the amount of data that <b>GetPrivateData</b> retrieved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>void*</b> A pointer to a memory block that receives the data from the device object if <i>pDataSize</i> points to a value that specifies a buffer large enough to hold the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-getprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Object.SetPrivateData(System.Guid*,System.UInt32,System.Void*)">
            <summary>Sets application-defined data to a device object and associates that data with an application-defined GUID.</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> The <b>GUID</b> to associate with the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size in bytes of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const void*</b> A pointer to a memory block that contains the data to be stored with this device object. If <i>pData</i> is <b>NULL</b>, <i>DataSize</i> must also be 0, and any data that was previously associated with the <b>GUID</b> specified in <i>guid</i> will be destroyed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-setprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Object.SetPrivateDataInterface(System.Guid*,System.Object)">
            <summary>Associates an IUnknown-derived interface with the device object and associates that interface with an application-defined GUID.</summary>
            <param name="guid">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> The <b>GUID</b> to associate with the interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>-derived interface to be associated with the device object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-setprivatedatainterface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Object.SetName(Windows.Win32.Foundation.PCWSTR)">
            <summary>Associates a name with the device object. This name is for use in debug diagnostics and tools.</summary>
            <param name="Name">
            <para>Type: <b>LPCWSTR</b> A <b>NULL</b>-terminated <b>UNICODE</b> string that contains the name to associate with the device object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-setname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12object-setname">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState.GetCachedBlob(Windows.Win32.Graphics.Direct3D.ID3DBlob@)">
            <summary>Gets the cached blob representing the pipeline state.</summary>
            <param name="ppBlob">
            <para>Type: <b>ID3DBlob**</b> After this method returns, points to the cached blob representing the pipeline state.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12pipelinestate-getcachedblob#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12pipelinestate-getcachedblob">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession.GetDesc">
            <summary>Retrieves a description of the protected resource session.</summary>
            <returns>A [D3D12_PROTECTED_RESOURCE_SESSION_DESC](./ns-d3d12-d3d12_protected_resource_session_desc.md) that describes the protected resource session.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12protectedresourcesession-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession.GetStatusFence(System.Guid*,System.Object@)">
            <summary>Retrieves the fence for the protected session. From the fence, you can retrieve the current uniqueness validity value (using ID3D12Fence::GetCompletedValue), and add monitors for changes to its value. This is a read-only fence.</summary>
            <param name="riid">The GUID of the interface to a fence. Most commonly, <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12fence">ID3D12Fence</a>, although it may be any GUID for any interface. If the protected session object doesn’t support the interface for this GUID, the function returns <b>E_NOINTERFACE</b>.</param>
            <param name="ppFence">A pointer to a memory block that receives a pointer to the fence for the given protected session.</param>
            <returns>If this method succeeds, it returns <b xmlns:loc="http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns:loc="http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12protectedsession-getstatusfence">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession.GetSessionStatus">
            <summary>Gets the status of the protected session.</summary>
            <returns>
            <para>Type: **[D3D12_PROTECTED_SESSION_STATUS](/windows/desktop/api/d3d12/ne-d3d12-d3d12_protected_session_status)** The status of the protected session. If the returned value is [D3D12_PROTECTED_SESSION_STATUS_INVALID](/windows/desktop/api/d3d12/ne-d3d12-d3d12_protected_session_status), then you need to wait for a uniqueness value bump to reuse the resource if the session is an [ID3D12ProtectedResourceSession](/windows/desktop/api/d3d12/nn-d3d12-id3d12protectedresourcesession).</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12protectedsession-getsessionstatus">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.Map(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RANGE*,System.Void**)">
            <summary>Gets a CPU pointer to the specified subresource in the resource, but may not disclose the pointer value to applications. Map also invalidates the CPU cache, when necessary, so that CPU reads to this address reflect any modifications made by the GPU.</summary>
            <param name="Subresource">
            <para>Type: <b>UINT</b> Specifies the index number of the subresource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-map#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pReadRange">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_range">D3D12_RANGE</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_range">D3D12_RANGE</a> structure that describes the range of memory to access. This indicates the region the CPU might read, and the coordinates are subresource-relative. A null pointer indicates the entire subresource might be read by the CPU. It is valid to specify the CPU won't read any data by passing a range where <b>End</b> is less than or equal to <b>Begin</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-map#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppData">
            <para>Type: <b><b>void</b>**</b> A pointer to a memory block that receives a pointer to the resource data. A null pointer is valid and is useful to cache a CPU virtual address range for methods like <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12resource-writetosubresource">WriteToSubresource</a>. When <i>ppData</i> is not NULL, the pointer returned is never offset by any values in <i>pReadRange</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-map#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-map">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.Unmap(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RANGE*)">
            <summary>Invalidates the CPU pointer to the specified subresource in the resource. Unmap also flushes the CPU cache, when necessary, so that GPU reads to this address reflect any modifications made by the CPU.</summary>
            <param name="Subresource">
            <para>Type: <b>UINT</b> Specifies the index of the subresource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-unmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pWrittenRange">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_range">D3D12_RANGE</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_range">D3D12_RANGE</a> structure that describes the range of memory to unmap. This indicates the region the CPU might have modified, and the coordinates are subresource-relative. A null pointer indicates the entire subresource might have been modified by the CPU. It is valid to specify the CPU didn't write any data by passing a range where <b>End</b> is less than or equal to <b>Begin</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-unmap#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>Refer to the extensive Remarks and Examples for the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12resource-map">Map</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-unmap#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.GetDesc">
            <summary>Gets the resource description.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/api/d3d12/ns-d3d12-d3d12_resource_desc">D3D12_RESOURCE_DESC</a></b> A Direct3D 12 resource description structure.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.GetGPUVirtualAddress">
            <summary>This method returns the GPU virtual address of a buffer resource.</summary>
            <returns>
            <para>Type: <b>D3D12_GPU_VIRTUAL_ADDRESS</b> This method returns the GPU virtual address. D3D12_GPU_VIRTUAL_ADDRESS is a typedef'd synonym of UINT64.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-getgpuvirtualaddress">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.WriteToSubresource(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*,System.Void*,System.UInt32,System.UInt32)">
            <summary>Uses the CPU to copy data into a subresource, enabling the CPU to modify the contents of most textures with undefined layouts.</summary>
            <param name="DstSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Specifies the index of the subresource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-writetosubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDstBox">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_box">D3D12_BOX</a>*</b> A pointer to a box that defines the portion of the destination subresource to copy the resource data into. If NULL, the data is written to the destination subresource with no offset. The dimensions of the source must fit the destination (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_box">D3D12_BOX</a>).</para>
            <para>An empty box results in a no-op. A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value. When the box is empty, this method doesn't perform any operation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-writetosubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcData">
            <para>Type: <b>const void*</b> A pointer to the source data in memory.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-writetosubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcRowPitch">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The distance from one row of source data to the next row.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-writetosubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcDepthPitch">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The distance from one depth slice of source data to the next.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-writetosubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-writetosubresource">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.ReadFromSubresource(System.Void*,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*)">
            <summary>Uses the CPU to copy data from a subresource, enabling the CPU to read the contents of most textures with undefined layouts.</summary>
            <param name="pDstData">
            <para>Type: <b>void*</b> A pointer to the destination data in memory.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-readfromsubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstRowPitch">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The distance from one row of destination data to the next row.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-readfromsubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DstDepthPitch">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The distance from one depth slice of destination data to the next.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-readfromsubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcSubresource">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Specifies the index of the subresource to read from.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-readfromsubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSrcBox">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_box">D3D12_BOX</a>*</b> A pointer to a box that defines the portion of the destination subresource to copy the resource data from. If NULL, the data is read from the destination subresource with no offset. The dimensions of the destination must fit the destination (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_box">D3D12_BOX</a>).</para>
            <para>An empty box results in a no-op. A box is empty if the top value is greater than or equal to the bottom value, or the left value is greater than or equal to the right value, or the front value is greater than or equal to the back value. When the box is empty, this method doesn't perform any operation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-readfromsubresource#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-readfromsubresource">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.GetHeapProperties(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS*)">
            <summary>Retrieves the properties of the resource heap, for placed and committed resources.</summary>
            <param name="pHeapProperties">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_heap_properties">D3D12_HEAP_PROPERTIES</a>*</b> Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_heap_properties">D3D12_HEAP_PROPERTIES</a> structure, that on successful completion of the method will contain the resource heap properties.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-getheapproperties#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pHeapFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_heap_flags">D3D12_HEAP_FLAGS</a>*</b> Specifies a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_heap_flags">D3D12_HEAP_FLAGS</a> variable, that on successful completion of the method will contain any miscellaneous heap flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-getheapproperties#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>. If the resource was created as reserved, E_INVALIDARG is returned.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-id3d12resource-getheapproperties">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.QueryInterface(System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.QueryInterface(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.GetPrivateData(System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.SetPrivateData(System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.SetPrivateDataInterface(System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.SetName(System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.GetDevice(System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.Map(System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RANGE},System.Void**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.Map(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RANGE*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.Unmap(System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RANGE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.Unmap(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RANGE*)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.WriteToSubresource(System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_BOX},System.Void*,System.UInt32,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.WriteToSubresource(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*,System.Void*,System.UInt32,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.ReadFromSubresource(System.Void*,System.UInt32,System.UInt32,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_BOX})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource_unmanaged.ReadFromSubresource(System.Void*,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*)"/>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.Common.DXGI_SAMPLE_DESC">
            <summary>Describes multi-sampling parameters for a resource.</summary>
            <remarks>
            <para>This structure is a member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a> structure. The default sampler mode, with no anti-aliasing, has a count of 1 and a quality level of 0. If multi-sample antialiasing is being used, all bound render targets and depth buffers must have the same sample counts and quality levels. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_sample_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_SAMPLE_DESC.Count">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of multisamples per pixel.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_sample_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_SAMPLE_DESC.Quality">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The image quality level. The higher the quality, the lower the performance. The valid range is between zero and one less than the level returned by <a href="https://docs.microsoft.com/windows/desktop/api/d3d10/nf-d3d10-id3d10device-checkmultisamplequalitylevels">ID3D10Device::CheckMultisampleQualityLevels</a> for Direct3D 10 or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels">ID3D11Device::CheckMultisampleQualityLevels</a> for Direct3D 11. For Direct3D 10.1 and Direct3D 11, you can use two special quality level values. For more information about these quality level values, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_sample_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.Common.DXGI_RATIONAL">
            <summary>Represents a rational number.</summary>
            <remarks>
            <para>This structure is a member of the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a> structure. The <b>DXGI_RATIONAL</b> structure operates under the following rules: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_rational#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_RATIONAL.Numerator">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> An unsigned integer value representing the top of the rational number.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_rational#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_RATIONAL.Denominator">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> An unsigned integer value representing the bottom of the rational number.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_rational#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.Common.DXGI_ALPHA_MODE">
            <summary>Identifies the alpha value, transparency behavior, of a surface.</summary>
            <remarks>
            <para>For more information about alpha mode, see <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ne-dcommon-d2d1_alpha_mode">D2D1_ALPHA_MODE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_alpha_mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_ALPHA_MODE.DXGI_ALPHA_MODE_UNSPECIFIED">
            <summary>Indicates that the transparency behavior is not specified.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_ALPHA_MODE.DXGI_ALPHA_MODE_PREMULTIPLIED">
            <summary>Indicates that the transparency behavior is premultiplied. Each color is first scaled by the alpha value. The alpha value itself is the same in both straight and premultiplied alpha. Typically, no color channel value is greater than the alpha channel value. If a color channel value in a premultiplied format is greater than the alpha channel, the standard source-over blending math results in an additive blend.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_ALPHA_MODE.DXGI_ALPHA_MODE_STRAIGHT">
            <summary>Indicates that the transparency behavior is not premultiplied. The alpha channel indicates the transparency of the color.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_ALPHA_MODE.DXGI_ALPHA_MODE_IGNORE">
            <summary>Indicates to ignore the transparency behavior.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_ALPHA_MODE.DXGI_ALPHA_MODE_FORCE_DWORD">
            <summary>
            <para>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits. This value is not used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_alpha_mode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE">
            <summary>Specifies color space types.</summary>
            <remarks>
            <para>This enum is used within DXGI in  the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/nf-dxgi1_4-idxgiswapchain3-checkcolorspacesupport">CheckColorSpaceSupport</a>, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/nf-dxgi1_4-idxgiswapchain3-setcolorspace1">SetColorSpace1</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/nf-dxgi1_4-idxgioutput4-checkoverlaycolorspacesupport">CheckOverlayColorSpaceSupport</a> methods. It is also referenced in D3D11 video methods such as <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_1/nf-d3d11_1-id3d11videocontext1-videoprocessorsetoutputcolorspace1">ID3D11VideoContext1::VideoProcessorSetOutputColorSpace1</a>, and D2D methods such as <a href="https://docs.microsoft.com/windows/desktop/api/d2d1_3/nf-d2d1_3-id2d1devicecontext2-createimagesourcefromdxgi">ID2D1DeviceContext2::CreateImageSourceFromDxgi</a>. The following color parameters are defined: <h3><a id="Colorspace"></a><a id="colorspace"></a><a id="COLORSPACE"></a>Colorspace</h3> Defines the color space of the color channel data. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P709">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_RGB_FULL_G10_NONE_P709">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_RGB_STUDIO_G22_NONE_P709">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_RGB_STUDIO_G22_NONE_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_RESERVED">
            <summary>Reserved.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_FULL_G22_NONE_P709_X601">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P601">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P601">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P709">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P709">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_LEFT_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_FULL_G22_LEFT_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_RGB_FULL_G2084_NONE_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_STUDIO_G2084_LEFT_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_RGB_STUDIO_G2084_NONE_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_STUDIO_G22_TOPLEFT_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_STUDIO_G2084_TOPLEFT_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_STUDIO_GHLG_TOPLEFT_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_FULL_GHLG_TOPLEFT_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_RGB_STUDIO_G24_NONE_P709">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_RGB_STUDIO_G24_NONE_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_LEFT_P709">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_LEFT_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_YCBCR_STUDIO_G24_TOPLEFT_P2020">
            <summary>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ne-dxgicommon-dxgi_color_space_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE.DXGI_COLOR_SPACE_CUSTOM">
            <summary>A custom color definition is used.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT">
            <summary>Resource data formats, including fully-typed and typeless formats. A list of modifiers at the bottom of the page more fully describes each format type.</summary>
            <remarks>
            <para><h3><a id="Byte_Order__LSB_MSB_"></a><a id="byte_order__lsb_msb_"></a><a id="BYTE_ORDER__LSB_MSB_"></a>Byte Order (LSB/MSB)</h3> Most formats have byte-aligned components, and the components are in C-array order (the least address comes first). For those formats that don't have power-of-2-aligned components, the first named component is in the least-significant bits.</para>
            <para><h3><a id="Portable_Coding_for_Endian-Independence"></a><a id="portable_coding_for_endian-independence"></a><a id="PORTABLE_CODING_FOR_ENDIAN-INDEPENDENCE"></a>Portable Coding for Endian-Independence</h3> Rather than adjusting for whether a system uses big-endian or little-endian byte ordering, you should write portable code, as follows.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_UNKNOWN">
            <summary>The format is not known.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_TYPELESS">
            <summary>A four-component, 128-bit typeless format that supports 32 bits per channel including alpha. ¹</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_FLOAT">
            <summary>A four-component, 128-bit floating-point format that supports 32 bits per channel including alpha. <sup>1,5,8</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_UINT">
            <summary>A four-component, 128-bit unsigned-integer format that supports 32 bits per channel including alpha. ¹</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32A32_SINT">
            <summary>A four-component, 128-bit signed-integer format that supports 32 bits per channel including alpha. ¹</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32_TYPELESS">
            <summary>A three-component, 96-bit typeless format that supports 32 bits per color channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32_FLOAT">
            <summary>A three-component, 96-bit floating-point format that supports 32 bits per color channel.<sup>5,8</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32_UINT">
            <summary>A three-component, 96-bit unsigned-integer format that supports 32 bits per color channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32B32_SINT">
            <summary>A three-component, 96-bit signed-integer format that supports 32 bits per color channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_TYPELESS">
            <summary>A four-component, 64-bit typeless format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_FLOAT">
            <summary>A four-component, 64-bit floating-point format that supports 16 bits per channel including alpha.<sup>5,7</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_UNORM">
            <summary>A four-component, 64-bit unsigned-normalized-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_UINT">
            <summary>A four-component, 64-bit unsigned-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_SNORM">
            <summary>A four-component, 64-bit signed-normalized-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16B16A16_SINT">
            <summary>A four-component, 64-bit signed-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32_TYPELESS">
            <summary>A two-component, 64-bit typeless format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32_FLOAT">
            <summary>A two-component, 64-bit floating-point format that supports 32 bits for the red channel and 32 bits for the green channel.<sup>5,8</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32_UINT">
            <summary>A two-component, 64-bit unsigned-integer format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G32_SINT">
            <summary>A two-component, 64-bit signed-integer format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32G8X24_TYPELESS">
            <summary>A two-component, 64-bit typeless format that supports 32 bits for the red channel, 8 bits for the green channel, and 24 bits are unused.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_D32_FLOAT_S8X24_UINT">
            <summary>A 32-bit floating-point component, and two unsigned-integer components (with an additional 32 bits). This format supports 32-bit depth, 8-bit stencil, and 24 bits are unused.⁵</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS">
            <summary>A 32-bit floating-point component, and two typeless components (with an additional 32 bits). This format supports 32-bit red channel, 8 bits are unused, and 24 bits are unused.⁵</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_X32_TYPELESS_G8X24_UINT">
            <summary>A 32-bit typeless component, and two unsigned-integer components (with an additional 32 bits). This format has 32 bits unused, 8 bits for green channel, and 24 bits are unused.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R10G10B10A2_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 10 bits for each color and 2 bits for alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R10G10B10A2_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 10 bits for each color and 2 bits for alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R10G10B10A2_UINT">
            <summary>A four-component, 32-bit unsigned-integer format that supports 10 bits for each color and 2 bits for alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R11G11B10_FLOAT">
            <summary>
            <para>Three partial-precision floating-point numbers encoded into a single 32-bit value (a variant of s10e5, which is sign bit, 10-bit mantissa, and 5-bit biased (15) exponent). There are no sign bits, and there is a 5-bit biased (15) exponent for each channel, 6-bit mantissa  for R and G, and a 5-bit mantissa for B, as shown in the following illustration.<sup>5,7</sup> </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_UNORM_SRGB">
            <summary>A four-component, 32-bit unsigned-normalized integer sRGB format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_UINT">
            <summary>A four-component, 32-bit unsigned-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_SNORM">
            <summary>A four-component, 32-bit signed-normalized-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8B8A8_SINT">
            <summary>A four-component, 32-bit signed-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_TYPELESS">
            <summary>A two-component, 32-bit typeless format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_FLOAT">
            <summary>A two-component, 32-bit floating-point format that supports 16 bits for the red channel and 16 bits for the green channel.<sup>5,7</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_UNORM">
            <summary>A two-component, 32-bit unsigned-normalized-integer format that supports 16 bits each for the green and red channels.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_UINT">
            <summary>A two-component, 32-bit unsigned-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_SNORM">
            <summary>A two-component, 32-bit signed-normalized-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16G16_SINT">
            <summary>A two-component, 32-bit signed-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32_TYPELESS">
            <summary>A single-component, 32-bit typeless format that supports 32 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_D32_FLOAT">
            <summary>A single-component, 32-bit floating-point format that supports 32 bits for depth.<sup>5,8</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32_FLOAT">
            <summary>A single-component, 32-bit floating-point format that supports 32 bits for the red channel.<sup>5,8</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32_UINT">
            <summary>A single-component, 32-bit unsigned-integer format that supports 32 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R32_SINT">
            <summary>A single-component, 32-bit signed-integer format that supports 32 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R24G8_TYPELESS">
            <summary>A two-component, 32-bit typeless format that supports 24 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_D24_UNORM_S8_UINT">
            <summary>A 32-bit z-buffer format that supports 24 bits for depth and 8 bits for stencil.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R24_UNORM_X8_TYPELESS">
            <summary>A 32-bit format, that contains a 24 bit, single-component, unsigned-normalized integer, with an additional typeless 8 bits. This format has 24 bits red channel and 8 bits unused.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_X24_TYPELESS_G8_UINT">
            <summary>A 32-bit format, that contains a 24 bit, single-component, typeless format,  with an additional 8 bit unsigned integer component. This format has 24 bits unused and 8 bits green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_TYPELESS">
            <summary>A two-component, 16-bit typeless format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_UNORM">
            <summary>A two-component, 16-bit unsigned-normalized-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_UINT">
            <summary>A two-component, 16-bit unsigned-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_SNORM">
            <summary>A two-component, 16-bit signed-normalized-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_SINT">
            <summary>A two-component, 16-bit signed-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_TYPELESS">
            <summary>A single-component, 16-bit typeless format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_FLOAT">
            <summary>A single-component, 16-bit floating-point format that supports 16 bits for the red channel.<sup>5,7</sup></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_D16_UNORM">
            <summary>A single-component, 16-bit unsigned-normalized-integer format that supports 16 bits for depth.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_UNORM">
            <summary>A single-component, 16-bit unsigned-normalized-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_UINT">
            <summary>A single-component, 16-bit unsigned-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_SNORM">
            <summary>A single-component, 16-bit signed-normalized-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R16_SINT">
            <summary>A single-component, 16-bit signed-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8_TYPELESS">
            <summary>A single-component, 8-bit typeless format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8_UNORM">
            <summary>A single-component, 8-bit unsigned-normalized-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8_UINT">
            <summary>A single-component, 8-bit unsigned-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8_SNORM">
            <summary>A single-component, 8-bit signed-normalized-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8_SINT">
            <summary>A single-component, 8-bit signed-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_A8_UNORM">
            <summary>A single-component, 8-bit unsigned-normalized-integer format for alpha only.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R1_UNORM">
            <summary>A single-component, 1-bit unsigned-normalized integer format that supports 1 bit for the red channel. ².</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R9G9B9E5_SHAREDEXP">
            <summary>
            <para>Three partial-precision floating-point numbers encoded into a single 32-bit value all sharing the same 5-bit exponent (variant of s10e5, which is sign bit, 10-bit mantissa, and 5-bit biased (15) exponent). There is no sign bit, and there is a shared 5-bit biased (15) exponent and a 9-bit mantissa for each channel, as shown in the following illustration. <sup>6,7</sup>. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R8G8_B8G8_UNORM">
            <summary>
            <para>A four-component, 32-bit unsigned-normalized-integer format. This packed RGB format is analogous to the UYVY format. Each 32-bit block describes a pair of pixels: (R8, G8, B8) and (R8, G8, B8) where the R8/B8 values are repeated, and the G8 values are unique to each pixel. ³ Width must be even.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_G8R8_G8B8_UNORM">
            <summary>
            <para>A four-component, 32-bit unsigned-normalized-integer format. This packed RGB format is analogous to the YUY2 format. Each 32-bit block describes a pair of pixels: (R8, G8, B8) and (R8, G8, B8) where the R8/B8 values are repeated, and the G8 values are unique to each pixel. ³ Width must be even.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC1_TYPELESS">
            <summary>Four-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC1_UNORM">
            <summary>Four-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC1_UNORM_SRGB">
            <summary>Four-component block-compression format for sRGB data. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC2_TYPELESS">
            <summary>Four-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC2_UNORM">
            <summary>Four-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC2_UNORM_SRGB">
            <summary>Four-component block-compression format for sRGB data. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC3_TYPELESS">
            <summary>Four-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC3_UNORM">
            <summary>Four-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC3_UNORM_SRGB">
            <summary>Four-component block-compression format for sRGB data. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC4_TYPELESS">
            <summary>One-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC4_UNORM">
            <summary>One-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC4_SNORM">
            <summary>One-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC5_TYPELESS">
            <summary>Two-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC5_UNORM">
            <summary>Two-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC5_SNORM">
            <summary>Two-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B5G6R5_UNORM">
            <summary>
            <para>A three-component, 16-bit unsigned-normalized-integer format that supports 5 bits for blue, 6 bits for green, and 5 bits for red. <b>Direct3D 10 through Direct3D 11:  </b>This value is defined for DXGI. However, Direct3D 10, 10.1, or 11 devices do not support this format. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B5G5R5A1_UNORM">
            <summary>
            <para>A four-component, 16-bit unsigned-normalized-integer format that supports 5 bits for each color channel and 1-bit alpha. <b>Direct3D 10 through Direct3D 11:  </b>This value is defined for DXGI. However, Direct3D 10, 10.1, or 11 devices do not support this format. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8A8_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits for each color channel and 8-bit alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8X8_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits for each color channel and 8 bits unused.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM">
            <summary>A four-component, 32-bit 2.8-biased fixed-point format that supports 10 bits for each color channel and 2-bit alpha.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8A8_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 8 bits for each channel including alpha. ⁴</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8A8_UNORM_SRGB">
            <summary>A four-component, 32-bit unsigned-normalized standard RGB format that supports 8 bits for each channel including alpha. ⁴</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8X8_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 8 bits for each color channel, and 8 bits are unused. ⁴</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B8G8R8X8_UNORM_SRGB">
            <summary>A four-component, 32-bit unsigned-normalized standard RGB format that supports 8 bits for each color channel, and 8 bits are unused. ⁴</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC6H_TYPELESS">
            <summary>A typeless block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC6H_UF16">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.⁵</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC6H_SF16">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.⁵</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC7_TYPELESS">
            <summary>A typeless block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC7_UNORM">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_BC7_UNORM_SRGB">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_AYUV">
            <summary>
            <para>Most common YUV 4:4:4 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R8G8B8A8_UNORM and DXGI_FORMAT_R8G8B8A8_UINT. For UAVs, an additional valid view format is DXGI_FORMAT_R32_UINT. By using DXGI_FORMAT_R32_UINT for UAVs, you can both read and write as opposed to just write for DXGI_FORMAT_R8G8B8A8_UNORM and DXGI_FORMAT_R8G8B8A8_UINT. Supported view types are SRV, RTV, and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is V-&gt;R8, U-&gt;G8, Y-&gt;B8, and A-&gt;A8. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_Y410">
            <summary>
            <para>10-bit per channel packed YUV 4:4:4 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R10G10B10A2_UNORM and DXGI_FORMAT_R10G10B10A2_UINT. For UAVs, an additional valid view format is DXGI_FORMAT_R32_UINT. By using DXGI_FORMAT_R32_UINT for UAVs, you can both read and write as opposed to just write for DXGI_FORMAT_R10G10B10A2_UNORM and DXGI_FORMAT_R10G10B10A2_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is U-&gt;R10, Y-&gt;G10, V-&gt;B10, and A-&gt;A2. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_Y416">
            <summary>
            <para>16-bit per channel packed YUV 4:4:4 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R16G16B16A16_UNORM and DXGI_FORMAT_R16G16B16A16_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is U-&gt;R16, Y-&gt;G16, V-&gt;B16, and A-&gt;A16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_NV12">
            <summary>
            <para>Most common YUV 4:2:0 video resource format. Valid luminance data view formats for this video resource format are DXGI_FORMAT_R8_UNORM and DXGI_FORMAT_R8_UINT. Valid chrominance data view formats (width and height are each 1/2 of luminance view) for this video resource format are DXGI_FORMAT_R8G8_UNORM and DXGI_FORMAT_R8G8_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R8. For chrominance data view, the mapping to the view channel is U-&gt;R8 and V-&gt;G8. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. The first (SysMemPitch * height) bytes are the Y plane, the remaining (SysMemPitch * (height / 2)) bytes are the UV plane. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_P010">
            <summary>
            <para>10-bit per channel planar YUV 4:2:0 video resource format. Valid luminance data view formats for this video resource format are DXGI_FORMAT_R16_UNORM and DXGI_FORMAT_R16_UINT. The runtime does not enforce whether the lowest 6 bits are 0 (given that this video resource format is a 10-bit format that uses 16 bits). If required, application shader code would have to enforce this manually.  From the runtime's point of view, DXGI_FORMAT_P010 is no different than DXGI_FORMAT_P016. Valid chrominance data view formats (width and height are each 1/2 of luminance view) for this video resource format are DXGI_FORMAT_R16G16_UNORM and DXGI_FORMAT_R16G16_UINT. For UAVs, an additional valid chrominance data view format is DXGI_FORMAT_R32_UINT. By using DXGI_FORMAT_R32_UINT for UAVs, you can both read and write as opposed to just write for DXGI_FORMAT_R16G16_UNORM and DXGI_FORMAT_R16G16_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R16. For chrominance data view, the mapping to the view channel is U-&gt;R16 and V-&gt;G16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. The first (SysMemPitch * height) bytes are the Y plane, the remaining (SysMemPitch * (height / 2)) bytes are the UV plane. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_P016">
            <summary>
            <para>16-bit per channel planar YUV 4:2:0 video resource format. Valid luminance data view formats for this video resource format are DXGI_FORMAT_R16_UNORM and DXGI_FORMAT_R16_UINT. Valid chrominance data view formats (width and height are each 1/2 of luminance view) for this video resource format are DXGI_FORMAT_R16G16_UNORM and DXGI_FORMAT_R16G16_UINT. For UAVs, an additional valid chrominance data view format is DXGI_FORMAT_R32_UINT. By using DXGI_FORMAT_R32_UINT for UAVs, you can both read and write as opposed to just write for DXGI_FORMAT_R16G16_UNORM and DXGI_FORMAT_R16G16_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R16. For chrominance data view, the mapping to the view channel is U-&gt;R16 and V-&gt;G16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. The first (SysMemPitch * height) bytes are the Y plane, the remaining (SysMemPitch * (height / 2)) bytes are the UV plane. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_420_OPAQUE">
            <summary>
            <para>8-bit per channel planar YUV 4:2:0 video resource format. This format is subsampled where each pixel has its own Y value, but each 2x2 pixel block shares a single U and V value. The runtime requires that the width and height of all resources that are created with this format are multiples of 2. The runtime also requires that the left, right, top, and bottom members of any RECT that are used for this format are multiples of 2. This format differs from DXGI_FORMAT_NV12 in that the layout of the data within the resource is completely opaque to applications. Applications cannot use the CPU to map the resource and then access the data within the resource. You cannot use shaders with this format. Because of this behavior, legacy hardware that supports a non-NV12 4:2:0 layout (for example, YV12, and so on) can be used. Also, new hardware that has a 4:2:0 implementation better than NV12 can be used when the application does not need the data to be in a standard layout. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_YUY2">
            <summary>
            <para>Most common YUV 4:2:2 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R8G8B8A8_UNORM and DXGI_FORMAT_R8G8B8A8_UINT. For UAVs, an additional valid view format is DXGI_FORMAT_R32_UINT. By using DXGI_FORMAT_R32_UINT for UAVs, you can both read and write as opposed to just write for DXGI_FORMAT_R8G8B8A8_UNORM and DXGI_FORMAT_R8G8B8A8_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is Y0-&gt;R8, U0-&gt;G8, Y1-&gt;B8, and V0-&gt;A8. A unique valid view format for this video resource format is DXGI_FORMAT_R8G8_B8G8_UNORM. With this view format, the width of the view appears to be twice what the DXGI_FORMAT_R8G8B8A8_UNORM or DXGI_FORMAT_R8G8B8A8_UINT view would be when hardware reconstructs RGBA automatically on read and before filtering.  This Direct3D hardware behavior is legacy and is likely not useful any more. With this view format, the mapping to the view channel is Y0-&gt;R8, U0-&gt; G8[0], Y1-&gt;B8, and V0-&gt; G8[1]. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be even. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_Y210">
            <summary>
            <para>10-bit per channel packed YUV 4:2:2 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R16G16B16A16_UNORM and DXGI_FORMAT_R16G16B16A16_UINT. The runtime does not enforce whether the lowest 6 bits are 0 (given that this video resource format is a 10-bit format that uses 16 bits). If required, application shader code would have to enforce this manually.  From the runtime's point of view, DXGI_FORMAT_Y210 is no different than DXGI_FORMAT_Y216. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is Y0-&gt;R16, U-&gt;G16, Y1-&gt;B16, and V-&gt;A16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be even. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_Y216">
            <summary>
            <para>16-bit per channel packed YUV 4:2:2 video resource format. Valid view formats for this video resource format are DXGI_FORMAT_R16G16B16A16_UNORM and DXGI_FORMAT_R16G16B16A16_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is Y0-&gt;R16, U-&gt;G16, Y1-&gt;B16, and V-&gt;A16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be even. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_NV11">
            <summary>
            <para>Most common planar YUV 4:1:1 video resource format. Valid luminance data view formats for this video resource format are DXGI_FORMAT_R8_UNORM and DXGI_FORMAT_R8_UINT. Valid chrominance data view formats (width and height are each 1/4 of luminance view) for this video resource format are DXGI_FORMAT_R8G8_UNORM and DXGI_FORMAT_R8G8_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R8. For chrominance data view, the mapping to the view channel is U-&gt;R8 and V-&gt;G8. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be a multiple of 4. Direct3D11 staging resources and initData parameters for this format use (rowPitch * height * 2) bytes. The first (SysMemPitch * height) bytes are the Y plane, the next ((SysMemPitch / 2) * height) bytes are the UV plane, and the remainder is padding. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_AI44">
            <summary>
            <para>4-bit palletized YUV format that is commonly used for DVD subpicture. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_IA44">
            <summary>
            <para>4-bit palletized YUV format that is commonly used for DVD subpicture. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_P8">
            <summary>
            <para>8-bit palletized format that is used for palletized RGB data when the processor processes ISDB-T data and for palletized YUV data when the processor processes BluRay data. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_A8P8">
            <summary>
            <para>8-bit palletized format with 8 bits of alpha that is used for palletized YUV data when the processor processes BluRay data. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_B4G4R4A4_UNORM">
            <summary>
            <para>A four-component, 16-bit unsigned-normalized integer format that supports 4 bits for each channel including alpha. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_P208">
            <summary>A video format; an 8-bit version of a hybrid planar 4:2:2 format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_V208">
            <summary>An 8 bit YCbCrA 4:4 rendering format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_V408">
            <summary>An 8 bit YCbCrA 4:4:4:4 rendering format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT.DXGI_FORMAT_FORCE_UINT">
            <summary>
            <para>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits. This value is not used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL.__winmdroot_Graphics_Dxgi_Common_DXGI_RGB_1025.Length">
            <summary>Always <c>1025</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL.__winmdroot_Graphics_Dxgi_Common_DXGI_RGB_1025.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL.__winmdroot_Graphics_Dxgi_Common_DXGI_RGB_1025.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES.__float_1025.Length">
            <summary>Always <c>1025</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES.__float_1025.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES.__float_1025.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1">
            <summary>Describes a display mode and whether the display mode supports stereo.</summary>
            <remarks>
            <para><b>DXGI_MODE_DESC1</b> is identical to <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a> except that <b>DXGI_MODE_DESC1</b> includes the <b>Stereo</b> member. This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutput1-getdisplaymodelist1">GetDisplayModeList1</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutput1-findclosestmatchingmode1">FindClosestMatchingMode1</a> methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_mode_desc1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1.Width">
            <summary>A value that describes the resolution width.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1.Height">
            <summary>A value that describes the resolution height.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1.RefreshRate">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_rational">DXGI_RATIONAL</a> structure that describes the refresh rate in hertz.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1.Format">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value that describes the display format.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1.ScanlineOrdering">
            <summary>A <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173067(v=vs.85)">DXGI_MODE_SCANLINE_ORDER</a>-typed value that describes the scan-line drawing mode.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1.Scaling">
            <summary>A <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173066(v=vs.85)">DXGI_MODE_SCALING</a>-typed value that describes the scaling mode.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1.Stereo">
            <summary>Specifies whether the full-screen display mode is stereo. <b>TRUE</b> if stereo; otherwise, <b>FALSE</b>.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC">
            <summary>Describes a swap chain.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-getdesc">GetDesc</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">CreateSwapChain</a> methods. In full-screen mode, there is a dedicated front buffer; in windowed mode, the desktop is the front buffer. If you create a swap chain with one buffer, specifying <b>DXGI_SWAP_EFFECT_SEQUENTIAL</b> does not cause the contents of the single buffer to be swapped with the front buffer. For performance information about flipping swap-chain buffers in full-screen application, see <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/d3d10-graphics-programming-guide-dxgi">Full-Screen Application Performance Hints</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC.BufferDesc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a></b> A <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a> structure that describes the backbuffer display mode.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC.SampleDesc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a> structure that describes multi-sampling parameters.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC.BufferUsage">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE</a> enumerated type that describes the surface usage and CPU access options for the back buffer. The back buffer can be used for shader input or render-target output.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC.BufferCount">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that describes the number of buffers in the swap chain. When you call  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">IDXGIFactory::CreateSwapChain</a> to create a full-screen swap chain, you typically include the front buffer in this value. For more information about swap-chain buffers, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC.OutputWindow">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a></b> An <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a> handle to the output window. This member must not be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC.Windowed">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> A Boolean value that specifies whether the output is in windowed mode. <b>TRUE</b> if the output is in windowed mode; otherwise, <b>FALSE</b>. We recommend that you create a windowed swap chain and allow the end user to change the swap chain to full screen through <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-setfullscreenstate">IDXGISwapChain::SetFullscreenState</a>; that is, do not set this member to FALSE to force the swap chain to be full screen. However, if you create the swap chain as full screen, also provide the end user with a list of supported display modes through the <b>BufferDesc</b> member because a swap chain that is created with an unsupported display mode might cause the display to go black and prevent the end user from seeing anything. For more information about choosing windowed verses full screen, see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">IDXGIFactory::CreateSwapChain</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC.SwapEffect">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT</a> enumerated type that describes options for handling the contents of the presentation buffer after presenting a surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC.Flags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_chain_flag">DXGI_SWAP_CHAIN_FLAG</a> enumerated type that describes options for swap-chain behavior.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1">
            <summary>Describes a swap chain.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd">CreateSwapChainForHwnd</a>,  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcorewindow">CreateSwapChainForCoreWindow</a>, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">CreateSwapChainForComposition</a>, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_3/nf-dxgi1_3-idxgifactorymedia-createswapchainforcompositionsurfacehandle">CreateSwapChainForCompositionSurfaceHandle</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getdesc1">GetDesc1</a> methods. <div class="alert"><b>Note</b>  You cannot cast a <b>DXGI_SWAP_CHAIN_DESC1</b> to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a> and vice versa. An application must explicitly use the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getdesc1">IDXGISwapChain1::GetDesc1</a> method to retrieve the newer version of the swap-chain description structure.</div> <div> </div> In full-screen mode, there is a dedicated front buffer; in windowed mode, the desktop is the front buffer. For a <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-flip-model">flip-model</a> swap chain (that is, a swap chain that has the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</a> value set in the <b>SwapEffect</b> member), you must set the <b>Format</b> member to <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_R16G16B16A16_FLOAT</a>, <b>DXGI_FORMAT_B8G8R8A8_UNORM</b>, or <b>DXGI_FORMAT_R8G8B8A8_UNORM</b>; you must set the <b>Count</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a> structure that the <b>SampleDesc</b> member specifies to one and the <b>Quality</b> member of <b>DXGI_SAMPLE_DESC</b> to zero because multiple sample antialiasing (MSAA) is not supported; you must set the <b>BufferCount</b> member to from two to sixteen. For more info about flip-model swap chain, see DXGI Flip Model.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1.Width">
            <summary>
            <para>A value that describes the resolution width. If you specify the width as zero when you call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd">IDXGIFactory2::CreateSwapChainForHwnd</a> method to create a swap chain, the runtime obtains the width from the output window and assigns this width value to the swap-chain description. You can subsequently call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getdesc1">IDXGISwapChain1::GetDesc1</a> method to retrieve the assigned width value. You cannot specify the width as zero when you call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1.Height">
            <summary>
            <para>A value that describes the resolution height. If you specify the height as zero when you call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd">IDXGIFactory2::CreateSwapChainForHwnd</a> method to create a swap chain, the runtime obtains the height from the output window and assigns this height value to the swap-chain description. You can subsequently call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getdesc1">IDXGISwapChain1::GetDesc1</a> method to retrieve the assigned height value. You cannot specify the height as zero when you call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1.Format">
            <summary>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> structure that describes the display format.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1.Stereo">
            <summary>
            <para>Specifies whether the full-screen display mode or the swap-chain back buffer is stereo. <b>TRUE</b> if stereo; otherwise, <b>FALSE</b>. If you specify stereo, you must also specify a flip-model swap chain (that is, a swap chain that has the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</a> value set in the <b>SwapEffect</b> member).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1.SampleDesc">
            <summary>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a> structure that describes multi-sampling parameters. This member is valid only with bit-block transfer (bitblt) model swap chains.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1.BufferUsage">
            <summary>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE</a>-typed value that describes the surface usage and CPU access options for the back buffer. The back buffer can be used for shader input or render-target output.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1.BufferCount">
            <summary>
            <para>A value that describes the number of buffers in the swap chain. When you create a full-screen swap chain, you typically include the front buffer in this value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1.Scaling">
            <summary>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ne-dxgi1_2-dxgi_scaling">DXGI_SCALING</a>-typed value that identifies resize behavior if the size of the back buffer is not equal to the target output.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1.SwapEffect">
            <summary>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT</a>-typed value that describes the presentation model that is used by the swap chain and options for handling the contents of the presentation buffer after presenting a surface. You must specify the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</a> value when you call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a> method because this method supports only <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-flip-model">flip presentation model</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1.AlphaMode">
            <summary>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ne-dxgi1_2-dxgi_alpha_mode">DXGI_ALPHA_MODE</a>-typed value that identifies the transparency behavior of the swap-chain back buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1.Flags">
            <summary>
            <para>A combination of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_chain_flag">DXGI_SWAP_CHAIN_FLAG</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies options for swap-chain behavior.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC">
            <summary>Describes an adapter (or video card) by using DXGI 1.0.</summary>
            <remarks>
            <para>The <b>DXGI_ADAPTER_DESC</b> structure provides a description of an adapter.  This structure is initialized by using the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter-getdesc">IDXGIAdapter::GetDesc</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.Description">
            <summary>
            <para>Type: <b>WCHAR[128]</b> A string that contains the adapter description. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter-getdesc">GetDesc</a> returns “Software Adapter” for the description string.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.VendorId">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The PCI ID of the hardware vendor. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter-getdesc">GetDesc</a> returns zeros for the PCI ID of the hardware vendor.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.DeviceId">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The PCI ID of the hardware device. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter-getdesc">GetDesc</a> returns zeros for the PCI ID of the hardware device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.SubSysId">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The PCI ID of the sub system. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter-getdesc">GetDesc</a> returns zeros for the PCI ID of the sub system.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.Revision">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The PCI ID of the revision number of the adapter. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter-getdesc">GetDesc</a> returns zeros for the PCI ID of the revision number of the adapter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.DedicatedVideoMemory">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> The number of bytes of dedicated video memory that are not shared with the CPU.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.DedicatedSystemMemory">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> The number of bytes of dedicated system memory that are not shared with the CPU. This memory is allocated from available system memory at boot time.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.SharedSystemMemory">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> The number of bytes of shared system memory. This is the maximum value of system memory that may be consumed by the adapter during operation. Any incidental memory consumed by the driver as it manages and uses video memory is additional.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.AdapterLuid">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/hardware/drivers/ff549708(v=vs.85)">LUID</a></b> A unique value that identifies the adapter. See <a href="https://docs.microsoft.com/previous-versions/windows/hardware/drivers/ff549708(v=vs.85)">LUID</a> for a definition of the structure. <b>LUID</b> is defined in dxgi.h.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.__char_128.Length">
            <summary>Always <c>128</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.__char_128.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.__char_128.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.__char_128.ToString(System.Int32)">
            <summary>
            Copies the fixed array to a new string up to the specified length regardless of whether there are null terminating characters.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="length"/> is less than <c>0</c> or greater than <see cref="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.__char_128.Length"/>.
            </exception>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC.__char_128.ToString">
            <summary>
            Copies the fixed array to a new string, stopping before the first null terminator character or at the end of the fixed array (whichever is shorter).
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1">
            <summary>Describes an adapter (or video card) using DXGI 1.1.</summary>
            <remarks>
            <para>The <b>DXGI_ADAPTER_DESC1</b> structure provides a DXGI 1.1 description of an adapter.  This structure is initialized by using the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter1-getdesc1">IDXGIAdapter1::GetDesc1</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.Description">
            <summary>
            <para>Type: <b>WCHAR[128]</b> A string that contains the adapter description. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter1-getdesc1">GetDesc1</a> returns “Software Adapter” for the description string.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.VendorId">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The PCI ID of the hardware vendor. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter1-getdesc1">GetDesc1</a> returns zeros for the PCI ID of the hardware vendor.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.DeviceId">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The PCI ID of the hardware device. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter1-getdesc1">GetDesc1</a> returns zeros for the PCI ID of the hardware device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.SubSysId">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The PCI ID of the sub system. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter1-getdesc1">GetDesc1</a> returns zeros for the PCI ID of the sub system.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.Revision">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The PCI ID of the revision number of the adapter. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter1-getdesc1">GetDesc1</a> returns zeros for the PCI ID of the revision number of the adapter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.DedicatedVideoMemory">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> The number of bytes of dedicated video memory that are not shared with the CPU.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.DedicatedSystemMemory">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> The number of bytes of dedicated system memory that are not shared with the CPU. This memory is allocated from available system memory at boot time.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.SharedSystemMemory">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> The number of bytes of shared system memory. This is the maximum value of system memory that may be consumed by the adapter during operation. Any incidental memory consumed by the driver as it manages and uses video memory is additional.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.AdapterLuid">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/hardware/drivers/ff549708(v=vs.85)">LUID</a></b> A unique value that identifies the adapter. See <a href="https://docs.microsoft.com/previous-versions/windows/hardware/drivers/ff549708(v=vs.85)">LUID</a> for a definition of the structure. <b>LUID</b> is defined in dxgi.h.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.Flags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_adapter_flag">DXGI_ADAPTER_FLAG</a> enumerated type that describes the adapter type.  The <b>DXGI_ADAPTER_FLAG_REMOTE</b> flag is reserved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_adapter_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.__char_128.Length">
            <summary>Always <c>128</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.__char_128.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.__char_128.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.__char_128.ToString(System.Int32)">
            <summary>
            Copies the fixed array to a new string up to the specified length regardless of whether there are null terminating characters.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="length"/> is less than <c>0</c> or greater than <see cref="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.__char_128.Length"/>.
            </exception>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1.__char_128.ToString">
            <summary>
            Copies the fixed array to a new string, stopping before the first null terminator character or at the end of the fixed array (whichever is shorter).
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2">
            <summary>Describes an adapter (or video card) that uses Microsoft DirectX Graphics Infrastructure (DXGI) 1.2.</summary>
            <remarks>
            <para>The <b>DXGI_ADAPTER_DESC2</b> structure provides a DXGI 1.2 description of an adapter.  This structure is initialized by using the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiadapter2-getdesc2">IDXGIAdapter2::GetDesc2</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_adapter_desc2#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.Description">
            <summary>A string that contains the adapter description.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.VendorId">
            <summary>The PCI ID of the hardware vendor.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.DeviceId">
            <summary>The PCI ID of the hardware device.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.SubSysId">
            <summary>The PCI ID of the sub system.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.Revision">
            <summary>The PCI ID of the revision number of the adapter.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.DedicatedVideoMemory">
            <summary>The number of bytes of dedicated video memory that are not shared with the CPU.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.DedicatedSystemMemory">
            <summary>The number of bytes of dedicated system memory that are not shared with the CPU. This memory is allocated from available system memory at boot time.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.SharedSystemMemory">
            <summary>The number of bytes of shared system memory. This is the maximum value of system memory that may be consumed by the adapter during operation. Any incidental memory consumed by the driver as it manages and uses video memory is additional.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.AdapterLuid">
            <summary>A unique value that identifies the adapter. See <a href="https://docs.microsoft.com/previous-versions/windows/hardware/drivers/ff549708(v=vs.85)">LUID</a> for a definition of the structure. <b>LUID</b> is defined in dxgi.h.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.Flags">
            <summary>A value of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_adapter_flag">DXGI_ADAPTER_FLAG</a> enumerated type that describes the adapter type.  The <b>DXGI_ADAPTER_FLAG_REMOTE</b> flag is reserved.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.GraphicsPreemptionGranularity">
            <summary>A value of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ne-dxgi1_2-dxgi_graphics_preemption_granularity">DXGI_GRAPHICS_PREEMPTION_GRANULARITY</a> enumerated type that describes the granularity level at which the GPU can be preempted from performing its current graphics rendering task.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.ComputePreemptionGranularity">
            <summary>A value of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ne-dxgi1_2-dxgi_compute_preemption_granularity">DXGI_COMPUTE_PREEMPTION_GRANULARITY</a> enumerated type that describes the granularity level at which the GPU can be preempted from performing its current compute task.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.__char_128.Length">
            <summary>Always <c>128</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.__char_128.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.__char_128.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.__char_128.ToString(System.Int32)">
            <summary>
            Copies the fixed array to a new string up to the specified length regardless of whether there are null terminating characters.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="length"/> is less than <c>0</c> or greater than <see cref="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.__char_128.Length"/>.
            </exception>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2.__char_128.ToString">
            <summary>
            Copies the fixed array to a new string, stopping before the first null terminator character or at the end of the fixed array (whichever is shorter).
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3">
            <summary>Describes an adapter (or video card) that uses Microsoft DirectX Graphics Infrastructure (DXGI) 1.6.</summary>
            <remarks>
            <para>The <b>DXGI_ADAPTER_DESC3</b> structure provides a DXGI 1.6 description of an adapter.  This structure is initialized by using the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_6/nf-dxgi1_6-idxgiadapter4-getdesc3">IDXGIAdapter4::GetDesc3</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_adapter_desc3#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.Description">
            <summary>A string that contains the adapter description.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.VendorId">
            <summary>The PCI ID of the hardware vendor.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.DeviceId">
            <summary>The PCI ID of the hardware device.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.SubSysId">
            <summary>The PCI ID of the sub system.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.Revision">
            <summary>The PCI ID of the revision number of the adapter.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.DedicatedVideoMemory">
            <summary>The number of bytes of dedicated video memory that are not shared with the CPU.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.DedicatedSystemMemory">
            <summary>The number of bytes of dedicated system memory that are not shared with the CPU. This memory is allocated from available system memory at boot time.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.SharedSystemMemory">
            <summary>The number of bytes of shared system memory. This is the maximum value of system memory that may be consumed by the adapter during operation. Any incidental memory consumed by the driver as it manages and uses video memory is additional.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.AdapterLuid">
            <summary>A unique value that identifies the adapter. See <a href="https://docs.microsoft.com/previous-versions/windows/hardware/drivers/ff549708(v=vs.85)">LUID</a> for a definition of the structure. <b>LUID</b> is defined in dxgi.h.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.Flags">
            <summary>A value of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_6/ne-dxgi1_6-dxgi_adapter_flag3">DXGI_ADAPTER_FLAG3</a> enumeration that describes the adapter type.  The <b>DXGI_ADAPTER_FLAG_REMOTE</b> flag is reserved.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.GraphicsPreemptionGranularity">
            <summary>A value of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ne-dxgi1_2-dxgi_graphics_preemption_granularity">DXGI_GRAPHICS_PREEMPTION_GRANULARITY</a> enumerated type that describes the granularity level at which the GPU can be preempted from performing its current graphics rendering task.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.ComputePreemptionGranularity">
            <summary>A value of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ne-dxgi1_2-dxgi_compute_preemption_granularity">DXGI_COMPUTE_PREEMPTION_GRANULARITY</a> enumerated type that describes the granularity level at which the GPU can be preempted from performing its current compute task.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.__char_128.Length">
            <summary>Always <c>128</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.__char_128.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.__char_128.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.__char_128.ToString(System.Int32)">
            <summary>
            Copies the fixed array to a new string up to the specified length regardless of whether there are null terminating characters.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="length"/> is less than <c>0</c> or greater than <see cref="P:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.__char_128.Length"/>.
            </exception>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3.__char_128.ToString">
            <summary>
            Copies the fixed array to a new string, stopping before the first null terminator character or at the end of the fixed array (whichever is shorter).
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_FLAG3">
            <summary>Identifies the type of DXGI adapter.</summary>
            <remarks>
            <para>The <b>DXGI_ADAPTER_FLAG3</b> enumerated type is used by the <b>Flags</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_6/ns-dxgi1_6-dxgi_adapter_desc3">DXGI_ADAPTER_DESC3</a> structure to ientify the type of DXGI adapter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ne-dxgi1_6-dxgi_adapter_flag3#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_FLAG3.DXGI_ADAPTER_FLAG3_NONE">
            <summary>Specifies no flags.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_FLAG3.DXGI_ADAPTER_FLAG3_REMOTE">
            <summary>Value always set to 0. This flag is reserved.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_FLAG3.DXGI_ADAPTER_FLAG3_SOFTWARE">
            <summary>
            <para>Specifies a software adapter. For more info about this flag, see <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/d3d10-graphics-programming-guide-dxgi">new info in Windows 8 about enumerating adapters</a>. <b>Direct3D 11:  </b>This enumeration value is supported starting with Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ne-dxgi1_6-dxgi_adapter_flag3#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_FLAG3.DXGI_ADAPTER_FLAG3_ACG_COMPATIBLE">
            <summary>Specifies that the adapter's driver has been confirmed to work in an OS process where Arbitrary Code Guard (ACG) is enabled (i.e. dynamic code generation is disallowed).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_FLAG3.DXGI_ADAPTER_FLAG3_SUPPORT_MONITORED_FENCES">
            <summary>Specifies that the adapter supports monitored fences. These adapters support the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12device">ID3D12Device::CreateFence</a> and <a href="https://docs.microsoft.com/windows/desktop/api/d3d11_4/nn-d3d11_4-id3d11device5">ID3D11Device5::CreateFence</a> functions.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_FLAG3.DXGI_ADAPTER_FLAG3_SUPPORT_NON_MONITORED_FENCES">
            <summary>
            <para>Specifies that the adapter supports non-monitored fences. These adapters support the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12device">ID3D12Device::CreateFence</a> function together with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_fence_flags">D3D12_FENCE_FLAG_NON_MONITORED</a> flag. <div class="alert"><b>Note</b>  For adapters that support both monitored and non-monitored fences, non-monitored fences are only supported when created with the <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_fence_flags">D3D12_FENCE_FLAG_SHARED</a> and <b>D3D12_FENCE_FLAG_SHARED_CROSS_ADAPTER</b> flags. Monitored fences should always be used by supporting adapters unless communicating with an adapter that only supports non-monitored fences.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ne-dxgi1_6-dxgi_adapter_flag3#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_FLAG3.DXGI_ADAPTER_FLAG3_KEYED_MUTEX_CONFORMANCE">
            <summary>Specifies that the adapter claims keyed mutex conformance. This signals a stronger guarantee that the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgikeyedmutex">IDXGIKeyedMutex</a> interface behaves correctly.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_FLAG3.DXGI_ADAPTER_FLAG3_FORCE_DWORD">
            <summary>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits. This value is not used.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_COMPUTE_PREEMPTION_GRANULARITY">
            <summary>Identifies the granularity at which the graphics processing unit (GPU) can be preempted from performing its current compute task.</summary>
            <remarks>
            <para>You call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiadapter2-getdesc2">IDXGIAdapter2::GetDesc2</a> method to retrieve the granularity level at which the GPU can be preempted from performing its current compute task. The operating system specifies the compute granularity level in the  <b>ComputePreemptionGranularity</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_adapter_desc2">DXGI_ADAPTER_DESC2</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_compute_preemption_granularity#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_COMPUTE_PREEMPTION_GRANULARITY.DXGI_COMPUTE_PREEMPTION_DMA_BUFFER_BOUNDARY">
            <summary>Indicates the preemption granularity as a compute packet.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_COMPUTE_PREEMPTION_GRANULARITY.DXGI_COMPUTE_PREEMPTION_DISPATCH_BOUNDARY">
            <summary>Indicates the preemption granularity as a dispatch (for example, a call to the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-dispatch">ID3D11DeviceContext::Dispatch</a> method). A dispatch is a part of a compute packet.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_COMPUTE_PREEMPTION_GRANULARITY.DXGI_COMPUTE_PREEMPTION_THREAD_GROUP_BOUNDARY">
            <summary>Indicates the preemption granularity as a thread group. A thread group is a part of a dispatch.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_COMPUTE_PREEMPTION_GRANULARITY.DXGI_COMPUTE_PREEMPTION_THREAD_BOUNDARY">
            <summary>Indicates the preemption granularity as a thread in a thread group. A thread is a part of a thread group.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_COMPUTE_PREEMPTION_GRANULARITY.DXGI_COMPUTE_PREEMPTION_INSTRUCTION_BOUNDARY">
            <summary>Indicates the preemption granularity as a compute instruction in a thread.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_FEATURE">
            <summary>Specifies a range of hardware features, to be used when checking for feature support.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_5/nf-dxgi1_5-idxgifactory5-checkfeaturesupport">CheckFeatureSupport</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/ne-dxgi1_5-dxgi_feature#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_FEATURE.DXGI_FEATURE_PRESENT_ALLOW_TEARING">
            <summary>The display supports tearing, a requirement of variable refresh rate displays.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS">
            <summary>Describes timing and presentation statistics for a frame.</summary>
            <remarks>
            <para>You initialize the <b>DXGI_FRAME_STATISTICS</b> structure with the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgioutput-getframestatistics">IDXGIOutput::GetFrameStatistics</a> or <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-getframestatistics">IDXGISwapChain::GetFrameStatistics</a> method. You can only use <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-getframestatistics">IDXGISwapChain::GetFrameStatistics</a> for swap chains that either use the flip presentation model or draw in full-screen mode. You set the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</a> value in the <b>SwapEffect</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a> structure to specify that the swap chain uses the flip presentation model. The values in the <b>PresentCount</b> and <b>PresentRefreshCount</b> members indicate information about when a frame was presented on the display screen. You can use these values to determine whether a glitch occurred. The values in the <b>SyncRefreshCount</b> and <b>SyncQPCTime</b> members indicate timing information that you can use for audio and video synchronization or very precise animation. If the swap chain draws in full-screen mode, these values are based on when the computer booted. If the swap chain draws in windowed mode, these values are based on when the swap chain is created.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_frame_statistics#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS.PresentCount">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that represents the running total count of times that an image was presented to the monitor since the computer booted. <div class="alert"><b>Note</b>  The number of times that an image was presented to the monitor is not necessarily the same as the number of times that you called <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-present">IDXGISwapChain::Present</a> or <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a>.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_frame_statistics#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS.PresentRefreshCount">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that represents  the running total count of v-blanks at which the last image was presented to the monitor and that have happened since the computer booted (for windowed mode, since the swap chain was created).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_frame_statistics#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS.SyncRefreshCount">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that represents  the running total count of v-blanks when the scheduler last sampled the machine time by calling <a href="https://docs.microsoft.com/windows/desktop/api/profileapi/nf-profileapi-queryperformancecounter">QueryPerformanceCounter</a> and that have happened since the computer booted (for windowed mode, since the swap chain was created).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_frame_statistics#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS.SyncQPCTime">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/winnt/ns-winnt-large_integer-r1">LARGE_INTEGER</a></b> A value that represents the high-resolution performance counter timer. This value is the same as the value returned by the <a href="https://docs.microsoft.com/windows/desktop/api/profileapi/nf-profileapi-queryperformancecounter">QueryPerformanceCounter</a> function.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_frame_statistics#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS.SyncGPUTime">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/winnt/ns-winnt-large_integer-r1">LARGE_INTEGER</a></b> Reserved. Always returns 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_frame_statistics#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_GPU_PREFERENCE">
            <summary>The preference of GPU for the app to run on.</summary>
            <remarks>
            <para>This enumeration is used in the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_6/nf-dxgi1_6-idxgifactory6-enumadapterbygpupreference">IDXGIFactory6::EnumAdapterByGpuPreference</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ne-dxgi1_6-dxgi_gpu_preference#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_GPU_PREFERENCE.DXGI_GPU_PREFERENCE_UNSPECIFIED">
            <summary>No preference of GPU.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_GPU_PREFERENCE.DXGI_GPU_PREFERENCE_MINIMUM_POWER">
            <summary>Preference for the minimum-powered GPU (such as an integrated graphics processor, or iGPU).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_GPU_PREFERENCE.DXGI_GPU_PREFERENCE_HIGH_PERFORMANCE">
            <summary>Preference for the highest performing GPU, such as a discrete graphics processor (dGPU) or external graphics processor (xGPU).</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_GRAPHICS_PREEMPTION_GRANULARITY">
            <summary>Identifies the granularity at which the graphics processing unit (GPU) can be preempted from performing its current graphics rendering task.</summary>
            <remarks>
            <para>You call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiadapter2-getdesc2">IDXGIAdapter2::GetDesc2</a> method to retrieve the granularity level at which the GPU can be preempted from performing its current graphics rendering task. The operating system specifies the graphics granularity level in the  <b>GraphicsPreemptionGranularity</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_adapter_desc2">DXGI_ADAPTER_DESC2</a> structure. The following figure shows granularity of graphics rendering tasks. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_graphics_preemption_granularity#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_GRAPHICS_PREEMPTION_GRANULARITY.DXGI_GRAPHICS_PREEMPTION_DMA_BUFFER_BOUNDARY">
            <summary>Indicates the preemption granularity as a DMA buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_GRAPHICS_PREEMPTION_GRANULARITY.DXGI_GRAPHICS_PREEMPTION_PRIMITIVE_BOUNDARY">
            <summary>Indicates the preemption granularity as a graphics primitive. A primitive is a section in a DMA buffer and can be a group of triangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_GRAPHICS_PREEMPTION_GRANULARITY.DXGI_GRAPHICS_PREEMPTION_TRIANGLE_BOUNDARY">
            <summary>Indicates the preemption granularity as a triangle. A triangle is a part of a primitive.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_GRAPHICS_PREEMPTION_GRANULARITY.DXGI_GRAPHICS_PREEMPTION_PIXEL_BOUNDARY">
            <summary>Indicates the preemption granularity as a pixel. A pixel is a part of a triangle.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_GRAPHICS_PREEMPTION_GRANULARITY.DXGI_GRAPHICS_PREEMPTION_INSTRUCTION_BOUNDARY">
            <summary>Indicates the preemption granularity as a graphics instruction. A graphics instruction operates on a pixel.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_HDR_METADATA_TYPE">
            <summary>Specifies the header metadata type.</summary>
            <remarks>
            <para>This enum is used by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_5/nf-dxgi1_5-idxgiswapchain4-sethdrmetadata">SetHDRMetaData</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/ne-dxgi1_5-dxgi_hdr_metadata_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_HDR_METADATA_TYPE.DXGI_HDR_METADATA_TYPE_NONE">
            <summary>Indicates there is no header metadata.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_HDR_METADATA_TYPE.DXGI_HDR_METADATA_TYPE_HDR10">
            <summary>Indicates the header metadata is held by a  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_5/ns-dxgi1_5-dxgi_hdr_metadata_hdr10">DXGI_HDR_METADATA_HDR10</a> structure.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_HDR_METADATA_TYPE.DXGI_HDR_METADATA_TYPE_HDR10PLUS">
            <summary></summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_MAPPED_RECT">
            <summary>Describes a mapped rectangle that is used to access a surface.</summary>
            <remarks>
            <para>The <b>DXGI_MAPPED_RECT</b> structure is initialized by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgisurface-map">IDXGISurface::Map</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_mapped_rect#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MAPPED_RECT.Pitch">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">INT</a></b> A value that describes the width, in bytes, of the surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_mapped_rect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MAPPED_RECT.pBits">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BYTE</a>*</b> A pointer to the image buffer of the surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_mapped_rect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F">
            <summary>Represents a 3x2 matrix. Used with GetMatrixTransform and SetMatrixTransform to indicate the scaling and translation transform for SwapChainPanel swap chains.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/ns-dxgi1_3-dxgi_matrix_3x2_f">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F._11">
            <summary>The value in the first row and first column of the matrix.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F._12">
            <summary>The value in the first row and second column of the matrix.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F._21">
            <summary>The value in the second row and first column of the matrix.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F._22">
            <summary>The value in the second row and second column of the matrix.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F._31">
            <summary>The value in the third row and first column of the matrix.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F._32">
            <summary>The value in the third row and second column of the matrix.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_MEMORY_SEGMENT_GROUP">
            <summary>Specifies the memory segment group to use.</summary>
            <remarks>
            <para>This enum is used by <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/nf-dxgi1_4-idxgiadapter3-queryvideomemoryinfo">QueryVideoMemoryInfo</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/nf-dxgi1_4-idxgiadapter3-setvideomemoryreservation">SetVideoMemoryReservation</a>. Refer to the remarks for <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_memory_pool">D3D12_MEMORY_POOL</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/ne-dxgi1_4-dxgi_memory_segment_group#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MEMORY_SEGMENT_GROUP.DXGI_MEMORY_SEGMENT_GROUP_LOCAL">
            <summary>The grouping of segments which is considered local to the video adapter, and represents the fastest available memory to the GPU. Applications should target the local segment group as the target size for their working set.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_MEMORY_SEGMENT_GROUP.DXGI_MEMORY_SEGMENT_GROUP_NON_LOCAL">
            <summary>The grouping of segments which is considered non-local to the video adapter, and may have slower performance than the local segment group.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_DESC">
            <summary>The DXGI_OUTDUPL_DESC structure describes the dimension of the output and the surface that contains the desktop image. The format of the desktop image is always DXGI_FORMAT_B8G8R8A8_UNORM.</summary>
            <remarks>
            <para>This structure is used by <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getdesc">GetDesc</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_outdupl_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_DESC.ModeDesc">
            <summary>A <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a> structure that describes the display mode of the duplicated output.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_DESC.Rotation">
            <summary>A member of the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173065(v=vs.85)">DXGI_MODE_ROTATION</a> enumerated type that describes how the duplicated output rotates an image.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_DESC.DesktopImageInSystemMemory">
            <summary>Specifies whether the resource that contains the desktop image is already located in system memory. <b>TRUE</b> if the resource is in system memory; otherwise, <b>FALSE</b>. If this value is <b>TRUE</b> and  the application requires CPU access, it can use the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutputduplication-mapdesktopsurface">IDXGIOutputDuplication::MapDesktopSurface</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutputduplication-unmapdesktopsurface">IDXGIOutputDuplication::UnMapDesktopSurface</a> methods to avoid copying the data into a staging buffer.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO">
            <summary>The DXGI_OUTDUPL_FRAME_INFO structure describes the current desktop image.</summary>
            <remarks>
            <para>A non-zero <b>LastMouseUpdateTime</b> indicates an update to either a mouse pointer position or a mouse pointer position and shape. That is, the mouse pointer position is always valid for a non-zero <b>LastMouseUpdateTime</b>; however, the application must check the value of the <b>PointerShapeBufferSize</b> member to determine whether the shape was updated too. If only the pointer was updated (that is, the desktop image was not updated), the <b>AccumulatedFrames</b>, <b>TotalMetadataBufferSize</b>, and <b>LastPresentTime</b> members are set to zero. An <b>AccumulatedFrames</b> value of one indicates that the application completed processing the last frame before a new desktop image was presented.  If the <b>AccumulatedFrames</b> value is greater than one, more desktop image updates have occurred while the application processed the last desktop update. In this situation, the operating system accumulated the update regions. For more information about desktop updates, see Desktop Update Data. A non-zero <b>TotalMetadataBufferSize</b> indicates the total size of the buffers that are required to store all the desktop update metadata.  An application cannot determine the size of each type of metadata.  The application must call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframedirtyrects">IDXGIOutputDuplication::GetFrameDirtyRects</a>, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframemoverects">IDXGIOutputDuplication::GetFrameMoveRects</a>, or <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframepointershape">IDXGIOutputDuplication::GetFramePointerShape</a> method to obtain information about each type of metadata. <div class="alert"><b>Note</b>  To correct visual effects, an application must process the move region data before it processes the dirty rectangles.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_outdupl_frame_info#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO.LastPresentTime">
            <summary>
            <para>The time stamp of the last update of the desktop image.  The operating system calls the <a href="https://docs.microsoft.com/windows/desktop/api/profileapi/nf-profileapi-queryperformancecounter">QueryPerformanceCounter</a> function to obtain the value. A zero value indicates that the desktop image was not updated since an application last called the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutputduplication-acquirenextframe">IDXGIOutputDuplication::AcquireNextFrame</a> method to acquire the next frame of the desktop image.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_outdupl_frame_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO.LastMouseUpdateTime">
            <summary>
            <para>The time stamp of the last update to the mouse.  The operating system calls the <a href="https://docs.microsoft.com/windows/desktop/api/profileapi/nf-profileapi-queryperformancecounter">QueryPerformanceCounter</a> function to obtain the value. A zero value indicates that the position or shape of the mouse was not updated since an application last called the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutputduplication-acquirenextframe">IDXGIOutputDuplication::AcquireNextFrame</a> method to acquire the next frame of the desktop image.  The mouse position is always supplied for a mouse update. A new pointer shape is indicated by a non-zero value in the <b>PointerShapeBufferSize</b> member.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_outdupl_frame_info#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO.AccumulatedFrames">
            <summary>The number of frames that the operating system accumulated in the desktop image surface since the calling application processed the last desktop image.  For more information about this number, see Remarks.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO.RectsCoalesced">
            <summary>Specifies whether the operating system accumulated updates by coalescing dirty regions. Therefore,  the dirty regions might contain unmodified pixels. <b>TRUE</b> if dirty regions were accumulated; otherwise, <b>FALSE</b>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO.ProtectedContentMaskedOut">
            <summary>Specifies whether the desktop image might contain protected content that was already blacked out in the desktop image.  <b>TRUE</b> if protected content was already blacked; otherwise, <b>FALSE</b>. The application can use this information to notify the remote user that some of the desktop content might be protected and therefore not visible.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO.PointerPosition">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_outdupl_pointer_position">DXGI_OUTDUPL_POINTER_POSITION</a> structure that describes the most recent mouse position if the <b>LastMouseUpdateTime</b> member is a non-zero value; otherwise, this value is ignored. This value provides the coordinates of the location where the top-left-hand corner of the pointer shape is drawn; this value is not the desktop position of the hot spot.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO.TotalMetadataBufferSize">
            <summary>Size in bytes of the buffers to store all the desktop update metadata for this frame. For more information about this size, see Remarks.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO.PointerShapeBufferSize">
            <summary>Size in bytes of the buffer to hold the new pixel data for the mouse shape. For more information about this size, see Remarks.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_MOVE_RECT">
            <summary>The DXGI_OUTDUPL_MOVE_RECT structure describes the movement of a rectangle.</summary>
            <remarks>
            <para>This structure is used by <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframemoverects">GetFrameMoveRects</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_outdupl_move_rect#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_MOVE_RECT.SourcePoint">
            <summary>The starting position of a rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_MOVE_RECT.DestinationRect">
            <summary>The target region to which to move a rectangle.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_POSITION">
            <summary>The DXGI_OUTDUPL_POINTER_POSITION structure describes the position of the hardware cursor.</summary>
            <remarks>
            <para>The <b>Position</b> member is valid only if the <b>Visible</b> member’s value is set to <b>TRUE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_outdupl_pointer_position#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_POSITION.Position">
            <summary>The position of the hardware cursor relative to the top-left of the adapter output.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_POSITION.Visible">
            <summary>Specifies whether the hardware cursor is visible. <b>TRUE</b> if visible; otherwise, <b>FALSE</b>. If the hardware cursor is not visible, the calling application does not display the cursor in the client.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_SHAPE_INFO">
            <summary>The DXGI_OUTDUPL_POINTER_SHAPE_INFO structure describes information about the cursor shape.</summary>
            <remarks>
            <para>An application draws the cursor shape with the top-left-hand corner drawn at the position that the <b>Position</b> member of the  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_outdupl_pointer_position">DXGI_OUTDUPL_POINTER_POSITION</a> structure specifies; the application does not use the hot spot to draw the cursor shape. An application calls the  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframepointershape">IDXGIOutputDuplication::GetFramePointerShape</a> method to retrieve cursor shape information in a  <b>DXGI_OUTDUPL_POINTER_SHAPE_INFO</b> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_outdupl_pointer_shape_info#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_SHAPE_INFO.Type">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ne-dxgi1_2-dxgi_outdupl_pointer_shape_type">DXGI_OUTDUPL_POINTER_SHAPE_TYPE</a>-typed value that specifies the type of cursor shape.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_SHAPE_INFO.Width">
            <summary>The width in pixels of the mouse cursor.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_SHAPE_INFO.Height">
            <summary>The height in scan lines of the mouse cursor.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_SHAPE_INFO.Pitch">
            <summary>The width in bytes of the mouse cursor.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_SHAPE_INFO.HotSpot">
            <summary>The position of the cursor's hot spot relative to its upper-left pixel. An application does not use the hot spot when it determines where to draw the cursor shape.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC">
            <summary>Describes an output or physical connection between the adapter (video card) and a device.</summary>
            <remarks>
            <para>The <b>DXGI_OUTPUT_DESC</b> structure is initialized by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgioutput-getdesc">IDXGIOutput::GetDesc</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_output_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC.DeviceName">
            <summary>
            <para>Type: <b>WCHAR[32]</b> A string that contains the name of the output device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_output_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC.DesktopCoordinates">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure containing the bounds of the output in desktop coordinates. Desktop coordinates depend on the dots per inch (DPI) of the desktop. For info about writing DPI-aware Win32 apps, see <a href="https://docs.microsoft.com/windows/desktop/hidpi/high-dpi-desktop-application-development-on-windows">High DPI</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_output_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC.AttachedToDesktop">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> True if the output is attached to the desktop; otherwise, false.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_output_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC.Rotation">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173065(v=vs.85)">DXGI_MODE_ROTATION</a></b> A member of the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173065(v=vs.85)">DXGI_MODE_ROTATION</a> enumerated type describing on how an image is rotated by the output.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_output_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC.Monitor">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMONITOR</a></b> An <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMONITOR</a> handle that represents the display monitor. For more information, see <a href="https://docs.microsoft.com/windows/desktop/gdi/hmonitor-and-the-device-context">HMONITOR and the Device Context</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_output_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC.__char_32.Length">
            <summary>Always <c>32</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC.__char_32.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC.__char_32.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC.__char_32.ToString(System.Int32)">
            <summary>
            Copies the fixed array to a new string up to the specified length regardless of whether there are null terminating characters.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="length"/> is less than <c>0</c> or greater than <see cref="P:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC.__char_32.Length"/>.
            </exception>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC.__char_32.ToString">
            <summary>
            Copies the fixed array to a new string, stopping before the first null terminator character or at the end of the fixed array (whichever is shorter).
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1">
            <summary>Describes an output or physical connection between the adapter (video card) and a device, including additional information about color capabilities and connection type.</summary>
            <remarks>
            <para>The <b>DXGI_OUTPUT_DESC1</b> structure is initialized by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_6/nf-dxgi1_6-idxgioutput6-getdesc1">IDXGIOutput6::GetDesc1</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.DeviceName">
            <summary>
            <para>Type: <b>WCHAR[32]</b> A string that contains the name of the output device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.DesktopCoordinates">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure containing the bounds of the output in desktop coordinates. Desktop coordinates depend on the dots per inch (DPI) of the desktop. For info about writing DPI-aware Win32 apps, see <a href="https://docs.microsoft.com/windows/desktop/hidpi/high-dpi-desktop-application-development-on-windows">High DPI</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.AttachedToDesktop">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> True if the output is attached to the desktop; otherwise, false.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.Rotation">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173065(v=vs.85)">DXGI_MODE_ROTATION</a></b> A member of the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173065(v=vs.85)">DXGI_MODE_ROTATION</a> enumerated type describing on how an image is rotated by the output.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.Monitor">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMONITOR</a></b> An <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMONITOR</a> handle that represents the display monitor. For more information, see <a href="https://docs.microsoft.com/windows/desktop/gdi/hmonitor-and-the-device-context">HMONITOR and the Device Context</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.BitsPerColor">
            <summary>
            <para>Type: <b>UINT</b> The number of bits per color channel for the active wire format of the display attached to this output.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.ColorSpace">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a></b> The current advanced color capabilities of the display attached to this output. Specifically, whether its capable of reproducing color and luminance values outside of the sRGB color space. A value of DXGI_COLOR_SPACE_RGB_FULL_G22_NONE_P709 indicates that the display is limited to SDR/sRGB; A value of DXGI_COLOR_SPACE_RGB_FULL_G2048_NONE_P2020 indicates that the display supports advanced color capabilities. For detailed luminance and color capabilities, see additional members of this struct.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.RedPrimary">
            <summary>
            <para>Type: <b>FLOAT[2]</b> The red color primary, in xy coordinates, of the display attached to this output. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.GreenPrimary">
            <summary>
            <para>Type: <b>FLOAT[2]</b> The green color primary, in xy coordinates, of the display attached to this output. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.BluePrimary">
            <summary>
            <para>Type: <b>FLOAT[2]</b> The blue color primary, in xy coordinates, of the display attached to this output. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.WhitePoint">
            <summary>
            <para>Type: <b>FLOAT[2]</b> The white point, in xy coordinates, of the display attached to this output. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.MinLuminance">
            <summary>
            <para>Type: <b>FLOAT</b> The minimum luminance, in nits, that the display attached to this output is capable of rendering. Content should not exceed this minimum value for optimal rendering. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.MaxLuminance">
            <summary>
            <para>Type: <b>FLOAT</b> The maximum luminance, in nits, that the display attached to this output is capable of rendering; this value is likely only valid for a small area of the panel. Content should not exceed this minimum value for optimal rendering. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.MaxFullFrameLuminance">
            <summary>
            <para>Type: <b>FLOAT</b> The maximum luminance, in nits, that the display attached to this output is capable of rendering; unlike MaxLuminance, this value is valid for a color that fills the entire area of the panel. Content should not exceed this value across the entire panel for optimal rendering. This value will usually come from the EDID of the corresponding display or sometimes from an override.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/ns-dxgi1_6-dxgi_output_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.__char_32.Length">
            <summary>Always <c>32</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.__char_32.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.__char_32.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.__char_32.ToString(System.Int32)">
            <summary>
            Copies the fixed array to a new string up to the specified length regardless of whether there are null terminating characters.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="length"/> is less than <c>0</c> or greater than <see cref="P:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.__char_32.Length"/>.
            </exception>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.__char_32.ToString">
            <summary>
            Copies the fixed array to a new string, stopping before the first null terminator character or at the end of the fixed array (whichever is shorter).
            </summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.__float_2.Length">
            <summary>Always <c>2</c>.</summary>
        </member>
        <member name="P:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.__float_2.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1.__float_2.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS">
            <summary>Describes information about present that helps the operating system optimize presentation.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">Present1</a> method. The scroll rectangle and the list of dirty rectangles could overlap.  In this situation, the dirty rectangles take priority. Applications can then have pieces of dynamic content on top of a scrolled area. For example, an application could scroll a page and play video at the same time. The following diagram and coordinates illustrate this example. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_present_parameters#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS.DirtyRectsCount">
            <summary>The number of updated rectangles that you update in the back buffer for the presented frame. The operating system uses this information to optimize presentation. You can set this member to 0 to indicate that you update the whole frame.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS.pDirtyRects">
            <summary>A list of updated rectangles that you update in the back buffer for the presented frame. An application must update every single pixel in each rectangle that it reports to the runtime; the application cannot assume that the pixels are saved from the previous frame. For more information about updating dirty rectangles, see Remarks. You can set this member to <b>NULL</b> if <b>DirtyRectsCount</b> is 0. An application must not update any pixel outside of the dirty rectangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS.pScrollRect">
            <summary>
            <para>A pointer to the scrolled rectangle. The scrolled rectangle is the rectangle of the previous frame from which the runtime bit-block transfers (bitblts) content. The runtime also uses the scrolled rectangle to optimize presentation in terminal server and indirect display scenarios. The scrolled rectangle also describes the destination rectangle, that is, the region on the current frame that is filled with scrolled content. You can set this member to <b>NULL</b> to indicate that no content is scrolled from the previous frame.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_present_parameters#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS.pScrollOffset">
            <summary>A pointer to the offset of the scrolled area that goes from the source rectangle (of previous frame) to the destination rectangle (of current frame). You can set this member to <b>NULL</b> to indicate no offset.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_QUERY_VIDEO_MEMORY_INFO">
            <summary>Describes the current video memory budgeting parameters.</summary>
            <remarks>
            <para>Use this structure with <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/nf-dxgi1_4-idxgiadapter3-queryvideomemoryinfo">QueryVideoMemoryInfo</a>. Refer to the remarks for <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d12_memory_pool">D3D12_MEMORY_POOL</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/ns-dxgi1_4-dxgi_query_video_memory_info#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_QUERY_VIDEO_MEMORY_INFO.Budget">
            <summary>Specifies the OS-provided video memory budget, in bytes, that the application should target. If <i>CurrentUsage</i> is greater than <i>Budget</i>, the application may incur stuttering or performance penalties due to background activity by the OS to provide other applications with a fair usage of video memory.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_QUERY_VIDEO_MEMORY_INFO.CurrentUsage">
            <summary>Specifies the application’s current video memory usage, in bytes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_QUERY_VIDEO_MEMORY_INFO.AvailableForReservation">
            <summary>The amount of video memory, in bytes, that the application has available for reservation. To reserve this video memory, the application should call <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/nf-dxgi1_4-idxgiadapter3-setvideomemoryreservation">IDXGIAdapter3::SetVideoMemoryReservation</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_QUERY_VIDEO_MEMORY_INFO.CurrentReservation">
            <summary>The amount of video memory, in bytes, that is reserved by the application. The OS uses the reservation as a hint to determine the application’s minimum working set. Applications should attempt to ensure that their video memory usage can be trimmed to meet this requirement.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_RESIDENCY">
            <summary>Flags indicating the memory location of a resource.</summary>
            <remarks>
            <para>This enum is used by <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgidevice-queryresourceresidency">QueryResourceResidency</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_residency#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_RESIDENCY.DXGI_RESIDENCY_FULLY_RESIDENT">
            <summary>The resource is located in video memory.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_RESIDENCY.DXGI_RESIDENCY_RESIDENT_IN_SHARED_MEMORY">
            <summary>At least some of the resource is located in CPU memory.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_RESIDENCY.DXGI_RESIDENCY_EVICTED_TO_DISK">
            <summary>At least some of the resource has been paged out to the hard drive.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_SCALING">
            <summary>Identifies resize behavior when the back-buffer size does not match the size of the target output.</summary>
            <remarks>
            <para>The DXGI_SCALING_NONE value is supported only for flip presentation model swap chains that you create with the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</a> value. You pass these values in a call to <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd">IDXGIFactory2::CreateSwapChainForHwnd</a>, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcorewindow">IDXGIFactory2::CreateSwapChainForCoreWindow</a>, or  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a>. DXGI_SCALING_ASPECT_RATIO_STRETCH will prefer to use a horizontal fill, otherwise it will use a vertical fill, using the following logic. <pre class="syntax" xml:space="preserve"><code>float aspectRatio = backBufferWidth / float(backBufferHeight); // Horizontal fill float scaledWidth = outputWidth; float scaledHeight = outputWidth / aspectRatio; if (scaledHeight &gt;= outputHeight) { // Do vertical fill scaledWidth = outputHeight * aspectRatio; scaledHeight = outputHeight; } float offsetX = (outputWidth - scaledWidth) * 0.5f; float offsetY = (outputHeight - scaledHeight) * 0.5f; rect.left = static_cast&lt;LONG&gt;(offsetX); rect.top = static_cast&lt;LONG&gt;(offsetY); rect.right = static_cast&lt;LONG&gt;(offsetX + scaledWidth); rect.bottom = static_cast&lt;LONG&gt;(offsetY + scaledHeight); rect.left = std::max&lt;LONG&gt;(0, rect.left); rect.top = std::max&lt;LONG&gt;(0, rect.top); rect.right = std::min&lt;LONG&gt;(static_cast&lt;LONG&gt;(outputWidth), rect.right); rect.bottom = std::min&lt;LONG&gt;(static_cast&lt;LONG&gt;(outputHeight), rect.bottom); </code></pre> Note that <i>outputWidth</i> and <i>outputHeight</i> are the pixel sizes of the presentation target size. In the case of <b>CoreWindow</b>, this requires converting the <i>logicalWidth</i> and <i>logicalHeight</i> values from DIPS to pixels using the window's DPI property.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_scaling#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SCALING.DXGI_SCALING_STRETCH">
            <summary>Directs DXGI to make the back-buffer contents scale to fit the presentation target size. This is the implicit behavior of DXGI when you call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">IDXGIFactory::CreateSwapChain</a> method.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SCALING.DXGI_SCALING_NONE">
            <summary>
            <para>Directs DXGI to make the back-buffer contents appear without any scaling when the presentation target size is not equal to the back-buffer size. The top edges of the back buffer and presentation target are aligned together. If the WS_EX_LAYOUTRTL style is associated with the <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a> handle to the target output window, the right edges of the back buffer and presentation target are aligned together; otherwise, the left edges are aligned together. All target area outside the back buffer is filled with window background color. This value specifies that all target areas outside the back buffer of a swap chain are filled with the background color that you specify in a call to <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-setbackgroundcolor">IDXGISwapChain1::SetBackgroundColor</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_scaling#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SCALING.DXGI_SCALING_ASPECT_RATIO_STRETCH">
            <summary>
            <para>Directs DXGI to make the back-buffer contents scale to fit the presentation target size, while preserving the aspect ratio of the back-buffer. If the scaled back-buffer does not fill the presentation area, it will be centered with black borders. This constant is supported on Windows Phone 8 and Windows 10. Note that with legacy Win32 window swapchains, this works the same as DXGI_SCALING_STRETCH.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_scaling#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_SHARED_RESOURCE">
            <summary>Represents a handle to a shared resource.</summary>
            <remarks>
            <para>To create a shared surface, pass a shared-resource handle into the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgidevice-createsurface">IDXGIDevice::CreateSurface</a> method.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_shared_resource#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SHARED_RESOURCE.Handle">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HANDLE</a></b> A handle to a shared resource.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_shared_resource#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_SURFACE_DESC">
            <summary>Describes a surface.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgisurface-getdesc">GetDesc</a> and  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgidevice-createsurface">CreateSurface</a> methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_surface_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SURFACE_DESC.Width">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value describing the surface width.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_surface_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SURFACE_DESC.Height">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value describing the surface height.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_surface_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SURFACE_DESC.Format">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> enumerated type that describes the surface format.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_surface_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SURFACE_DESC.SampleDesc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a> structure that describes multi-sampling parameters for the surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_surface_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG">
            <summary>Options for swap-chain behavior.</summary>
            <remarks>
            <para>This enumeration is used by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a> structure and the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-resizetarget">IDXGISwapChain::ResizeTarget</a> method. This enumeration is also used by the  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a> structure. You don't need to set <b>DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY</b> for swap chains that you create in full-screen mode  with the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">IDXGIFactory::CreateSwapChain</a> method because those swap chains already behave as if <b>DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY</b> is set. That is, presented content is not accessible by remote access or through the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgioutputduplication">desktop duplication APIs</a>. Swap chains that you create with the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd">IDXGIFactory2::CreateSwapChainForHwnd</a>, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcorewindow">IDXGIFactory2::CreateSwapChainForCoreWindow</a>, and  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a> methods are not protected if <b>DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY</b> is not set and are protected if <b>DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY</b> is set. When swap chains are protected, screen scraping is prevented and, in full-screen mode, presented content is not accessible through the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgioutputduplication">desktop duplication APIs</a>. When you call <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-resizebuffers">IDXGISwapChain::ResizeBuffers</a> to change the swap chain's back buffer, you can reset or change all <b>DXGI_SWAP_CHAIN_FLAG</b> flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_NONPREROTATED">
            <summary>
            <para>Set this flag to turn off automatic image rotation; that is, do not perform a rotation when transferring the contents of the front buffer to the monitor. Use this flag to avoid a bandwidth penalty when an application expects to handle rotation. This option is valid only during full-screen mode.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH">
            <summary>
            <para>Set this flag to enable an application to switch modes by calling <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-resizetarget">IDXGISwapChain::ResizeTarget</a>. When switching from windowed to full-screen mode, the display mode (or monitor resolution) will be changed to match the dimensions of the application window.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_GDI_COMPATIBLE">
            <summary>
            <para>Set this flag to enable an application to render using GDI on a swap chain or a surface. This will allow the application to call <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgisurface1-getdc">IDXGISurface1::GetDC</a> on the 0th back buffer or a surface. This flag is not applicable for Direct3D 12.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_RESTRICTED_CONTENT">
            <summary>
            <para>Set this flag to indicate that the swap chain might contain protected content; therefore, the operating system supports the creation of the swap chain only when driver and hardware protection is used.  If the driver and hardware do not support content protection, the call to create a resource for the swap chain fails. <b>Direct3D 11:  </b>This enumeration value is supported starting with Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_RESTRICT_SHARED_RESOURCE_DRIVER">
            <summary>
            <para>Set this flag to indicate that shared resources that are created within the swap chain must be protected by using the driver’s mechanism for restricting access to shared surfaces. <b>Direct3D 11:  </b>This enumeration value is supported starting with Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_DISPLAY_ONLY">
            <summary>
            <para>Set this flag to restrict presented content to the local displays. Therefore, the presented content is not accessible via remote accessing or through the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgioutputduplication">desktop duplication APIs</a>. This flag supports the window content protection features of Windows. Applications can use this flag to protect their own onscreen window content from being captured or copied through a specific set of public operating system features and APIs. If you use this flag with windowed (<a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a> or <b>IWindow</b>) swap chains where another process created the <b>HWND</b>, the owner of the <b>HWND</b> must use the  <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-setwindowdisplayaffinity">SetWindowDisplayAffinity</a> function appropriately in order to allow calls to <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-present">IDXGISwapChain::Present</a> or <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a> to succeed.</para>
            <para><b>Direct3D 11:  </b>This enumeration value is supported starting with Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT">
            <summary>
            <para>Set this flag to create a waitable object you can use to ensure rendering does not begin while a frame is still being presented. When this flag is used, the swapchain's latency must be set with the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_3/nf-dxgi1_3-idxgiswapchain2-setmaximumframelatency">IDXGISwapChain2::SetMaximumFrameLatency</a> API instead of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgidevice1-setmaximumframelatency">IDXGIDevice1::SetMaximumFrameLatency</a>. This flag isn't supported in full-screen mode, unless the render API is Direct3D 12. <b>Note</b>  This enumeration value is supported starting with Windows 8.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_FOREGROUND_LAYER">
            <summary>
            <para>Set this flag to create a swap chain in the foreground layer for multi-plane rendering. This flag can only be used with <a href="https://docs.microsoft.com/uwp/api/Windows.UI.Core.CoreWindow">CoreWindow</a> swap chains, which are created with <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcorewindow">CreateSwapChainForCoreWindow</a>. Apps should not create foreground swap chains if <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_3/nf-dxgi1_3-idxgioutput2-supportsoverlays">IDXGIOutput2::SupportsOverlays</a> indicates that hardware support for overlays is not available. Note that <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-resizebuffers">IDXGISwapChain::ResizeBuffers</a> cannot be used to add or remove this flag. <b>Note</b>  This enumeration value is supported starting with Windows 8.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_FULLSCREEN_VIDEO">
            <summary>
            <para>Set this flag to create a swap chain for full-screen video. <b>Note</b>  This enumeration value is supported starting with Windows 8.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_YUV_VIDEO">
            <summary>
            <para>Set this flag to create a swap chain for YUV video. <b>Note</b>  This enumeration value is supported starting with Windows 8.1.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_HW_PROTECTED">
            <summary>
            <para>Indicates that the swap chain should be created such that all underlying resources can be protected by the hardware.  Resource creation will fail if hardware content protection is not supported. This flag has the following restrictions: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_ALLOW_TEARING">
            <summary>
            <para>Tearing support is a requirement to enable displays that support variable refresh rates to function properly when the application presents a swap chain tied to a full screen borderless window.  Win32 apps can already achieve tearing in fullscreen exclusive mode by calling <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-setfullscreenstate">SetFullscreenState</a>(TRUE), but the recommended approach for Win32 developers is to use this tearing flag instead. This flag requires the use of a <b>DXGI_SWAP_EFFECT_FLIP_*</b> swap effect. To check for hardware support of this feature, refer to <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_5/nf-dxgi1_5-idxgifactory5-checkfeaturesupport">IDXGIFactory5::CheckFeatureSupport</a>. For usage information refer to <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-present">IDXGISwapChain::Present</a> and the <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-present">DXGI_PRESENT</a> flags.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_chain_flag#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FLAG.DXGI_SWAP_CHAIN_FLAG_RESTRICTED_TO_ALL_HOLOGRAPHIC_DISPLAYS">
            <summary></summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC">
            <summary>Describes full-screen mode for a swap chain.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd">CreateSwapChainForHwnd</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getfullscreendesc">GetFullscreenDesc</a> methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_fullscreen_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC.RefreshRate">
            <summary>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_rational">DXGI_RATIONAL</a> structure that describes the refresh rate in hertz.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC.ScanlineOrdering">
            <summary>A member of the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173067(v=vs.85)">DXGI_MODE_SCANLINE_ORDER</a> enumerated type that describes the scan-line drawing mode.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC.Scaling">
            <summary>A member of the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173066(v=vs.85)">DXGI_MODE_SCALING</a> enumerated type that describes the scaling mode.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC.Windowed">
            <summary>A Boolean value that specifies whether the swap chain is in windowed mode. <b>TRUE</b> if the swap chain is in windowed mode; otherwise, <b>FALSE</b>.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_EFFECT">
            <summary>Options for handling pixels in a display surface after calling IDXGISwapChain1::Present1.</summary>
            <remarks>
            <para>This enumeration is used by the <a href="https://docs.microsoft.com/windows/win32/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a> and <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a>structures. In D3D12, only <b>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</b> and <b>DXGI_SWAP_EFFECT_FLIP_DISCARD</b> are supported, and the bitblt models are not. Because of this, multisampling a back buffer is not supported in D3D12, and you must manually perform multisampling in the app using <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist-resolvesubresource">ID3D12GraphicsCommandList::ResolveSubresource</a></b> or <b><a href="https://docs.microsoft.com/windows/win32/api/d3d12/nf-d3d12-id3d12graphicscommandlist1-resolvesubresourceregion">ID3D12GraphicsCommandList1::ResolveSubresourceRegion</a></b>. To use multisampling with <b>DXGI_SWAP_EFFECT_SEQUENTIAL</b> or <b>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</b>, you must perform the multisampling in a separate render target. For example, create a multisampled texture by calling <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createtexture2d">ID3D11Device::CreateTexture2D</a> with a filled <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ns-d3d11-d3d11_texture2d_desc">D3D11_TEXTURE2D_DESC</a> structure (<b>BindFlags</b> member set to <a href="https://docs.microsoft.com/windows/win32/api/d3d11/ne-d3d11-d3d11_bind_flag">D3D11_BIND_RENDER_TARGET</a> and <b>SampleDesc</b> member with multisampling parameters). Next call <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11device-createrendertargetview">ID3D11Device::CreateRenderTargetView</a> to create a render-target view for the texture, and render your scene into the texture. Finally call <a href="https://docs.microsoft.com/windows/win32/api/d3d11/nf-d3d11-id3d11devicecontext-resolvesubresource">ID3D11DeviceContext::ResolveSubresource</a> to resolve the multisampled texture into your non-multisampled swap chain.</para>
            <para>The primary difference between presentation models is how back-buffer contents get to the Desktop Window Manager (DWM) for composition. In the bitblt model, which is used with the <b>DXGI_SWAP_EFFECT_DISCARD</b> and <b>DXGI_SWAP_EFFECT_SEQUENTIAL</b> values, contents of the back buffer get copied into the redirection surface on each call to <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a>. In the flip model, which is used with the <b>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</b> value, all back buffers are shared with the DWM. Therefore, the DWM can compose straight from those back buffers without any additional copy operations. In general, the flip model is the more efficient model. The flip model also provides more features, such as enhanced present statistics. The difference between <b>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</b> and <b>DXGI_SWAP_EFFECT_FLIP_DISCARD</b> is that <b>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</b> forces DXGI to guarantee that the contents of each back buffer is preserved across `IDXGISwapChain::Present` calls, whereas <b>DXGI_SWAP_EFFECT_FLIP_DISCARD</b> doesn't provide this guarantee. The compositor, under certain scenarios, can use DirectFlip, where it uses the application's back buffer as the entire display back buffer, which elides the cost of copying the application's back buffer into the final desktop back buffer. With <b>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</b> and <b>DXGI_SWAP_EFFECT_FLIP_DISCARD</b>, this optimisation can occur when the application is the only item visible on the screen. However, even when the application is not the only visible item on the screen, if the flip model is <b>DXGI_SWAP_EFFECT_FLIP_DISCARD</b>, the compositor can in some scenarios still perform this optimisation, by drawing other content onto the application's back buffer. When you call <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a> on a flip model swap chain (<b>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</b>) with 0 specified in the <i>SyncInterval</i> parameter, <b>IDXGISwapChain1::Present1</b>'s behavior is the same as the behavior of <a href="https://docs.microsoft.com/windows/win32/direct3darticles/direct3d-9ex-improvements">Direct3D 9Ex</a>'s <a href="https://docs.microsoft.com/windows/win32/api/d3d9/nf-d3d9-idirect3ddevice9ex-presentex">IDirect3DDevice9Ex::PresentEx</a> with <a href="https://docs.microsoft.com/windows/win32/direct3d9/d3dswapeffect">D3DSWAPEFFECT_FLIPEX</a> and <a href="https://docs.microsoft.com/windows/win32/direct3d9/d3dpresent">D3DPRESENT_FORCEIMMEDIATE</a>. That is, the runtime not only presents the next frame instead of any previously queued frames, it also terminates any remaining time left on the previously queued frames.</para>
            <para>Regardless of whether the flip model is more efficient, an application still might choose the bitblt model because the bitblt model is the only way to mix GDI and DirectX presentation. In the flip model, the application must create the swap chain with <a href="https://docs.microsoft.com/windows/win32/api/dxgi/ne-dxgi-dxgi_swap_chain_flag">DXGI_SWAP_CHAIN_FLAG_GDI_COMPATIBLE</a>, and then must use <a href="https://docs.microsoft.com/windows/win32/api/dxgi/nf-dxgi-idxgisurface1-getdc">GetDC</a> on the back buffer explicitly. After the first successful call to <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a> on a flip-model swap chain, GDI no longer works with the <a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">HWND</a> that is associated with that swap chain, even after the destruction of the swap chain. This restriction even extends to methods like <a href="https://docs.microsoft.com/windows/win32/api/winuser/nf-winuser-scrollwindowex">ScrollWindowEx</a>.</para>
            <para>For more info about the flip-model swap chain and optimizing presentation, see <a href="https://docs.microsoft.com/windows/win32/direct3ddxgi/dxgi-1-2-presentation-improvements">Enhancing presentation with the flip model, dirty rectangles, and scrolled areas</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_effect#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_EFFECT.DXGI_SWAP_EFFECT_DISCARD">
            <summary>
            <para>Use this flag to specify the bit-block transfer (bitblt) model and to specify that DXGI discard the contents of the back buffer after you call <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a>. This flag is valid for a swap chain with more than one back buffer, although, applications only have read and write access to buffer 0. Use this flag to enable the display driver to select the most efficient presentation technique for the swap chain. <b>Direct3D 12:  </b>This enumeration value is never supported. D3D12 apps must using <b>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</b> or <b>DXGI_SWAP_EFFECT_FLIP_DISCARD</b>. <div class="alert"><b>Note</b>  There are differences between full screen exclusive and full screen UWP. If you are porting a Direct3D 11 application to UWP on a Windows PC, be aware that the use of  <b>DXGI_SWAP_EFFECT_DISCARD</b> when creating swap chains does not behave the same way in UWP as it does in Win32, and its use may be detrimental to GPU performance. This is because UWP applications are forced into FLIP swap modes (even if other swap modes are set), because this reduces the computation time used by the memory copies originally done by the older bitblt model. The recommended approach is to manually convert DX11 Discard swap chains to use flip models within UWP,  using <b>DXGI_SWAP_EFFECT_FLIP_DISCARD</b> instead of <b>DXGI_SWAP_EFFECT_DISCARD</b> where possible. Refer to the Example below, and see <a href="https://docs.microsoft.com/windows/win32/direct3ddxgi/for-best-performance--use-dxgi-flip-model">this article</a> for more information.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_effect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_EFFECT.DXGI_SWAP_EFFECT_SEQUENTIAL">
            <summary>
            <para>Use this flag to specify the bitblt model and to specify that DXGI persist the contents of the back buffer after you call <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a>. Use this option to present the contents of the swap chain in order, from the first buffer (buffer 0) to the last buffer. This flag cannot be used with multisampling. <b>Direct3D 12:  </b>This enumeration value is never supported. D3D12 apps must using <b>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</b> or <b>DXGI_SWAP_EFFECT_FLIP_DISCARD</b>.</para>
            <para><div class="alert"><b>Note</b>  For best performance, use <b>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</b> instead of <b>DXGI_SWAP_EFFECT_SEQUENTIAL</b>. See <a href="https://docs.microsoft.com/windows/win32/direct3ddxgi/for-best-performance--use-dxgi-flip-model">this article</a> for more information.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_effect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_EFFECT.DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL">
            <summary>
            <para>Use this flag to specify the flip presentation model and to specify that DXGI persist the contents of the back buffer after you call <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a>. This flag cannot be used with multisampling.</para>
            <para><b>Direct3D 11:  </b>This enumeration value is supported starting with Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_effect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Dxgi.DXGI_SWAP_EFFECT.DXGI_SWAP_EFFECT_FLIP_DISCARD">
            <summary>
            <para>Use this flag to specify the flip presentation model and to specify that DXGI discard the contents of the back buffer after you call <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a>. This flag cannot be used with multisampling and partial presentation. See <a href="https://docs.microsoft.com/windows/win32/direct3ddxgi/dxgi-1-4-improvements">DXGI 1.4 Improvements</a>.</para>
            <para><b>Direct3D 11:  </b>This enumeration value is supported starting with Windows 10.</para>
            <para><div class="alert"><b>Note</b>  Windows Store apps must use <b>DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</b> or <b>DXGI_SWAP_EFFECT_FLIP_DISCARD</b>. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_effect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter.EnumOutputs(System.UInt32,Windows.Win32.Graphics.Dxgi.IDXGIOutput@)">
            <summary>Enumerate adapter (video card) outputs.</summary>
            <param name="Output">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the output.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiadapter-enumoutputs#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppOutput">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a>**</b> The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a> interface at the position specified by the <i>Output</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiadapter-enumoutputs#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> A code that indicates success or failure (see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>). DXGI_ERROR_NOT_FOUND is returned if the index is greater than the number of outputs. If the adapter came from a device created using D3D_DRIVER_TYPE_WARP, then the adapter has no outputs, so DXGI_ERROR_NOT_FOUND is returned.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiadapter-enumoutputs">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC*)">
            <summary>Gets a DXGI 1.0 description of an adapter (or video card).</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_adapter_desc">DXGI_ADAPTER_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_adapter_desc">DXGI_ADAPTER_DESC</a> structure that describes the adapter. This parameter must not be <b>NULL</b>. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <b>GetDesc</b> returns zeros for the PCI ID in the <b>VendorId</b>, <b>DeviceId</b>, <b>SubSysId</b>, and <b>Revision</b> members of <b>DXGI_ADAPTER_DESC</b> and “Software Adapter” for the description string in the <b>Description</b> member.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiadapter-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise returns E_INVALIDARG if the <i>pDesc</i> parameter is <b>NULL</b>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiadapter-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter.CheckInterfaceSupport(System.Guid*,System.Int64*)">
            <summary>Checks whether the system supports a device interface for a graphics component.</summary>
            <param name="InterfaceName">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> The GUID of the interface of the device version for which support is being checked. This should usually be __uuidof(IDXGIDevice), which returns the version number of the Direct3D 9 UMD (user mode driver) binary. Since WDDM 2.3, all driver components within a driver package (D3D9, D3D11, and D3D12) have been required to share a single version number, so this is a good way to query the driver version regardless of which API is being used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiadapter-checkinterfacesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pUMDVersion">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/winnt/ns-winnt-large_integer-r1">LARGE_INTEGER</a>*</b> The user mode driver version of <i>InterfaceName</i>. This is  returned only if the interface is supported, otherwise this parameter will be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiadapter-checkinterfacesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> S_OK indicates that the interface is supported, otherwise DXGI_ERROR_UNSUPPORTED is returned (For more information, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>).</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiadapter-checkinterfacesupport">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter1.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1*)">
            <summary>Gets a DXGI 1.1 description of an adapter (or video card).</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_adapter_desc1">DXGI_ADAPTER_DESC1</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_adapter_desc1">DXGI_ADAPTER_DESC1</a> structure that describes the adapter. This parameter must not be <b>NULL</b>. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, <b>GetDesc1</b> returns zeros for the PCI ID in the <b>VendorId</b>, <b>DeviceId</b>, <b>SubSysId</b>, and <b>Revision</b> members of <b>DXGI_ADAPTER_DESC1</b> and “Software Adapter” for the description string in the <b>Description</b> member.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiadapter1-getdesc1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns E_INVALIDARG if the <i>pDesc</i> parameter is <b>NULL</b>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiadapter1-getdesc1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter2.GetDesc2(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2*)">
            <summary>Gets a Microsoft DirectX Graphics Infrastructure (DXGI) 1.2 description of an adapter or video card.</summary>
            <param name="pDesc">
            <para>A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_adapter_desc2">DXGI_ADAPTER_DESC2</a> structure that describes the adapter. This parameter must not be <b>NULL</b>. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, earlier versions of  <b>GetDesc2</b> (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter-getdesc">GetDesc</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter1-getdesc1">GetDesc1</a>) return zeros for the PCI ID in the <b>VendorId</b>, <b>DeviceId</b>, <b>SubSysId</b>, and <b>Revision</b> members of the adapter description structure and “Software Adapter” for the description string in the <b>Description</b> member. <b>GetDesc2</b> returns the actual feature level 9 hardware values in these members.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiadapter2-getdesc2#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>Returns S_OK if successful; otherwise, returns E_INVALIDARG if the <i>pDesc</i> parameter is <b>NULL</b>.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiadapter2-getdesc2">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.RegisterHardwareContentProtectionTeardownStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)">
            <summary>Registers to receive notification of hardware content protection teardown events.</summary>
            <param name="hEvent">
            <para>Type: <b>HANDLE</b> A handle to the event object that the operating system sets when hardware content protection teardown occurs. The <a href="https://docs.microsoft.com/windows/desktop/api/synchapi/nf-synchapi-createeventa">CreateEvent</a> or <a href="https://docs.microsoft.com/windows/desktop/api/synchapi/nf-synchapi-openeventa">OpenEvent</a> function returns this handle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-registerhardwarecontentprotectionteardownstatusevent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pdwCookie">
            <para>Type: <b>DWORD*</b> A pointer to a key value that an application can pass to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/nf-dxgi1_4-idxgiadapter3-unregisterhardwarecontentprotectionteardownstatus">IDXGIAdapter3::UnregisterHardwareContentProtectionTeardownStatus</a> method to unregister the notification event that <i>hEvent</i> specifies.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-registerhardwarecontentprotectionteardownstatusevent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If this method succeeds, it returns <b xmlns:loc="http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns:loc="http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-registerhardwarecontentprotectionteardownstatusevent">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.UnregisterHardwareContentProtectionTeardownStatus(System.UInt32)">
            <summary>Unregisters an event to stop it from receiving notification of hardware content protection teardown events.</summary>
            <param name="dwCookie">
            <para>Type: <b>DWORD</b> A key value for the window or event to unregister. The  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/nf-dxgi1_4-idxgiadapter3-registerhardwarecontentprotectionteardownstatusevent">IDXGIAdapter3::RegisterHardwareContentProtectionTeardownStatusEvent</a> method returns this value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-unregisterhardwarecontentprotectionteardownstatus#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-unregisterhardwarecontentprotectionteardownstatus">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.QueryVideoMemoryInfo(System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_MEMORY_SEGMENT_GROUP,Windows.Win32.Graphics.Dxgi.DXGI_QUERY_VIDEO_MEMORY_INFO*)">
            <summary>This method informs the process of the current budget and process usage.</summary>
            <param name="NodeIndex">
            <para>Type: <b>UINT</b> Specifies the device's physical adapter for which the video memory information is queried. For single-GPU operation, set this to zero. If there are multiple GPU nodes, set this to the index of the node (the device's physical adapter) for which the video memory information is queried. See <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-queryvideomemoryinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="MemorySegmentGroup">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/dxgi1_4/ne-dxgi1_4-dxgi_memory_segment_group">DXGI_MEMORY_SEGMENT_GROUP</a></b> Specifies a DXGI_MEMORY_SEGMENT_GROUP that identifies the group as local or non-local.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-queryvideomemoryinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pVideoMemoryInfo">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/dxgi1_4/ns-dxgi1_4-dxgi_query_video_memory_info">DXGI_QUERY_VIDEO_MEMORY_INFO</a>*</b> Fills in a DXGI_QUERY_VIDEO_MEMORY_INFO structure with the current values.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-queryvideomemoryinfo#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; an error code otherwise. For a list of error codes, see <a href="/windows/win32/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-queryvideomemoryinfo">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.SetVideoMemoryReservation(System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_MEMORY_SEGMENT_GROUP,System.UInt64)">
            <summary>This method sends the minimum required physical memory for an application, to the OS.</summary>
            <param name="NodeIndex">
            <para>Type: <b>UINT</b> Specifies the device's physical adapter for which the video memory information is being set. For single-GPU operation, set this to zero. If there are multiple GPU nodes, set this to the index of the node (the device's physical adapter) for which the video memory information is being set. See <a href="https://docs.microsoft.com/windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-setvideomemoryreservation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="MemorySegmentGroup">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/dxgi1_4/ne-dxgi1_4-dxgi_memory_segment_group">DXGI_MEMORY_SEGMENT_GROUP</a></b> Specifies a DXGI_MEMORY_SEGMENT_GROUP that identifies the group as local or non-local.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-setvideomemoryreservation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Reservation">
            <para>Type: <b>UINT64</b> Specifies a UINT64 that sets the minimum required physical memory, in bytes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-setvideomemoryreservation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; an error code otherwise. For a list of error codes, see <a href="/windows/win32/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-setvideomemoryreservation">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.RegisterVideoMemoryBudgetChangeNotificationEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)">
            <summary>This method establishes a correlation between a CPU synchronization object and the budget change event.</summary>
            <param name="hEvent">
            <para>Type: <b>HANDLE</b> Specifies a HANDLE for the event.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-registervideomemorybudgetchangenotificationevent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pdwCookie">
            <para>Type: <b>DWORD*</b> A key value for the window or event to unregister. The  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/nf-dxgi1_4-idxgiadapter3-registerhardwarecontentprotectionteardownstatusevent">IDXGIAdapter3::RegisterHardwareContentProtectionTeardownStatusEvent</a> method returns this value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-registervideomemorybudgetchangenotificationevent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns an HRESULT success or error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-registervideomemorybudgetchangenotificationevent">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.UnregisterVideoMemoryBudgetChangeNotification(System.UInt32)">
            <summary>This method stops notifying a CPU synchronization object whenever a budget change occurs. An application may switch back to polling the information regularly.</summary>
            <param name="dwCookie">
            <para>Type: <b>DWORD</b> A key value for the window or event to unregister. The  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/nf-dxgi1_4-idxgiadapter3-registerhardwarecontentprotectionteardownstatusevent">IDXGIAdapter3::RegisterHardwareContentProtectionTeardownStatusEvent</a> method returns this value.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-unregistervideomemorybudgetchangenotification#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <remarks>
            <para>An application may switch back to polling for the information regularly.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiadapter3-unregistervideomemorybudgetchangenotification#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.GetDesc3(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3*)">
            <summary>Gets a Microsoft DirectX Graphics Infrastructure (DXGI) 1.6 description of an adapter or video card. This description includes information about ACG compatibility.</summary>
            <param name="pDesc">
            <para>A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_6/ns-dxgi1_6-dxgi_adapter_desc3">DXGI_ADAPTER_DESC3</a> structure that describes the adapter. This parameter must not be <b>NULL</b>. On <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 9 graphics hardware, early versions of  <b>GetDesc3</b> (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter1-getdesc1">GetDesc1</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiadapter-getdesc">GetDesc</a>) return zeros for the PCI ID in the <b>VendorId</b>, <b>DeviceId</b>, <b>SubSysId</b>, and <b>Revision</b> members of the adapter description structure and “Software Adapter” for the description string in the <b>Description</b> member. <b>GetDesc3</b> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiadapter2-getdesc2">GetDesc2</a> return the actual feature level 9 hardware values in these members.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgiadapter4-getdesc3#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>Returns S_OK if successful; otherwise, returns E_INVALIDARG if the <i>pDesc</i> parameter is <b>NULL</b>.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgiadapter4-getdesc3">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.GetAdapter(Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)">
            <summary>Returns the adapter for the specified device.</summary>
            <param name="pAdapter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>**</b> The address of an <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a> interface pointer to the adapter.  This parameter must not be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-getadapter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> that indicates failure. If the <i>pAdapter</i> parameter is <b>NULL</b> this method returns E_INVALIDARG.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-getadapter">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.CreateSurface(Windows.Win32.Graphics.Dxgi.DXGI_SURFACE_DESC*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_SHARED_RESOURCE*,Windows.Win32.Graphics.Dxgi.IDXGISurface[])">
            <summary>Returns a surface. This method is used internally and you should not call it directly in your application.</summary>
            <param name="pDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_surface_desc">DXGI_SURFACE_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_surface_desc">DXGI_SURFACE_DESC</a> structure that describes the surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-createsurface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumSurfaces">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of surfaces to create.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-createsurface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Usage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE</a></b> A <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE</a> flag that specifies how the surface is expected to be used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-createsurface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSharedResource">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_shared_resource">DXGI_SHARED_RESOURCE</a>*</b> An optional pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_shared_resource">DXGI_SHARED_RESOURCE</a> structure that contains shared resource information for opening views of such resources.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-createsurface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSurface">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgisurface">IDXGISurface</a>**</b> The address of an <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgisurface">IDXGISurface</a> interface pointer to the first created surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-createsurface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; an error code otherwise.  For a list of error codes, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-createsurface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.QueryResourceResidency(System.Object[],Windows.Win32.Graphics.Dxgi.DXGI_RESIDENCY*,System.UInt32)">
            <summary>Gets the residency status of an array of resources.</summary>
            <param name="ppResources">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>*</b> An array of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiresource">IDXGIResource</a> interfaces.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-queryresourceresidency#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pResidencyStatus">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_residency">DXGI_RESIDENCY</a>*</b> An array of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_residency">DXGI_RESIDENCY</a> flags. Each element describes the residency status for corresponding element in the <i>ppResources</i> argument array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-queryresourceresidency#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumResources">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of resources in the <i>ppResources</i> argument array and <i>pResidencyStatus</i> argument array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-queryresourceresidency#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_DEVICE_REMOVED</a>, E_INVALIDARG, or E_POINTER (see <a href="/windows/desktop/SecCrypto/common-hresult-values">Common HRESULT Values</a> and WinError.h for more information).</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-queryresourceresidency">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.SetGPUThreadPriority(System.Int32)">
            <summary>Sets the GPU thread priority.</summary>
            <param name="Priority">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">INT</a></b> A value that specifies the required GPU thread priority. This value must be between -7 and 7, inclusive, where 0 represents normal priority.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-setgputhreadpriority#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Return S_OK if successful; otherwise, returns E_INVALIDARG if the <i>Priority</i> parameter is invalid.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-setgputhreadpriority">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.GetGPUThreadPriority(System.Int32*)">
            <summary>Gets the GPU thread priority.</summary>
            <param name="pPriority">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">INT</a>*</b> A pointer to a variable that receives a value that indicates the current GPU thread priority. The value will be between -7 and 7, inclusive, where 0 represents normal priority.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-getgputhreadpriority#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Return S_OK if successful; otherwise, returns E_POINTER if the <i>pPriority</i> parameter is <b>NULL</b>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevice-getgputhreadpriority">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIDeviceSubObject.GetDevice(System.Guid*,System.Object@)">
            <summary>Retrieves the device.</summary>
            <param name="riid">
            <para>Type: <b>REFIID</b> The reference id for the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevicesubobject-getdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDevice">
            <para>Type: <b>void**</b> The address of a pointer to the device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevicesubobject-getdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> A code that indicates success or failure (see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>).</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgidevicesubobject-getdevice">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.EnumAdapters(System.UInt32,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)">
            <summary>Enumerates the adapters (video cards).</summary>
            <param name="Adapter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the adapter to enumerate.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-enumadapters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppAdapter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>**</b> The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a> interface at the position specified by the <i>Adapter</i> parameter.  This parameter must not be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-enumadapters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_NOT_FOUND</a> if the index is greater than or equal to the number of adapters in the local system, or <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a> if <i>ppAdapter</i> parameter is <b>NULL</b>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-enumadapters">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.MakeWindowAssociation(Windows.Win32.Foundation.HWND,System.UInt32)">
            <summary>Allows DXGI to monitor an application's message queue for the alt-enter key sequence (which causes the application to switch from windowed to full screen or vice versa).</summary>
            <param name="WindowHandle">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a></b> The handle of the window that is to be monitored. This parameter can be <b>NULL</b>; but only if *Flags* is also 0.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-makewindowassociation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a> if <i>WindowHandle</i> is invalid, or E_OUTOFMEMORY.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-makewindowassociation">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.GetWindowAssociation(Windows.Win32.Foundation.HWND*)">
            <summary>Get the window through which the user controls the transition to and from full screen.</summary>
            <param name="pWindowHandle">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a>*</b> A pointer to a window handle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-getwindowassociation#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns a code that indicates success or failure. <b>S_OK</b> indicates success, <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a> indicates <i>pWindowHandle</i> was passed in as <b>NULL</b>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-getwindowassociation">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.CreateSwapChain(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)">
            <summary>Creates a swap chain.</summary>
            <param name="pDevice">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>*</b> For Direct3D 11, and earlier versions of Direct3D, this is a pointer to the Direct3D device for the swap chain. For Direct3D 12 this is a pointer to a direct command queue (refer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandqueue">ID3D12CommandQueue</a>) . This parameter cannot be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-createswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a>*</b> A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a> structure for the swap-chain description. This parameter cannot be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-createswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSwapChain">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiswapchain">IDXGISwapChain</a>**</b> A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiswapchain">IDXGISwapChain</a> interface for the swap chain that <b>CreateSwapChain</b> creates.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-createswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            <para><a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a>  if <i>pDesc</i> or <i>ppSwapChain</i> is <b>NULL</b>, DXGI_STATUS_OCCLUDED if you request full-screen mode and it is unavailable, or E_OUTOFMEMORY. Other error codes defined by the type of device passed in may also be returned.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-createswapchain">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.CreateSoftwareAdapter(Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)">
            <summary>Create an adapter interface that represents a software adapter.</summary>
            <param name="Module">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMODULE</a></b> Handle to the software adapter's dll. HMODULE can be obtained with <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-getmodulehandlea">GetModuleHandle</a> or <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibrarya">LoadLibrary</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-createsoftwareadapter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppAdapter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>**</b> Address of a pointer to an adapter (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-createsoftwareadapter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> A <a href="/windows/desktop/direct3ddxgi/dxgi-error">return code</a> indicating success or failure.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory-createsoftwareadapter">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory1.EnumAdapters1(System.UInt32,Windows.Win32.Graphics.Dxgi.IDXGIAdapter1@)">
            <summary>Enumerates both adapters (video cards) with or without outputs.</summary>
            <param name="Adapter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The index of the adapter to enumerate.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory1-enumadapters1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppAdapter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter1">IDXGIAdapter1</a>**</b> The address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter1">IDXGIAdapter1</a> interface at the position specified by the <i>Adapter</i> parameter. This parameter must not be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory1-enumadapters1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_NOT_FOUND</a> if the index is greater than or equal to the number of adapters in the local system, or <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a> if <i>ppAdapter</i> parameter is <b>NULL</b>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory1-enumadapters1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory1.IsCurrent">
            <summary>Informs an application of the possible need to re-enumerate adapters.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">BOOL</a></b> <b>FALSE</b>, if a new adapter is becoming available or the current adapter is going away. <b>TRUE</b>, no adapter changes. <b>IsCurrent</b> returns <b>FALSE</b> to inform the calling application to re-enumerate adapters.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgifactory1-iscurrent">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.IsWindowedStereoEnabled">
            <summary>Determines whether to use stereo mode.</summary>
            <returns>
            <para>Indicates whether to use stereo mode. <b>TRUE</b> indicates that you can use stereo mode; otherwise, <b>FALSE</b>. <b>Platform Update for Windows 7:  </b>On Windows 7 or Windows Server 2008 R2 with the <a href="https://support.microsoft.com/help/2670838">Platform Update for Windows 7</a> installed, <b>IsWindowedStereoEnabled</b> always returns FALSE because stereoscopic 3D display behavior isn’t available with the Platform Update for Windows 7. For more info about the Platform Update for Windows 7, see <a href="/windows/desktop/direct3darticles/platform-update-for-windows-7">Platform Update for Windows 7</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-iswindowedstereoenabled">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.CreateSwapChainForHwnd(System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <summary>Creates a swap chain that is associated with an HWND handle to the output window for the swap chain.</summary>
            <param name="pDevice">For Direct3D 11, and earlier versions of Direct3D, this is a pointer to the Direct3D device for the swap chain. For Direct3D 12 this is a pointer to a direct command queue (refer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandqueue">ID3D12CommandQueue</a>). This parameter cannot be <b>NULL</b>.</param>
            <param name="hWnd">The <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a> handle that is associated with the swap chain that <b>CreateSwapChainForHwnd</b> creates. This parameter cannot be <b>NULL</b>.</param>
            <param name="pDesc">A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a> structure for the swap-chain description. This parameter cannot be <b>NULL</b>.</param>
            <param name="pFullscreenDesc">A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_fullscreen_desc">DXGI_SWAP_CHAIN_FULLSCREEN_DESC</a> structure for the description of a full-screen swap chain. You can optionally set this parameter to create a full-screen swap chain. Set it to <b>NULL</b> to create a windowed swap chain.</param>
            <param name="pRestrictToOutput">
            <para>A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a> interface for the output to restrict content to. You must also pass the <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-present">DXGI_PRESENT_RESTRICT_TO_OUTPUT</a> flag in a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a> call to force the content to appear blacked out on any other output. If you want to restrict the content to a different output, you must create a new swap chain. However, you can conditionally restrict content based on the <b>DXGI_PRESENT_RESTRICT_TO_OUTPUT</b> flag.</para>
            <para>Set this parameter to <b>NULL</b> if you don't want to restrict content to an output target.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSwapChain">A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgiswapchain1">IDXGISwapChain1</a> interface for the swap chain that <b>CreateSwapChainForHwnd</b> creates.</param>
            <returns>
            <para><b>CreateSwapChainForHwnd</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.CreateSwapChainForCoreWindow(System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <summary>Creates a swap chain that is associated with the CoreWindow object for the output window for the swap chain.</summary>
            <param name="pDevice">For Direct3D 11, and earlier versions of Direct3D, this is a pointer to the Direct3D device for the swap chain. For Direct3D 12 this is a pointer to a direct command queue (refer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandqueue">ID3D12CommandQueue</a>). This parameter cannot be <b>NULL</b>.</param>
            <param name="pWindow">A pointer to the <a href="https://docs.microsoft.com/uwp/api/Windows.UI.Core.CoreWindow">CoreWindow</a> object that is associated with the swap chain that <b>CreateSwapChainForCoreWindow</b> creates.</param>
            <param name="pDesc">A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a> structure for the swap-chain description. This parameter cannot be <b>NULL</b>.</param>
            <param name="pRestrictToOutput">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a> interface that the swap chain is restricted to. If the swap chain is moved to a different output, the content is black. You can optionally set this parameter to an output target that uses <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-present">DXGI_PRESENT_RESTRICT_TO_OUTPUT</a> to restrict the content on this output. If you do not set this parameter to restrict content on an output target, you can set it to <b>NULL</b>.</param>
            <param name="ppSwapChain">A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgiswapchain1">IDXGISwapChain1</a> interface for the swap chain that <b>CreateSwapChainForCoreWindow</b> creates.</param>
            <returns>
            <para><b>CreateSwapChainForCoreWindow</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcorewindow">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.GetSharedResourceAdapterLuid(Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.LUID*)">
            <summary>Identifies the adapter on which a shared resource object was created.</summary>
            <param name="hResource">A handle to a shared resource object. The <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiresource1-createsharedhandle">IDXGIResource1::CreateSharedHandle</a> method returns this handle.</param>
            <param name="pLuid">A pointer to a variable that receives a locally unique identifier (<a href="https://docs.microsoft.com/previous-versions/windows/hardware/drivers/ff549708(v=vs.85)">LUID</a>) value that identifies the adapter. <b>LUID</b> is defined in Dxgi.h. An <b>LUID</b> is a 64-bit value that is guaranteed to be unique only on the operating system on which it was generated. The uniqueness of an <b>LUID</b> is guaranteed only until the operating system is restarted.</param>
            <returns>
            <para><b>GetSharedResourceAdapterLuid</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-getsharedresourceadapterluid">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.RegisterStereoStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)">
            <summary>Registers an application window to receive notification messages of changes of stereo status.</summary>
            <param name="WindowHandle">The handle of the window to send a notification message to when stereo status change occurs.</param>
            <param name="wMsg">Identifies the notification message to send.</param>
            <param name="pdwCookie">A pointer to a key value that an application can pass to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-unregisterstereostatus">IDXGIFactory2::UnregisterStereoStatus</a> method  to unregister the notification message that <i>wMsg</i> specifies.</param>
            <returns>
            <para><b>RegisterStereoStatusWindow</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-registerstereostatuswindow">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.RegisterStereoStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)">
            <summary>Registers to receive notification of changes in stereo status by using event signaling.</summary>
            <param name="hEvent">A handle to the event object that the operating system sets when notification of stereo status change occurs. The <a href="https://docs.microsoft.com/windows/desktop/api/synchapi/nf-synchapi-createeventa">CreateEvent</a> or <a href="https://docs.microsoft.com/windows/desktop/api/synchapi/nf-synchapi-openeventa">OpenEvent</a> function returns this handle.</param>
            <param name="pdwCookie">A pointer to a key value that an application can pass to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-unregisterstereostatus">IDXGIFactory2::UnregisterStereoStatus</a> method  to unregister the notification event that <i>hEvent</i> specifies.</param>
            <returns>
            <para><b>RegisterStereoStatusEvent</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-registerstereostatusevent">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.UnregisterStereoStatus(System.UInt32)">
            <summary>Unregisters a window or an event to stop it from receiving notification when stereo status changes.</summary>
            <param name="dwCookie">A key value for the window or event to unregister. The  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-registerstereostatuswindow">IDXGIFactory2::RegisterStereoStatusWindow</a> or  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-registerstereostatusevent">IDXGIFactory2::RegisterStereoStatusEvent</a> method returns this value.</param>
            <remarks>
            <para><b>Platform Update for Windows 7:  </b>On Windows 7 or Windows Server 2008 R2 with the <a href="https://support.microsoft.com/help/2670838">Platform Update for Windows 7</a> installed, <b>UnregisterStereoStatus</b> has no effect. For more info about the Platform Update for Windows 7, see <a href="https://docs.microsoft.com/windows/desktop/direct3darticles/platform-update-for-windows-7">Platform Update for Windows 7</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-unregisterstereostatus#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.RegisterOcclusionStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)">
            <summary>Registers an application window to receive notification messages of changes of occlusion status.</summary>
            <param name="WindowHandle">The handle of the window to send a notification message to when occlusion status change occurs.</param>
            <param name="wMsg">Identifies the notification message to send.</param>
            <param name="pdwCookie">A pointer to a key value that an application can pass to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-unregisterocclusionstatus">IDXGIFactory2::UnregisterOcclusionStatus</a> method  to unregister the notification message that <i>wMsg</i> specifies.</param>
            <returns>
            <para><b>RegisterOcclusionStatusWindow</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-registerocclusionstatuswindow">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.RegisterOcclusionStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)">
            <summary>Registers to receive notification of changes in occlusion status by using event signaling.</summary>
            <param name="hEvent">A handle to the event object that the operating system sets when notification of occlusion status change occurs. The <a href="https://docs.microsoft.com/windows/desktop/api/synchapi/nf-synchapi-createeventa">CreateEvent</a> or <a href="https://docs.microsoft.com/windows/desktop/api/synchapi/nf-synchapi-openeventa">OpenEvent</a> function returns this handle.</param>
            <param name="pdwCookie">A pointer to a key value that an application can pass to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-unregisterocclusionstatus">IDXGIFactory2::UnregisterOcclusionStatus</a> method  to unregister the notification event that <i>hEvent</i> specifies.</param>
            <returns>
            <para><b>RegisterOcclusionStatusEvent</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-registerocclusionstatusevent">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.UnregisterOcclusionStatus(System.UInt32)">
            <summary>Unregisters a window or an event to stop it from receiving notification when occlusion status changes.</summary>
            <param name="dwCookie">A key value for the window or event to unregister. The  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-registerocclusionstatuswindow">IDXGIFactory2::RegisterOcclusionStatusWindow</a> or  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-registerocclusionstatusevent">IDXGIFactory2::RegisterOcclusionStatusEvent</a> method returns this value.</param>
            <remarks>
            <para><b>Platform Update for Windows 7:  </b>On Windows 7 or Windows Server 2008 R2 with the <a href="https://support.microsoft.com/help/2670838">Platform Update for Windows 7</a> installed, <b>UnregisterOcclusionStatus</b> has no effect. For more info about the Platform Update for Windows 7, see <a href="https://docs.microsoft.com/windows/desktop/direct3darticles/platform-update-for-windows-7">Platform Update for Windows 7</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-unregisterocclusionstatus#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.CreateSwapChainForComposition(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <summary>Creates a swap chain that you can use to send Direct3D content into the DirectComposition API or the Windows.UI.Xaml framework to compose in a window.</summary>
            <param name="pDevice">For Direct3D 11, and earlier versions of Direct3D, this is a pointer to the Direct3D device for the swap chain. For Direct3D 12 this is a pointer to a direct command queue (refer to <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nn-d3d12-id3d12commandqueue">ID3D12CommandQueue</a>). This parameter cannot be <b>NULL</b>. Software drivers, like <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_REFERENCE</a>, are not supported for composition swap chains.</param>
            <param name="pDesc">
            <para>A pointer to a  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a> structure for the swap-chain description. This parameter cannot be <b>NULL</b>. You must specify the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</a> value in the <b>SwapEffect</b> member of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a> because <b>CreateSwapChainForComposition</b> supports only <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-flip-model">flip presentation model</a>. You must also specify the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ne-dxgi1_2-dxgi_scaling">DXGI_SCALING_STRETCH</a> value in the <b>Scaling</b> member of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRestrictToOutput">
            <para>A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a> interface for the output to restrict content to. You must also pass the <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-present">DXGI_PRESENT_RESTRICT_TO_OUTPUT</a> flag in a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a> call to force the content to appear blacked out on any other output. If you want to restrict the content to a different output, you must create a new swap chain. However, you can conditionally restrict content based on the <b>DXGI_PRESENT_RESTRICT_TO_OUTPUT</b> flag.</para>
            <para>Set this parameter to <b>NULL</b> if you don't want to restrict content to an output target.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSwapChain">A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgiswapchain1">IDXGISwapChain1</a> interface for the swap chain that <b>CreateSwapChainForComposition</b> creates.</param>
            <returns>
            <para><b>CreateSwapChainForComposition</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.GetCreationFlags">
            <summary>Gets the flags that were used when a Microsoft DirectX Graphics Infrastructure (DXGI) object was created.</summary>
            <returns>The creation flags.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgifactory3-getcreationflags">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.EnumAdapterByLuid(Windows.Win32.Foundation.LUID,System.Guid*,System.Object@)">
            <summary>Outputs the IDXGIAdapter for the specified LUID.</summary>
            <param name="AdapterLuid">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/hardware/drivers/ff549708(v=vs.85)">LUID</a></b> A unique value that identifies the adapter. See <a href="https://docs.microsoft.com/previous-versions/windows/hardware/drivers/ff549708(v=vs.85)">LUID</a> for a definition of the structure. <b>LUID</b> is defined in dxgi.h.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgifactory4-enumadapterbyluid#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (GUID) of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a> object referenced by the <i>ppvAdapter</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgifactory4-enumadapterbyluid#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvAdapter">
            <para>Type: <b>void**</b> The address of an <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a> interface pointer to the adapter. This parameter must not be NULL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgifactory4-enumadapterbyluid#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; an error code otherwise. For a list of error codes, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>. See also Direct3D 12 Return Codes.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgifactory4-enumadapterbyluid">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.EnumWarpAdapter(System.Guid*,System.Object@)">
            <summary>Provides an adapter which can be provided to D3D12CreateDevice to use the WARP renderer.</summary>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (GUID) of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a> object referenced by the <i>ppvAdapter</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgifactory4-enumwarpadapter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvAdapter">
            <para>Type: <b>void**</b> The address of an <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a> interface pointer to the adapter. This parameter must not be NULL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgifactory4-enumwarpadapter#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; an error code otherwise. For a list of error codes, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>. See also Direct3D 12 Return Codes.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgifactory4-enumwarpadapter">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.CheckFeatureSupport(Windows.Win32.Graphics.Dxgi.DXGI_FEATURE,System.Void*,System.UInt32)">
            <summary>Used to check for hardware feature support.</summary>
            <param name="Feature">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_5/ne-dxgi1_5-dxgi_feature">DXGI_FEATURE</a></b> Specifies one member of  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_5/ne-dxgi1_5-dxgi_feature">DXGI_FEATURE</a> to query support for.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgifactory5-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFeatureSupportData">
            <para>Type: <b>void*</b> Specifies a pointer to a buffer that will be filled with data that describes the feature support.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgifactory5-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="FeatureSupportDataSize">
            <para>Type: <b>UINT</b> The size, in bytes, of <i>pFeatureSupportData</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgifactory5-checkfeaturesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns an HRESULT success or error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgifactory5-checkfeaturesupport">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.EnumAdapterByGpuPreference(System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_GPU_PREFERENCE,System.Guid*,System.Object@)">
            <summary>Enumerates graphics adapters based on a given GPU preference.</summary>
            <param name="Adapter">
            <para>Type: <b>UINT</b> The index of the adapter to enumerate. The indices are in order of the preference specified in <i>GpuPreference</i>—for example, if <b>DXGI_GPU_PREFERENCE_HIGH_PERFORMANCE</b> is specified, then the highest-performing adapter is at index 0, the second-highest is at index 1, and so on.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgifactory6-enumadapterbygpupreference#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="GpuPreference">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/dxgi1_6/ne-dxgi1_6-dxgi_gpu_preference">DXGI_GPU_PREFERENCE</a></b> The GPU preference for the app.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgifactory6-enumadapterbygpupreference#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (GUID) of the <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_6/nn-dxgi1_6-idxgifactory6">IDXGIAdapter</a> object referenced by the <i>ppvAdapter</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgifactory6-enumadapterbygpupreference#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvAdapter">
            <para>Type: <b>void**</b> The address of an <a href="https://docs.microsoft.com/windows/win32/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a> interface pointer to the adapter. This parameter must not be NULL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgifactory6-enumadapterbygpupreference#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> Returns <b>S_OK</b> if successful; an error code otherwise. For a list of error codes, see <a href="/windows/win32/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgifactory6-enumadapterbygpupreference">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.RegisterAdaptersChangedEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)">
            <summary>Registers to receive notification of changes whenever the adapter enumeration state changes.</summary>
            <param name="hEvent">A handle to the event object.</param>
            <param name="pdwCookie">A key value for the registered event.</param>
            <returns>Returns <b>S_OK</b> if successful; an error code otherwise.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgifactory7-registeradapterschangedevent">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.UnregisterAdaptersChangedEvent(System.UInt32)">
            <summary>Unregisters an event to stop receiving notifications when the adapter enumeration state changes.</summary>
            <param name="dwCookie">A key value for the event to unregister.</param>
            <returns>Returns <b>S_OK</b> if successful; an error code otherwise.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgifactory7-unregisteradapterschangedevent">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIObject.SetPrivateData(System.Guid*,System.UInt32,System.Void*)">
            <summary>Sets application-defined data to the object and associates that data with a GUID.</summary>
            <param name="Name">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> A GUID that identifies the data. Use this GUID in a call to <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiobject-getprivatedata">GetPrivateData</a> to get the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of the object's data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const void*</b> A pointer to the object's data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIObject.SetPrivateDataInterface(System.Guid*,System.Object)">
            <summary>Set an interface in the object's private data.</summary>
            <param name="Name">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> A GUID identifying the interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pUnknown">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>*</b> The interface to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedatainterface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIObject.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)">
            <summary>Get a pointer to the object's data.</summary>
            <param name="Name">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> A GUID identifying the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The size of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>void*</b> Pointer to the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIObject.GetParent(System.Guid*,System.Object@)">
            <summary>Gets the parent of the object.</summary>
            <param name="riid">
            <para>Type: <b>REFIID</b> The ID of the requested interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getparent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppParent">
            <para>Type: <b>void**</b> The address of a pointer to the parent object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getparent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getparent">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC*)">
            <summary>Get a description of the output.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_output_desc">DXGI_OUTPUT_DESC</a>*</b> A pointer to the output description (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_output_desc">DXGI_OUTPUT_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns a code that indicates success or failure. S_OK if successful, <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a> if <i>pDesc</i> is passed in as <b>NULL</b>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)">
            <summary>Gets the display modes that match the requested format and other input options.</summary>
            <param name="EnumFormat">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> The color format (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getdisplaymodelist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> Options for modes to include (see <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-enum-modes">DXGI_ENUM_MODES</a>). DXGI_ENUM_MODES_SCALING needs to be specified to expose the display modes that require scaling.  Centered modes, requiring no scaling and corresponding directly to the display output, are enumerated by default.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getdisplaymodelist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumModes">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> Set <i>pDesc</i> to <b>NULL</b> so that <i>pNumModes</i> returns the number of display modes that match the format and the options. Otherwise, <i>pNumModes</i> returns the number of display modes returned in <i>pDesc</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getdisplaymodelist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a>*</b> A pointer to a list of display modes (see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a>); set to <b>NULL</b> to get the number of display modes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getdisplaymodelist#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>. It is rare, but possible, that the display modes available can change immediately after calling this method, in which case DXGI_ERROR_MORE_DATA is returned (if there is not enough room for all the display modes). If <b>GetDisplayModeList</b> is called from a Remote Desktop Services session (formerly Terminal Services session), DXGI_ERROR_NOT_CURRENTLY_AVAILABLE is returned.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getdisplaymodelist">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,System.Object)">
            <summary>Finds the display mode that most closely matches the requested display mode.</summary>
            <param name="pModeToMatch">
            <para>Type: <b>const <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a>*</b> The desired display mode (see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a>). Members of <b>DXGI_MODE_DESC</b> can be unspecified indicating no preference for that member.  A value of 0 for <b>Width</b> or <b>Height</b> indicates the value is unspecified.  If either <b>Width</b> or <b>Height</b> are 0, both must be 0.  A numerator and denominator of 0 in <b>RefreshRate</b> indicate it is unspecified. Other members of <b>DXGI_MODE_DESC</b> have enumeration values indicating the member is unspecified.  If <i>pConcernedDevice</i> is <b>NULL</b>, <b>Format</b>cannot be DXGI_FORMAT_UNKNOWN.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-findclosestmatchingmode#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClosestMatch">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a>*</b> The mode that most closely matches <i>pModeToMatch</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-findclosestmatchingmode#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pConcernedDevice">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>*</b> A pointer to the Direct3D device interface. If this parameter is <b>NULL</b>, only modes whose format matches that of <i>pModeToMatch</i> will be returned; otherwise, only those formats that are supported for scan-out by the device are returned. For info about the formats that are supported for scan-out by the device at each feature level: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-findclosestmatchingmode#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-findclosestmatchingmode">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.WaitForVBlank">
            <summary>Halt a thread until the next vertical blank occurs.</summary>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-waitforvblank">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.TakeOwnership(System.Object,Windows.Win32.Foundation.BOOL)">
            <summary>Takes ownership of an output.</summary>
            <param name="pDevice">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>*</b> A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> interface of a device (such as an <a href="https://docs.microsoft.com/windows/desktop/api/d3d10/nn-d3d10-id3d10device">ID3D10Device</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-takeownership#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Exclusive">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> Set to <b>TRUE</b> to enable other threads or applications to take ownership of the device; otherwise, set to <b>FALSE</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-takeownership#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-takeownership">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.ReleaseOwnership">
            <summary>Releases ownership of the output.</summary>
            <remarks>
            <para>If you are not using a swap chain, get access to an output by calling <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgioutput-takeownership">IDXGIOutput::TakeOwnership</a> and release it when you are finished by calling <b>IDXGIOutput::ReleaseOwnership</b>. An application that uses a swap chain will typically not call either of these methods.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-releaseownership#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES*)">
            <summary>Gets a description of the gamma-control capabilities.</summary>
            <param name="pGammaCaps">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173062(v=vs.85)">DXGI_GAMMA_CONTROL_CAPABILITIES</a>*</b> A pointer to a  description of the gamma-control capabilities (see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173062(v=vs.85)">DXGI_GAMMA_CONTROL_CAPABILITIES</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getgammacontrolcapabilities#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getgammacontrolcapabilities">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.SetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)">
            <summary>Sets the gamma controls.</summary>
            <param name="pArray">
            <para>Type: <b>const <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173061(v=vs.85)">DXGI_GAMMA_CONTROL</a>*</b> A pointer to a <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173061(v=vs.85)">DXGI_GAMMA_CONTROL</a> structure that describes the gamma curve to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-setgammacontrol#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-setgammacontrol">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)">
            <summary>Gets the gamma control settings.</summary>
            <param name="pArray">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173061(v=vs.85)">DXGI_GAMMA_CONTROL</a>*</b> An array of gamma control settings (see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173061(v=vs.85)">DXGI_GAMMA_CONTROL</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getgammacontrol#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getgammacontrol">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.SetDisplaySurface(Windows.Win32.Graphics.Dxgi.IDXGISurface)">
            <summary>Changes the display mode.</summary>
            <param name="pScanoutSurface">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgisurface">IDXGISurface</a>*</b> A pointer to a surface (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgisurface">IDXGISurface</a>) used for rendering an image to the screen. The surface must have been created as a back buffer (DXGI_USAGE_BACKBUFFER).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-setdisplaysurface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-setdisplaysurface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetDisplaySurfaceData(Windows.Win32.Graphics.Dxgi.IDXGISurface)">
            <summary>Gets a copy of the current display surface.</summary>
            <param name="pDestination">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgisurface">IDXGISurface</a>*</b> A pointer to a destination surface (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgisurface">IDXGISurface</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getdisplaysurfacedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getdisplaysurfacedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)">
            <summary>Gets statistics about recently rendered frames.</summary>
            <param name="pStats">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_frame_statistics">DXGI_FRAME_STATISTICS</a>*</b> A pointer to frame statistics (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_frame_statistics">DXGI_FRAME_STATISTICS</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getframestatistics#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> If this function succeeds, it returns S_OK. Otherwise, it might return <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgioutput-getframestatistics">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)">
            <summary>Gets the display modes that match the requested format and other input options.</summary>
            <param name="EnumFormat">A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value for the color format.</param>
            <param name="Flags">
            <para>A combination of <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-enum-modes">DXGI_ENUM_MODES</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies options for display modes to include. You must specify DXGI_ENUM_MODES_SCALING to expose the display modes that require scaling.  Centered modes that require no scaling and correspond directly to the display output are enumerated by default.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutput1-getdisplaymodelist1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pNumModes">
            <para>A pointer to a variable that receives the number of display modes that <b>GetDisplayModeList1</b> returns in the memory block to which <i>pDesc</i> points. Set <i>pDesc</i> to <b>NULL</b> so that <i>pNumModes</i> returns the number of display modes that match the format and the options. Otherwise, <i>pNumModes</i> returns the number of display modes returned in <i>pDesc</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutput1-getdisplaymodelist1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDesc">A pointer to a list of display modes; set to <b>NULL</b> to get the number of display modes.</param>
            <returns>
            <para>Returns one of the error codes described in the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic. It is rare, but possible, that the display modes available can change immediately after calling this method, in which case DXGI_ERROR_MORE_DATA is returned (if there is not enough room for all the display modes).</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutput1-getdisplaymodelist1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,System.Object)">
            <summary>Finds the display mode that most closely matches the requested display mode.</summary>
            <param name="pModeToMatch">
            <para>A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_mode_desc1">DXGI_MODE_DESC1</a> structure that describes the display mode to match. Members of <b>DXGI_MODE_DESC1</b> can be unspecified, which indicates no preference for that member.  A value of 0 for <b>Width</b> or <b>Height</b> indicates that the value is unspecified.  If either <b>Width</b> or <b>Height</b> is 0, both must be 0.  A numerator and denominator of 0 in <b>RefreshRate</b> indicate it is unspecified. Other members of <b>DXGI_MODE_DESC1</b> have enumeration values that indicate that the member is unspecified.  If <i>pConcernedDevice</i> is <b>NULL</b>, the <b>Format</b>member of <b>DXGI_MODE_DESC1</b> cannot be <b>DXGI_FORMAT_UNKNOWN</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutput1-findclosestmatchingmode1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pClosestMatch">A pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_mode_desc1">DXGI_MODE_DESC1</a> structure that receives a description of the display mode that most closely matches the display mode described at <i>pModeToMatch</i>.</param>
            <param name="pConcernedDevice">
            <para>A pointer to the Direct3D device interface. If this parameter is <b>NULL</b>, <b>FindClosestMatchingMode1</b> returns only modes whose format matches that of <i>pModeToMatch</i>; otherwise, <b>FindClosestMatchingMode1</b> returns only those formats that are supported for scan-out by the device. For info about the formats that are supported for scan-out by the device at each feature level: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutput1-findclosestmatchingmode1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>Returns one of the error codes described in the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutput1-findclosestmatchingmode1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.GetDisplaySurfaceData1(Windows.Win32.Graphics.Dxgi.IDXGIResource)">
            <summary>Copies the display surface (front buffer) to a user-provided resource.</summary>
            <param name="pDestination">A pointer to a resource interface that represents the resource to which <b>GetDisplaySurfaceData1</b> copies the display surface.</param>
            <returns>Returns one of the error codes described in the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutput1-getdisplaysurfacedata1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.DuplicateOutput(System.Object,Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication@)">
            <summary>Creates a desktop duplication interface from the IDXGIOutput1 interface that represents an adapter output.</summary>
            <param name="pDevice">A pointer to the Direct3D device interface that you can use to process the desktop image. This device must be created from the adapter to which the output is connected.</param>
            <param name="ppOutputDuplication">A pointer to a variable that receives the new <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgioutputduplication">IDXGIOutputDuplication</a> interface.</param>
            <returns>
            <para><b>DuplicateOutput</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutput1-duplicateoutput">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.SupportsOverlays">
            <summary>Queries an adapter output for multiplane overlay support.</summary>
            <returns>TRUE if the output adapter is the primary adapter and it supports multiplane overlays, otherwise returns FALSE.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgioutput2-supportsoverlays">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.CheckOverlaySupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.Object,System.UInt32*)">
            <summary>Checks for overlay support.</summary>
            <param name="EnumFormat">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value for the color format.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgioutput3-checkoverlaysupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pConcernedDevice">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>*</b> A pointer to the Direct3D device interface. <b>CheckOverlaySupport</b> returns only support info about this scan-out device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgioutput3-checkoverlaysupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a variable that receives a combination of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_3/ne-dxgi1_3-dxgi_overlay_support_flag">DXGI_OVERLAY_SUPPORT_FLAG</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies options for overlay support.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgioutput3-checkoverlaysupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the error codes described in the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgioutput3-checkoverlaysupport">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.CheckOverlayColorSpaceSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.Object,System.UInt32*)">
            <summary>Checks for overlay color space support.</summary>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value for the color format.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgioutput4-checkoverlaycolorspacesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ColorSpace">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a>-typed value that specifies color space type to check overlay support for.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgioutput4-checkoverlaycolorspacesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pConcernedDevice">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>*</b> A pointer to the Direct3D device interface. <b>CheckOverlayColorSpaceSupport</b> returns only support info about this scan-out device.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgioutput4-checkoverlaycolorspacesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a variable that receives a combination of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/ne-dxgi1_4-dxgi_overlay_color_space_support_flag">DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies options for overlay color space support.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgioutput4-checkoverlaycolorspacesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>S_OK</b> on success, or it returns one of the error codes that are described in the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgioutput4-checkoverlaycolorspacesupport">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.DuplicateOutput1(System.Object,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT*,Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication@)">
            <summary>Allows specifying a list of supported formats for fullscreen surfaces that can be returned by the IDXGIOutputDuplication object.</summary>
            <param name="pDevice">
            <para>Type: <b>IUnknown*</b> A pointer to the Direct3D device interface that you can use to process the desktop image. This device must be created from the adapter to which the output is connected.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgioutput5-duplicateoutput1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">
            <para>Type: <b>UINT</b> Reserved for future use; must be zero.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgioutput5-duplicateoutput1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SupportedFormatsCount">
            <para>Type: <b>UINT</b> Specifies the number of supported formats.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgioutput5-duplicateoutput1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSupportedFormats">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>*</b> Specifies an array, of length  <i>SupportedFormatsCount</i> of  <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a> entries.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgioutput5-duplicateoutput1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppOutputDuplication">
            <para>Type: <b>IDXGIOutputDuplication**</b> A pointer to a variable that receives the new <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgioutputduplication">IDXGIOutputDuplication</a> interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgioutput5-duplicateoutput1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgioutput5-duplicateoutput1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1*)">
            <summary>Get an extended description of the output that includes color characteristics and connection type.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_6/ns-dxgi1_6-dxgi_output_desc1">DXGI_OUTPUT_DESC1</a>*</b> A pointer to the output description (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_6/ns-dxgi1_6-dxgi_output_desc1">DXGI_OUTPUT_DESC1</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgioutput6-getdesc1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns a code that indicates success or failure. S_OK if successful, <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a> if <i>pDesc</i> is passed in as <b>NULL</b>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgioutput6-getdesc1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.CheckHardwareCompositionSupport(System.UInt32*)">
            <summary>Notifies applications that hardware stretching is supported.</summary>
            <param name="pFlags">
            <para>Type: <b>UINT*</b> A bitfield of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_6/ne-dxgi1_6-dxgi_hardware_composition_support_flags">DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAGS</a> enumeration values describing which types of hardware composition are supported. The values are bitwise OR'd together.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgioutput6-checkhardwarecompositionsupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns a code that indicates success or failure.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-idxgioutput6-checkhardwarecompositionsupport">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_DESC*)">
            <summary>Retrieves a description of a duplicated output. This description specifies the dimensions of the surface that contains the desktop image.</summary>
            <param name="pDesc">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_outdupl_desc">DXGI_OUTDUPL_DESC</a> structure that describes the duplicated output. This parameter must not be <b>NULL</b>.</param>
            <remarks>
            <para>After an application creates an <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgioutputduplication">IDXGIOutputDuplication</a> interface, it calls <b>GetDesc</b> to retrieve the dimensions of the surface that contains the desktop image. The format of the desktop image is always <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_B8G8R8A8_UNORM</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getdesc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.AcquireNextFrame(System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO*,Windows.Win32.Graphics.Dxgi.IDXGIResource@)">
            <summary>Indicates that the application is ready to process the next desktop image.</summary>
            <param name="TimeoutInMilliseconds">
            <para>The time-out interval, in milliseconds. This interval specifies the amount of time that this method waits for a new frame before it returns to the caller.  This method returns if the interval elapses, and a new desktop image is not available. For more information about the time-out interval, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-acquirenextframe#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFrameInfo">A pointer to a memory location that receives the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_outdupl_frame_info">DXGI_OUTDUPL_FRAME_INFO</a> structure that describes timing and presentation statistics for a frame.</param>
            <param name="ppDesktopResource">A pointer to a variable that receives the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiresource">IDXGIResource</a> interface of the surface that contains the desktop bitmap.</param>
            <returns>
            <para><b>AcquireNextFrame</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-acquirenextframe">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.GetFrameDirtyRects(System.UInt32,Windows.Win32.Foundation.RECT*,System.UInt32*)">
            <summary>Gets information about dirty rectangles for the current desktop frame.</summary>
            <param name="DirtyRectsBufferSize">
            <para>The size in bytes of the buffer that the caller passed to the  <i>pDirtyRectsBuffer</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframedirtyrects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDirtyRectsBuffer">
            <para>A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structures that identifies the dirty rectangle regions for the desktop frame.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframedirtyrects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDirtyRectsBufferSizeRequired">
            <para>Pointer to a variable that receives the number of bytes that <b>GetFrameDirtyRects</b> needs to store information about dirty regions in the buffer at <i>pDirtyRectsBuffer</i>. For more information about returning the required buffer size, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframedirtyrects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para><b>GetFrameDirtyRects</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframedirtyrects">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.GetFrameMoveRects(System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_MOVE_RECT*,System.UInt32*)">
            <summary>Gets information about the moved rectangles for the current desktop frame.</summary>
            <param name="MoveRectsBufferSize">The size in bytes of the buffer that the caller passed to the  <i>pMoveRectBuffer</i> parameter.</param>
            <param name="pMoveRectBuffer">
            <para>A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_outdupl_move_rect">DXGI_OUTDUPL_MOVE_RECT</a> structures that identifies the moved rectangle regions for the desktop frame.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframemoverects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pMoveRectsBufferSizeRequired">
            <para>Pointer to a variable that receives the number of bytes that <b>GetFrameMoveRects</b> needs to store information about moved regions in the buffer at <i>pMoveRectBuffer</i>. For more information about returning the required buffer size, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframemoverects#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para><b>GetFrameMoveRects</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframemoverects">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.GetFramePointerShape(System.UInt32,System.Void*,System.UInt32*,Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_SHAPE_INFO*)">
            <summary>Gets information about the new pointer shape for the current desktop frame.</summary>
            <param name="PointerShapeBufferSize">The size in bytes of the buffer that the caller passed to the  <i>pPointerShapeBuffer</i> parameter.</param>
            <param name="pPointerShapeBuffer">A pointer to a buffer to which <b>GetFramePointerShape</b> copies and returns pixel data for the new pointer shape.</param>
            <param name="pPointerShapeBufferSizeRequired">
            <para>Pointer to a variable that receives the number of bytes that <b>GetFramePointerShape</b> needs to store the new pointer shape pixel data in the buffer at <i>pPointerShapeBuffer</i>. For more information about returning the required buffer size, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframepointershape#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pPointerShapeInfo">Pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_outdupl_pointer_shape_info">DXGI_OUTDUPL_POINTER_SHAPE_INFO</a> structure that receives the pointer shape information.</param>
            <returns>
            <para><b>GetFramePointerShape</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-getframepointershape">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.MapDesktopSurface(Windows.Win32.Graphics.Dxgi.DXGI_MAPPED_RECT*)">
            <summary>Provides the CPU with efficient access to a desktop image if that desktop image is already in system memory.</summary>
            <param name="pLockedRect">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_mapped_rect">DXGI_MAPPED_RECT</a> structure that receives the surface data that the CPU needs to directly access the surface data.</param>
            <returns>
            <para><b>MapDesktopSurface</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-mapdesktopsurface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.UnMapDesktopSurface">
            <summary>Invalidates the pointer to the desktop image that was retrieved by using IDXGIOutputDuplication::MapDesktopSurface.</summary>
            <returns>
            <para><b>UnMapDesktopSurface</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-unmapdesktopsurface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.ReleaseFrame">
            <summary>Indicates that the application finished processing the frame.</summary>
            <returns>
            <para><b>ReleaseFrame</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgioutputduplication-releaseframe">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.GetSharedHandle(Windows.Win32.Foundation.HANDLE*)">
            <summary>Gets the handle to a shared resource.</summary>
            <param name="pSharedHandle">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HANDLE</a>*</b> A pointer to a handle.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiresource-getsharedhandle#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiresource-getsharedhandle">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.GetUsage(System.UInt32*)">
            <summary>Get the expected resource usage.</summary>
            <param name="pUsage">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE</a>*</b> A pointer to a usage flag (see <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE</a>). For Direct3D 10, a surface can be used as a shader input or a render-target output.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiresource-getusage#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiresource-getusage">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.SetEvictionPriority(Windows.Win32.Graphics.Dxgi.DXGI_RESOURCE_PRIORITY)">
            <summary>Set the priority for evicting the resource from memory.</summary>
            <param name="EvictionPriority">Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b></param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiresource-setevictionpriority">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.GetEvictionPriority(System.UInt32*)">
            <summary>Get the eviction priority.</summary>
            <param name="pEvictionPriority">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to the eviction priority, which determines when a resource can be evicted from memory. The following defined values are possible. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiresource-getevictionpriority#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiresource-getevictionpriority">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISurface.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_SURFACE_DESC*)">
            <summary>Get a description of the surface.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_surface_desc">DXGI_SURFACE_DESC</a>*</b> A pointer to the surface description (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_surface_desc">DXGI_SURFACE_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgisurface-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the error codes that are described in the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgisurface-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISurface.Map(Windows.Win32.Graphics.Dxgi.DXGI_MAPPED_RECT*,System.UInt32)">
            <summary>Get a pointer to the data contained in the surface, and deny GPU access to the surface.</summary>
            <param name="pLockedRect">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_mapped_rect">DXGI_MAPPED_RECT</a>*</b> A pointer to the surface data (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_mapped_rect">DXGI_MAPPED_RECT</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgisurface-map#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="MapFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> CPU read-write flags. These flags can be combined with a logical OR.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgisurface-map#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the error codes that are described in the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgisurface-map">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISurface.Unmap">
            <summary>Invalidate the pointer to the surface retrieved by IDXGISurface::Map and re-enable GPU access to the resource.</summary>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; otherwise, returns one of the error codes that are described in the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgisurface-unmap">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.Present(System.UInt32,System.UInt32)">
            <summary>Presents a rendered image to the user.</summary>
            <param name="SyncInterval">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> An integer that specifies how to synchronize presentation of a frame with the vertical blank.</para>
            <para>For the bit-block transfer (bitblt) model (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_DISCARD</a>or <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_SEQUENTIAL</a>), values are: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-present#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> An integer value that contains swap-chain presentation options. These options are defined by the <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-present">DXGI_PRESENT</a> constants.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-present#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Possible return values include: S_OK, DXGI_ERROR_DEVICE_RESET or DXGI_ERROR_DEVICE_REMOVED (see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>), DXGI_STATUS_OCCLUDED (see <a href="/windows/desktop/direct3ddxgi/dxgi-status">DXGI_STATUS</a>), or D3DDDIERR_DEVICEREMOVED. <div class="alert"><b>Note</b>  The <b>Present</b> method can return either DXGI_ERROR_DEVICE_REMOVED or D3DDDIERR_DEVICEREMOVED if a video card has been physically removed from the computer, or a driver upgrade for the video card has occurred.</div> <div> </div></para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-present">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetBuffer(System.UInt32,System.Guid*,System.Object@)">
            <summary>Accesses one of the swap-chain's back buffers.</summary>
            <param name="Buffer">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A zero-based buffer index. If the swap chain's swap effect is <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_DISCARD</a>, this method can only access the first buffer; for this situation, set the index to zero. If the swap chain's swap effect is either <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_SEQUENTIAL</a> or <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</a>, only the swap chain's zero-index buffer can be read from and written to. The swap chain's buffers with indexes greater than zero can only be read from; so if you call the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiresource-getusage">IDXGIResource::GetUsage</a> method for such buffers, they have the <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE_READ_ONLY</a> flag set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> The type of interface used to manipulate the buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSurface">
            <para>Type: <b>void**</b> A pointer to a back-buffer interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getbuffer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getbuffer">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.SetFullscreenState(Windows.Win32.Foundation.BOOL,Windows.Win32.Graphics.Dxgi.IDXGIOutput)">
            <summary>Sets the display state to windowed or full screen.</summary>
            <param name="Fullscreen">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/WinProg/windows-data-types">BOOL</a></b> A Boolean value that specifies whether to set the display state to windowed or full screen. <b>TRUE</b> for full screen, and <b>FALSE</b> for windowed.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-setfullscreenstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pTarget">
            <para>Type: [in, optional] <b><a href="https://docs.microsoft.com/windows/win32/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a>*</b> If you pass <b>TRUE</b> to the <i>Fullscreen</i> parameter to set the display state to full screen, you can optionally set this parameter to a pointer to an <a href="https://docs.microsoft.com/windows/win32/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a> interface for the output target that contains the swap chain. If you set this parameter to <b>NULL</b>, DXGI will choose the output based on the swap-chain's device and the output window's placement. If you pass <b>FALSE</b> to <i>Fullscreen</i>, then you must set this parameter to <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-setfullscreenstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of these values. - **S_OK** if the action succeeded and the swap chain was placed in the requested state. - **DXGI_ERROR_NOT_CURRENTLY_AVAILABLE** if the action failed. When this error is returned, your application can continue to run in windowed mode and try to switch to full-screen mode later. There are many reasons why a windowed-mode swap chain cannot switch to full-screen mode. Here are some examples. - The application is running over Terminal Server. - The output window is occluded. - The output window does not have keyboard focus. - Another application is already in full-screen mode. - **DXGI_STATUS_MODE_CHANGE_IN_PROGRESS** is returned if a fullscreen/windowed mode transition is occurring when this API is called. - Other error codes if you run out of memory or encounter another unexpected fault; these codes may be treated as hard, non-continuable errors.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-setfullscreenstate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetFullscreenState(Windows.Win32.Foundation.BOOL*,Windows.Win32.Graphics.Dxgi.IDXGIOutput@)">
            <summary>Get the state associated with full-screen mode.</summary>
            <param name="pFullscreen">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a>*</b> A pointer to a boolean whose value is either:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getfullscreenstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppTarget">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a>**</b> A pointer to the output target (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a>) when the mode is full screen; otherwise <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getfullscreenstate#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getfullscreenstate">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*)">
            <summary>Get a description of the swap chain.</summary>
            <param name="pDesc">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a>*</b> A pointer to the swap-chain description (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getdesc#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getdesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.ResizeBuffers(System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32)">
            <summary>Changes the swap chain's back buffer size, format, and number of buffers. This should be called when the application window is resized.</summary>
            <param name="BufferCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of buffers in the swap chain (including all back and front buffers). This number can be different from the number of buffers with which you created the swap chain. This number can't be greater than <b>DXGI_MAX_SWAP_CHAIN_BUFFERS</b>. Set this number to zero to preserve the existing number of buffers in the swap chain. You can't specify less than two buffers for the flip presentation model.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-resizebuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Width">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The new width of the back buffer. If you specify zero, DXGI will use the width of the client area of the target window. You can't specify the width as zero if you called the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a> method to create the swap chain for a composition surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-resizebuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Height">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The new height of the back buffer. If you specify zero, DXGI will use the height of the client area of the target window. You can't specify the height as zero if you called the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a> method to create the swap chain for a composition surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-resizebuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NewFormat">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value for the new format of the back buffer. Set this value to <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_UNKNOWN</a> to preserve the existing format of the back buffer. The flip presentation model supports a more restricted set of formats than the bit-block transfer (bitblt) model.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-resizebuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SwapChainFlags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A combination of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_chain_flag">DXGI_SWAP_CHAIN_FLAG</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies options for swap-chain behavior.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-resizebuffers#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; an error code otherwise. For a list of error codes, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-resizebuffers">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.ResizeTarget(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)">
            <summary>Resizes the output target.</summary>
            <param name="pNewTargetParameters">
            <para>Type: <b>const <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a>*</b> A pointer to a <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a> structure that describes the mode, which specifies the new width, height, format, and refresh rate of the target. If the format is <a href="https://docs.microsoft.com/windows/desktop/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_UNKNOWN</a>, <b>ResizeTarget</b> uses the existing format. We only recommend that you use <b>DXGI_FORMAT_UNKNOWN</b> when the swap chain is in full-screen mode as this method is not thread safe.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-resizetarget#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns a code that indicates success or failure. <b>DXGI_STATUS_MODE_CHANGE_IN_PROGRESS</b> is returned if a full-screen/windowed mode transition is occurring when this API is called. See <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> for additional DXGI error codes.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-resizetarget">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetContainingOutput(Windows.Win32.Graphics.Dxgi.IDXGIOutput@)">
            <summary>Get the output (the display monitor) that contains the majority of the client area of the target window.</summary>
            <param name="ppOutput">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a>**</b> A pointer to the output interface (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a>).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getcontainingoutput#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getcontainingoutput">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)">
            <summary>Gets performance statistics about the last render frame.</summary>
            <param name="pStats">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_frame_statistics">DXGI_FRAME_STATISTICS</a>*</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_frame_statistics">DXGI_FRAME_STATISTICS</a> structure for the frame statistics.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getframestatistics#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getframestatistics">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetLastPresentCount(System.UInt32*)">
            <summary>Gets the number of times that IDXGISwapChain::Present or IDXGISwapChain1::Present1 has been called.</summary>
            <param name="pLastPresentCount">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a variable that receives the number of calls.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getlastpresentcount#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiswapchain-getlastpresentcount">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*)">
            <summary>Gets a description of the swap chain.</summary>
            <param name="pDesc">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a>  structure that describes the swap chain.</param>
            <returns>Returns S_OK if successful; an error code otherwise.  For a list of error codes, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getdesc1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetFullscreenDesc(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*)">
            <summary>Gets a description of a full-screen swap chain.</summary>
            <param name="pDesc">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_fullscreen_desc">DXGI_SWAP_CHAIN_FULLSCREEN_DESC</a>  structure that describes the full-screen swap chain.</param>
            <returns>
            <para><b>GetFullscreenDesc</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getfullscreendesc">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetHwnd(Windows.Win32.Foundation.HWND*)">
            <summary>Retrieves the underlying HWND for this swap-chain object.</summary>
            <param name="pHwnd">A pointer to a variable that receives the <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a> for the swap-chain object.</param>
            <returns>
            <para>Returns S_OK if successful; an error code otherwise.  For a list of error codes, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>. If <i>pHwnd</i> receives <b>NULL</b> (that is, the swap chain is not <a href="/windows/desktop/WinProg/windows-data-types">HWND</a>-based), <b>GetHwnd</b> returns <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-gethwnd">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetCoreWindow(System.Guid*,System.Object@)">
            <summary>Retrieves the underlying CoreWindow object for this swap-chain object.</summary>
            <param name="refiid">
            <para>A pointer to the globally unique identifier (GUID) of the <a href="https://docs.microsoft.com/uwp/api/Windows.UI.Core.CoreWindow">CoreWindow</a> object that is referenced by the <i>ppUnk</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getcorewindow#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppUnk">A pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com/uwp/api/Windows.UI.Core.CoreWindow">CoreWindow</a> object.</param>
            <returns>
            <para><b>GetCoreWindow</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getcorewindow">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.Present1(System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS*)">
            <summary>Presents a frame on the display screen.</summary>
            <param name="SyncInterval">
            <para>An integer that specifies how to synchronize presentation of a frame with the vertical blank.</para>
            <para>For the bit-block transfer (bitblt) model (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_DISCARD</a>or <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_SEQUENTIAL</a>), values are: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="PresentFlags">An integer value that contains swap-chain presentation options. These options are defined by the <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-present">DXGI_PRESENT</a> constants.</param>
            <param name="pPresentParameters">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_present_parameters">DXGI_PRESENT_PARAMETERS</a> structure that describes updated rectangles and scroll information of the frame to present.</param>
            <returns>Possible return values include: S_OK, <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_DEVICE_REMOVED</a> , <a href="/windows/desktop/direct3ddxgi/dxgi-status">DXGI_STATUS_OCCLUDED</a>, <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a>, or E_OUTOFMEMORY.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.IsTemporaryMonoSupported">
            <summary>Determines whether a swap chain supports “temporary mono.”</summary>
            <returns>
            <para>Indicates whether to use the swap chain in temporary mono mode. <b>TRUE</b> indicates that you can use temporary-mono mode; otherwise, <b>FALSE</b>. <b>Platform Update for Windows 7:  </b>On Windows 7 or Windows Server 2008 R2 with the <a href="https://support.microsoft.com/help/2670838">Platform Update for Windows 7</a> installed, <b>IsTemporaryMonoSupported</b> always returns FALSE because stereoscopic 3D display behavior isn’t available with the Platform Update for Windows 7. For more info about the Platform Update for Windows 7, see <a href="/windows/desktop/direct3darticles/platform-update-for-windows-7">Platform Update for Windows 7</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-istemporarymonosupported">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetRestrictToOutput(Windows.Win32.Graphics.Dxgi.IDXGIOutput@)">
            <summary>Gets the output (the display monitor) to which you can restrict the contents of a present operation.</summary>
            <param name="ppRestrictToOutput">A pointer to a buffer that receives a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgioutput">IDXGIOutput</a> interface for the restrict-to output. An application passes this pointer to <b>IDXGIOutput</b> in a call to the  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd">IDXGIFactory2::CreateSwapChainForHwnd</a>, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcorewindow">IDXGIFactory2::CreateSwapChainForCoreWindow</a>, or  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a> method to create the swap chain.</param>
            <returns>Returns S_OK if the restrict-to output was successfully retrieved; otherwise, returns E_INVALIDARG if the pointer is invalid.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getrestricttooutput">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.SetBackgroundColor(Windows.Win32.Graphics.Dxgi.DXGI_RGBA*)">
            <summary>Changes the background color of the swap chain.</summary>
            <param name="pColor">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-rgba">DXGI_RGBA</a> structure that specifies the background color to set.</param>
            <returns>
            <para><b>SetBackgroundColor</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-setbackgroundcolor">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetBackgroundColor(Windows.Win32.Graphics.Dxgi.DXGI_RGBA*)">
            <summary>Retrieves the background color of the swap chain.</summary>
            <param name="pColor">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-rgba">DXGI_RGBA</a> structure that receives the background color of the swap chain.</param>
            <returns>
            <para><b>GetBackgroundColor</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getbackgroundcolor">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.SetRotation(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_ROTATION)">
            <summary>Sets the rotation of the back buffers for the swap chain.</summary>
            <param name="Rotation">A <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173065(v=vs.85)">DXGI_MODE_ROTATION</a>-typed value that specifies how to set the rotation of the back buffers for the swap chain.</param>
            <returns>
            <para><b>SetRotation</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-setrotation">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetRotation(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_ROTATION*)">
            <summary>Gets the rotation of the back buffers for the swap chain.</summary>
            <param name="pRotation">A pointer to a variable that receives a <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173065(v=vs.85)">DXGI_MODE_ROTATION</a>-typed value that specifies the rotation of the back buffers for the swap chain.</param>
            <returns>
            <para>Returns S_OK if successful; an error code otherwise.  For a list of error codes, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>. <b>Platform Update for Windows 7:  </b>On Windows 7 or Windows Server 2008 R2 with the <a href="https://support.microsoft.com/help/2670838">Platform Update for Windows 7</a> installed, <b>GetRotation</b> fails with DXGI_ERROR_INVALID_CALL. For more info about the Platform Update for Windows 7, see <a href="/windows/desktop/direct3darticles/platform-update-for-windows-7">Platform Update for Windows 7</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/nf-dxgi1_2-idxgiswapchain1-getrotation">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.SetSourceSize(System.UInt32,System.UInt32)">
            <summary>Sets the source region to be used for the swap chain.</summary>
            <param name="Width">Source width to use for the swap chain. This value must be greater than zero, and must be less than or equal to the overall width of the swap chain.</param>
            <param name="Height">Source height to use for the swap chain. This value must be greater than zero, and must be less than or equal to the overall height of the swap chain.</param>
            <returns>
            <para>This method can return: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgiswapchain2-setsourcesize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetSourceSize(System.UInt32*,System.UInt32*)">
            <summary>Gets the source region used for the swap chain.</summary>
            <param name="pWidth">The current width of the source region of the swap chain. This value can range from 1 to the overall width of the swap chain.</param>
            <param name="pHeight">The current height of the source region of the swap chain. This value can range from 1 to the overall height of the swap chain.</param>
            <returns>This method can return error codes that are described in the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgiswapchain2-getsourcesize">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.SetMaximumFrameLatency(System.UInt32)">
            <summary>Sets the number of frames that the swap chain is allowed to queue for rendering.</summary>
            <param name="MaxLatency">The maximum number of back buffer frames that will be queued for the swap chain. This value is 1 by default.</param>
            <returns>Returns S_OK if successful; otherwise, DXGI_ERROR_DEVICE_REMOVED if the device was removed.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgiswapchain2-setmaximumframelatency">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetMaximumFrameLatency(System.UInt32*)">
            <summary>Gets the number of frames that the swap chain is allowed to queue for rendering.</summary>
            <param name="pMaxLatency">The maximum number of back buffer frames that will be queued for the swap chain. This value is 1 by default, but should be set to 2 if the scene takes longer than it takes for one vertical refresh (typically about 16ms) to draw.</param>
            <returns>
            <para>Returns S_OK if successful; otherwise, returns one of the following members of the <a href="/windows/desktop/direct3d9/d3derr">D3DERR</a> enumerated type: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgiswapchain2-getmaximumframelatency">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetFrameLatencyWaitableObject">
            <summary>Returns a waitable handle that signals when the DXGI adapter has finished presenting a new frame.</summary>
            <returns>A handle to the waitable object, or NULL if the swap chain was not created with <a href="/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_chain_flag">DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT</a>.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgiswapchain2-getframelatencywaitableobject">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.SetMatrixTransform(Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F*)">
            <summary>Sets the transform matrix that will be applied to a composition swap chain upon the next present.</summary>
            <param name="pMatrix">The transform matrix to use for swap chain scaling and translation. This function can only be used with composition swap chains created by <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a>. Only scale and translation components are allowed in the matrix.</param>
            <returns>
            <para><b>SetMatrixTransform</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgiswapchain2-setmatrixtransform">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetMatrixTransform(Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F*)">
            <summary>Gets the transform matrix that will be applied to a composition swap chain upon the next present.</summary>
            <param name="pMatrix">
            <para>[out] The transform matrix currently used for swap chain scaling and translation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgiswapchain2-getmatrixtransform#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para><b>GetMatrixTransform</b> returns: </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-idxgiswapchain2-getmatrixtransform">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetCurrentBackBufferIndex">
            <summary>Gets the index of the swap chain's current back buffer.</summary>
            <returns>
            <para>Type: <b><a href="/windows/desktop/WinProg/windows-data-types">UINT</a></b> Returns the index of the current back buffer.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-getcurrentbackbufferindex">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.CheckColorSpaceSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.UInt32*)">
            <summary>Checks the swap chain's support for color space.</summary>
            <param name="ColorSpace">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a>-typed value that specifies color space type to check support for.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-checkcolorspacesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pColorSpaceSupport">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> A pointer to a variable that receives a combination of <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_4/ne-dxgi1_4-dxgi_swap_chain_color_space_support_flag">DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies options for color space support.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-checkcolorspacesupport#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>S_OK</b> on success, or it returns one of the error codes that are described in the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-checkcolorspacesupport">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.SetColorSpace1(Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE)">
            <summary>Sets the color space used by the swap chain.</summary>
            <param name="ColorSpace">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ne-dxgicommon-dxgi_color_space_type">DXGI_COLOR_SPACE_TYPE</a>-typed value that specifies the color space to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-setcolorspace1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns <b>S_OK</b> on success, or it returns one of the error codes that are described in the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-setcolorspace1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.ResizeBuffers1(System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,System.Object[])">
            <summary>Changes the swap chain's back buffer size, format, and number of buffers, where the swap chain was created using a D3D12 command queue as an input device. This should be called when the application window is resized.</summary>
            <param name="BufferCount">
            <para>Type: <b>UINT</b> The number of buffers in the swap chain (including all back and front buffers). This number can be different from the number of buffers with which you created the swap chain. This number can't be greater than <b>DXGI_MAX_SWAP_CHAIN_BUFFERS</b>. Set this number to zero to preserve the existing number of buffers in the swap chain. You can't specify less than two buffers for the flip presentation model.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-resizebuffers1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Width">
            <para>Type: <b>UINT</b> The new width of the back buffer. If you specify zero, DXGI will use the width of the client area of the target window. You can't specify the width as zero if you called the <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a> method to create the swap chain for a composition surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-resizebuffers1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Height">
            <para>Type: <b>UINT</b> The new height of the back buffer. If you specify zero, DXGI will use the height of the client area of the target window. You can't specify the height as zero if you called the <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a> method to create the swap chain for a composition surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-resizebuffers1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Format">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a></b> A <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT</a>-typed value for the new format of the back buffer. Set this value to <a href="https://docs.microsoft.com/windows/win32/api/dxgiformat/ne-dxgiformat-dxgi_format">DXGI_FORMAT_UNKNOWN</a> to preserve the existing format of the back buffer. The flip presentation model supports a more restricted set of formats than the bit-block transfer (bitblt) model.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-resizebuffers1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SwapChainFlags">
            <para>Type: <b>UINT</b> A combination of <a href="https://docs.microsoft.com/windows/win32/api/dxgi/ne-dxgi-dxgi_swap_chain_flag">DXGI_SWAP_CHAIN_FLAG</a>-typed values that are combined by using a bitwise OR operation. The resulting value specifies options for swap-chain behavior.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-resizebuffers1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pCreationNodeMask">
            <para>Type: <b>const UINT*</b> An array of UINTs, of total size <i>BufferCount</i>, where the value indicates which node the back buffer should be created on. Buffers created using <b>ResizeBuffers1</b> with a non-null <i>pCreationNodeMask</i> array are visible to all nodes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-resizebuffers1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppPresentQueue">
            <para>Type: <b>IUnknown*</b> An array of command queues (<a href="https://docs.microsoft.com/windows/win32/api/d3d12/nn-d3d12-id3d12commandqueue">ID3D12CommandQueue</a> instances), of total size <i>BufferCount</i>. Each queue provided must match the corresponding creation node mask specified in the <i>pCreationNodeMask</i> array. When <b>Present()</b> is called, in addition to rotating to the next buffer for the next frame, the swapchain will also rotate through these command queues. This allows the app to control which queue requires synchronization for a given present operation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-resizebuffers1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; an error code otherwise. For a list of error codes, see <a href="/windows/win32/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_4/nf-dxgi1_4-idxgiswapchain3-resizebuffers1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.SetHDRMetaData(Windows.Win32.Graphics.Dxgi.DXGI_HDR_METADATA_TYPE,System.UInt32,System.Void*)">
            <summary>This method sets High Dynamic Range (HDR) and Wide Color Gamut (WCG) header metadata.</summary>
            <param name="Type">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_5/ne-dxgi1_5-dxgi_hdr_metadata_type">DXGI_HDR_METADATA_TYPE</a></b> Specifies one member of the  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_5/ne-dxgi1_5-dxgi_hdr_metadata_type">DXGI_HDR_METADATA_TYPE</a> enum.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgiswapchain4-sethdrmetadata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Size">
            <para>Type: <b>UINT</b> Specifies the size of <i>pMetaData</i>, in bytes.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgiswapchain4-sethdrmetadata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pMetaData">
            <para>Type: <b>void*</b> Specifies a void pointer that references the metadata, if it exists. Refer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_5/ns-dxgi1_5-dxgi_hdr_metadata_hdr10">DXGI_HDR_METADATA_HDR10</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgiswapchain4-sethdrmetadata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns an HRESULT success or error code.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_5/nf-dxgi1_5-idxgiswapchain4-sethdrmetadata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE">
            <summary>Driver type options.</summary>
            <remarks>
            <para>The driver type is required when calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a> or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdeviceandswapchain">D3D11CreateDeviceAndSwapChain</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3dcommon/ne-d3dcommon-d3d_driver_type#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE.D3D_DRIVER_TYPE_UNKNOWN">
            <summary>The driver type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE.D3D_DRIVER_TYPE_HARDWARE">
            <summary>A hardware driver, which implements Direct3D features in hardware. This is the primary driver that you should use in your Direct3D applications because it provides the best performance. A hardware driver uses hardware acceleration (on supported hardware) but can also use software for parts of the pipeline that are not supported in hardware. This driver type is often referred to as a hardware abstraction layer or HAL.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE.D3D_DRIVER_TYPE_REFERENCE">
            <summary>
            <para>A reference driver, which is a software implementation that supports every Direct3D feature. A reference driver is designed for accuracy rather than speed and as a result is slow but accurate. The rasterizer portion of the driver does make use of special CPU instructions whenever it can, but it is not intended for retail applications; use it only for feature testing, demonstration of functionality, debugging, or verifying bugs in other drivers. The reference device for this driver is installed by the Windows SDK 8.0 or later and is intended only as a debug aid for development purposes. This driver may be referred to as a REF driver, a reference driver, or a reference rasterizer. <div class="alert"><b>Note</b>  When you use the REF driver in Windows Store apps,  the REF driver renders correctly but doesn't display any output on the screen. To verify bugs in hardware drivers for Windows Store apps, use <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE_WARP</a> for the WARP driver instead.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3dcommon/ne-d3dcommon-d3d_driver_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE.D3D_DRIVER_TYPE_NULL">
            <summary>A NULL driver, which is a reference driver without render capability. This driver is commonly used for debugging non-rendering API calls, it is not appropriate for retail applications. This driver is installed by the DirectX SDK.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE.D3D_DRIVER_TYPE_SOFTWARE">
            <summary>A software driver, which is a driver implemented completely in software. The software implementation is not intended for a high-performance application due to its very slow performance.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE.D3D_DRIVER_TYPE_WARP">
            <summary>
            <para>A WARP driver, which is a high-performance software rasterizer. The rasterizer supports <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">feature levels</a> 9_1 through level 10_1 with a high performance software implementation. For information about limitations creating a WARP device on certain feature levels, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-limitations">Limitations Creating WARP and Reference Devices</a>. For more information about using a WARP driver, see <a href="https://docs.microsoft.com/windows/desktop/direct3darticles/directx-warp">Windows Advanced Rasterization Platform (WARP) In-Depth Guide</a>. <div class="alert"><b>Note</b>  The WARP driver that Windows 8 includes supports <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> 9_1 through level 11_1.</div> <div> </div> <div class="alert"><b>Note</b>  The WARP driver that Windows 8.1 includes fully supports <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature level</a> 11_1, including tiled resources, <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_3/nf-dxgi1_3-idxgidevice3-trim">IDXGIDevice3::Trim</a>, shared BCn surfaces, minblend, and map default. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3dcommon/ne-d3dcommon-d3d_driver_type#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL">
            <summary>Describes the set of features targeted by a Direct3D device.</summary>
            <remarks>
            <para>For an overview of the capabilities of each feature level, see [Direct3D feature levels](/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro). For information about limitations creating non-hardware-type devices on certain feature levels, see [Limitations creating WARP and reference devices](/windows/desktop/direct3d11/overviews-direct3d-11-devices-limitations).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3dcommon/ne-d3dcommon-d3d_feature_level#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_1_0_CORE">
            <summary>Allows Microsoft Compute Driver Model (MCDM) devices to be used, or more feature-rich devices (such as traditional GPUs) that support a superset of the functionality. MCDM is the overall driver model for compute-only; it's a scaled-down peer of the larger scoped Windows Device Driver Model (WDDM).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_9_1">
            <summary>Targets features supported by [feature level](/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro) 9.1, including shader model 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_9_2">
            <summary>Targets features supported by [feature level](/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro) 9.2, including shader model 2.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_9_3">
            <summary>Targets features supported by [feature level](/windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro) 9.3, including shader model 2.0b.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_10_0">
            <summary>Targets features supported by Direct3D 10.0, including shader model 4.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_10_1">
            <summary>Targets features supported by Direct3D 10.1, including shader model 4.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_11_0">
            <summary>Targets features supported by Direct3D 11.0, including shader model 5.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_11_1">
            <summary>Targets features supported by Direct3D 11.1, including shader model 5 and logical blend operations. This feature level requires a display driver that is at least implemented to WDDM for Windows 8 (WDDM 1.2).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_12_0">
            <summary>Targets features supported by Direct3D 12.0, including shader model 5.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL.D3D_FEATURE_LEVEL_12_1">
            <summary>Targets features supported by Direct3D 12.1, including shader model 5.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY">
            <summary>Values that indicate how the pipeline interprets vertex data that is bound to the input-assembler stage. These primitive topology values determine how the vertex data is rendered on screen.</summary>
            <remarks>
            <para>Use the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-iasetprimitivetopology">ID3D11DeviceContext::IASetPrimitiveTopology</a> method and a value from <b>D3D_PRIMITIVE_TOPOLOGY</b> to bind a primitive topology to the input-assembler stage. Use the  <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11devicecontext-iagetprimitivetopology">ID3D11DeviceContext::IAGetPrimitiveTopology</a> method to retrieve the primitive topology for the input-assembler stage. The following diagram shows the various primitive types for a geometry shader object. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3dcommon/ne-d3dcommon-d3d_primitive_topology#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_UNDEFINED">
            <summary>The IA stage has not been initialized with a primitive topology. The IA stage will not function properly unless a primitive topology is defined.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_POINTLIST">
            <summary>Interpret the vertex data as a list of points.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_LINELIST">
            <summary>Interpret the vertex data as a list of lines.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_LINESTRIP">
            <summary>Interpret the vertex data as a line strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST">
            <summary>Interpret the vertex data as a list of triangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP">
            <summary>Interpret the vertex data as a triangle strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ">
            <summary>Interpret the vertex data as a list of lines with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ">
            <summary>Interpret the vertex data as a line strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ">
            <summary>Interpret the vertex data as a list of triangles with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ">
            <summary>Interpret the vertex data as a triangle strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_UNDEFINED">
            <summary>The IA stage has not been initialized with a primitive topology. The IA stage will not function properly unless a primitive topology is defined.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_POINTLIST">
            <summary>Interpret the vertex data as a list of points.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_LINELIST">
            <summary>Interpret the vertex data as a list of lines.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP">
            <summary>Interpret the vertex data as a line strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST">
            <summary>Interpret the vertex data as a list of triangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP">
            <summary>Interpret the vertex data as a triangle strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_LINELIST_ADJ">
            <summary>Interpret the vertex data as a list of lines with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ">
            <summary>Interpret the vertex data as a line strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ">
            <summary>Interpret the vertex data as a list of triangles with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ">
            <summary>Interpret the vertex data as a triangle strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_UNDEFINED">
            <summary>The IA stage has not been initialized with a primitive topology. The IA stage will not function properly unless a primitive topology is defined.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_POINTLIST">
            <summary>Interpret the vertex data as a list of points.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_LINELIST">
            <summary>Interpret the vertex data as a list of lines.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP">
            <summary>Interpret the vertex data as a line strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST">
            <summary>Interpret the vertex data as a list of triangles.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP">
            <summary>Interpret the vertex data as a triangle strip.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_LINELIST_ADJ">
            <summary>Interpret the vertex data as a list of lines with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ">
            <summary>Interpret the vertex data as a line strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ">
            <summary>Interpret the vertex data as a list of triangles with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ">
            <summary>Interpret the vertex data as a triangle strip with adjacency data.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY.D3D11_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST">
            <summary>Interpret the vertex data as a patch list.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION">
            <summary>Values that identify the type of resource to be viewed as a shader resource.</summary>
            <remarks>
            <para>A <b>D3D_SRV_DIMENSION</b>-typed value is specified in the <b>ViewDimension</b> member of the <a href="https://docs.microsoft.com/windows/win32/api/d3d11shader/ns-d3d11shader-d3d11_shader_input_bind_desc">D3D11_SHADER_RESOURCE_VIEW_DESC</a> structure or the  <b>Dimension</b> member of the <a href="https://docs.microsoft.com/windows/desktop/api/d3d11shader/ns-d3d11shader-d3d11_shader_input_bind_desc">D3D11_SHADER_INPUT_BIND_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3dcommon/ne-d3dcommon-d3d_srv_dimension#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_UNKNOWN">
            <summary>The type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_BUFFER">
            <summary>The resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE1D">
            <summary>The resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource is an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE2D">
            <summary>The resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource is an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE2DMS">
            <summary>The resource is a multisampling 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource is an array of multisampling 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURE3D">
            <summary>The resource is a 3D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURECUBE">
            <summary>The resource is a cube texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_TEXTURECUBEARRAY">
            <summary>The resource is an array of cube textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D_SRV_DIMENSION_BUFFEREX">
            <summary>The resource is a raw buffer. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_UNKNOWN">
            <summary>The type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_BUFFER">
            <summary>The resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE1D">
            <summary>The resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource is an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE2D">
            <summary>The resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource is an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE2DMS">
            <summary>The resource is a multisampling 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource is an array of multisampling 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURE3D">
            <summary>The resource is a 3D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_SRV_DIMENSION_TEXTURECUBE">
            <summary>The resource is a cube texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_UNKNOWN">
            <summary>The type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_BUFFER">
            <summary>The resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE1D">
            <summary>The resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource is an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE2D">
            <summary>The resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource is an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE2DMS">
            <summary>The resource is a multisampling 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource is an array of multisampling 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURE3D">
            <summary>The resource is a 3D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURECUBE">
            <summary>The resource is a cube texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D10_1_SRV_DIMENSION_TEXTURECUBEARRAY">
            <summary>The resource is an array of cube textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_UNKNOWN">
            <summary>The type is unknown.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_BUFFER">
            <summary>The resource is a buffer.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE1D">
            <summary>The resource is a 1D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE1DARRAY">
            <summary>The resource is an array of 1D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE2D">
            <summary>The resource is a 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE2DARRAY">
            <summary>The resource is an array of 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE2DMS">
            <summary>The resource is a multisampling 2D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE2DMSARRAY">
            <summary>The resource is an array of multisampling 2D textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURE3D">
            <summary>The resource is a 3D texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURECUBE">
            <summary>The resource is a cube texture.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_TEXTURECUBEARRAY">
            <summary>The resource is an array of cube textures.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Direct3D.D3D_SRV_DIMENSION.D3D11_SRV_DIMENSION_BUFFEREX">
            <summary>The resource is a raw buffer. For more info about raw viewing of buffers, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-resources-intro">Raw Views of Buffers</a>.</summary>
        </member>
        <member name="F:Windows.Win32.Foundation.BOOL.Value">
            <summary>
            The internal value of the Win32 BOOL
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.BOOL.Equals(Windows.Win32.Foundation.BOOL)">
            <summary>
            Determines if the given BOOL is equal to this value
            </summary>
            <param name="other">BOOL to compare to</param>
            <returns>True if equal, otherwise false</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.BOOL.Equals(System.Object)">
            <summary>
            Determines if the given object is equal to this value
            </summary>
            <param name="obj">object to compare to</param>
            <returns>True if equal, otherwise false</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.BOOL.GetHashCode">
            <summary>
            Gets the hash code of this BOOL value
            </summary>
            <returns>Int32 hash code</returns>
        </member>
        <member name="T:Windows.Win32.Foundation.HINSTANCE">
            <summary>
            A Win32 handle equivalent to a pointer
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HINSTANCE.Value">
            <summary>
            The value of this HINSTANCE
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.HINSTANCE.#ctor(System.IntPtr)">
            <summary>
            Creates a new HINSTANCE
            </summary>
            <param name="value">Value of the HINSTANCE</param>
        </member>
        <member name="F:Windows.Win32.Foundation.HINSTANCE.Null">
            <summary>
            A null value HINSTANCE
            </summary>
        </member>
        <member name="P:Windows.Win32.Foundation.HINSTANCE.IsNull">
            <summary>
            Indicates if this HINSTANCE value is a null handle/pointer
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.HINSTANCE.Equals(Windows.Win32.Foundation.HINSTANCE)">
            <summary>
            Determines if the given HINSTANCE is equal to this one
            </summary>
            <param name="other">HINSTANCE to compare</param>
            <returns>True if they are equal, otherwise false</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.HINSTANCE.Equals(System.Object)">
            <summary>
            Determines if the given object is equal to this one
            </summary>
            <param name="obj">object to compare</param>
            <returns>True if they are equal, otherwise false</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.HINSTANCE.GetHashCode">
            <summary>
            Gets the hash code of this HINSTANCE value
            </summary>
            <returns>Int32 hash code</returns>
        </member>
        <member name="T:Windows.Win32.Foundation.HRESULT">
            <summary>
            A 32-bit value that is used to describe an error or warning.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.Value">
            <summary>
            Gets the value of the HRESULT as an Int32 value
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.HRESULT.#ctor(System.Int32)">
            <summary>
            Creates a new HRESULT value
            </summary>
            <param name="value">Value of the HRESULT code</param>
        </member>
        <member name="M:Windows.Win32.Foundation.HRESULT.Equals(Windows.Win32.Foundation.HRESULT)">
            <summary>
            Determines if the given HRESULT is equal to this one
            </summary>
            <param name="other">HRESULT to compare</param>
            <returns>True if they are equal, otherwise false</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.HRESULT.Equals(System.Object)">
            <summary>
            Determines if the given object and this HRESULT value are equal
            </summary>
            <param name="obj">Object to compare to</param>
            <returns>True if equal, otherwise false</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.HRESULT.GetHashCode">
            <summary>
            Gets the hash code of this HRESULT value
            </summary>
            <returns>Int32 hash code</returns>
        </member>
        <member name="P:Windows.Win32.Foundation.HRESULT.Succeeded">
            <summary>
            Indicates if the operation was successful
            </summary>
        </member>
        <member name="P:Windows.Win32.Foundation.HRESULT.Failed">
            <summary>
            Indicates if the operation was a failure
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.HRESULT.ThrowOnFailure(System.IntPtr)">
            <inheritdoc cref="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)" />
            <param name="errorInfo">
            A pointer to the IErrorInfo interface that provides more information about the
            error. You can specify <see cref="F:System.IntPtr.Zero"/> to use the current IErrorInfo interface, or
            <c>new IntPtr(-1)</c> to ignore the current IErrorInfo interface and construct the exception
            just from the error code.
            </param>
            <returns><see langword="this"/> <see cref="T:Windows.Win32.Foundation.HRESULT"/>, if it does not reflect an error.</returns>
            <seealso cref="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)"/>
        </member>
        <member name="M:Windows.Win32.Foundation.HRESULT.ToString">
            <summary>
            Converts the HRESULT value to a string representation
            </summary>
            <returns>HRESULT in string form</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.HRESULT.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the HRESULT value to a specially formatted string representation
            </summary>
            <param name="format">Formatting string</param>
            <param name="formatProvider">The format provider</param>
            <returns>HRESULT in special formatted string form</returns>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.S_OK">
            <summary>
            Result was successful / OK
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_ACCESS_DENIED">
            <summary>
            You tried to use a resource to which you did not have the required access privileges. 
            This error is most typically caused when you write to a shared resource with read-only access.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_ACCESS_LOST">
            <summary>
            The desktop duplication interface is invalid. The desktop duplication interface 
            typically becomes invalid when a different type of image is displayed on the desktop.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_ALREADY_EXISTS">
            <summary>
            The desired element already exists. This is returned by DXGIDeclareAdapterRemovalSupport 
            if it is not the first time that the function is called.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_CANNOT_PROTECT_CONTENT">
            <summary>
            DXGI can't provide content protection on the swap chain. This error is typically caused by 
            an older driver, or when you use a swap chain that is incompatible with content protection.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_DEVICE_HUNG">
            <summary>
            The application's device failed due to badly formed commands sent by the application. 
            This is an design-time issue that should be investigated and fixed.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_DEVICE_REMOVED">
            <summary>
            The video card has been physically removed from the system, or a driver upgrade for 
            the video card has occurred. The application should destroy and recreate the device. 
            For help debugging the problem, call ID3D10Device::GetDeviceRemovedReason.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_DEVICE_RESET">
            <summary>
            The device failed due to a badly formed command. This is a run-time issue; 
            The application should destroy and recreate the device.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_DRIVER_INTERNAL_ERROR">
            <summary>
            The driver encountered a problem and was put into the device removed state.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_FRAME_STATISTICS_DISJOINT">
            <summary>
            An event (for example, a power cycle) interrupted the gathering of presentation statistics.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE">
            <summary>
            The application attempted to acquire exclusive ownership of an output, but failed 
            because some other application (or device within the application) already acquired ownership.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_INVALID_CALL">
            <summary>
            The application provided invalid parameter data; this must be debugged and fixed before the application is released.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_MORE_DATA">
            <summary>
            The buffer supplied by the application is not big enough to hold the requested data.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_NAME_ALREADY_EXISTS">
            <summary>
            The supplied name of a resource in a call to DXGI.IResource1.CreateSharedHandle 
            is already associated with some other resource.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_NONEXCLUSIVE">
            <summary>
            A global counter resource is in use, and the Direct3D device can't currently use the counter resource.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_NOT_CURRENTLY_AVAILABLE">
            <summary>
            The resource or request is not currently available, but it might become available later.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_NOT_FOUND">
            <summary>
            When calling DXGI.IObject.GetPrivateData, the GUID passed in is not recognized as 
            one previously passed to DXG.IObject.SetPrivateData or DXGI.IObject.SetPrivateDataInterface. 
            When calling DXGI.IFactory.EnumAdapters or DXGI.IAdapter.EnumOutputs, the enumerated ordinal 
            is out of range.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_REMOTE_OUTOFMEMORY">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_RESTRICT_TO_OUTPUT_STALE">
            <summary>
            The DXGI output (monitor) to which the swap chain content was restricted is now disconnected or changed.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_SDK_COMPONENT_MISSING">
            <summary>
            The operation depends on an SDK component that is missing or mismatched.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_SESSION_DISCONNECTED">
            <summary>
            The Remote Desktop Services session is currently disconnected.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_UNSUPPORTED">
            <summary>
            The requested functionality is not supported by the device or the driver.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_WAIT_TIMEOUT">
            <summary>
            The time-out interval elapsed before the next desktop frame was available.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HRESULT.DXGI_ERROR_WAS_STILL_DRAWING">
            <summary>
            The GPU was busy at the moment when a call was made to perform an operation, 
            and did not execute or schedule the operation.
            </summary>
        </member>
        <member name="T:Windows.Win32.Foundation.HWND">
            <summary>
            A handle to a window or control
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.HWND.Value">
            <summary>
            The internal pointer value of this HWND
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.HWND.#ctor(System.IntPtr)">
            <summary>
            Creates a new HWND from a pointer value
            </summary>
            <param name="value">Pointer value</param>
        </member>
        <member name="P:Windows.Win32.Foundation.HWND.Null">
            <summary>
            Equivalent to a null (0) pointer
            </summary>
        </member>
        <member name="P:Windows.Win32.Foundation.HWND.IsNull">
            <summary>
            Indicates if this HWND is null
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.HWND.Equals(Windows.Win32.Foundation.HWND)">
            <summary>
            Determines if the given HWND is equal to this one
            </summary>
            <param name="other">HWND to compare</param>
            <returns>True if they are equal, otherwise false</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.HWND.Equals(System.Object)">
            <summary>
            Determines if the given object and this HWND value are equal
            </summary>
            <param name="obj">Object to compare to</param>
            <returns>True if equal, otherwise false</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.HWND.GetHashCode">
            <summary>
            Gets the hash code of this HWND value
            </summary>
            <returns>Int32 hash code</returns>
        </member>
        <member name="T:Windows.Win32.Foundation.LUID">
            <summary>The LUID structure is an opaque structure that specifies an identifier that is guaranteed to be unique on the local machine. For more information, see the reference page for LUID in the Microsoft Windows SDK documentation.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//ntdef/ns-ntdef-luid">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.Foundation.PCSTR">
            <summary>
            A pointer to a constant character string.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.PCSTR.Value">
            <summary>
            A pointer to the first character in the string. The content should be considered readonly, as it was typed as constant in the SDK.
            </summary>
        </member>
        <member name="P:Windows.Win32.Foundation.PCSTR.Length">
            <summary>
            Gets the number of characters up to the first null character (exclusive).
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.PCSTR.ToString">
            <summary>
            Returns a <see langword="string"/> with a copy of this character array, decoding as UTF-8.
            </summary>
            <returns>A <see langword="string"/>, or <see langword="null"/> if <see cref="F:Windows.Win32.Foundation.PCSTR.Value"/> is <see langword="null"/>.</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.PCSTR.AsSpan">
            <summary>
            Returns a span of the characters in this string.
            </summary>
        </member>
        <member name="T:Windows.Win32.Foundation.PCWSTR">
            <summary>
            A pointer to a constant character string.
            </summary>
        </member>
        <member name="F:Windows.Win32.Foundation.PCWSTR.Value">
            <summary>
            A pointer to the first character in the string. The content should be considered readonly, as it was typed as constant in the SDK.
            </summary>
        </member>
        <member name="P:Windows.Win32.Foundation.PCWSTR.Length">
            <summary>
            Gets the number of characters up to the first null character (exclusive).
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.PCWSTR.ToString">
            <summary>
            Returns a <see langword="string"/> with a copy of this character array.
            </summary>
            <returns>A <see langword="string"/>, or <see langword="null"/> if <see cref="F:Windows.Win32.Foundation.PCWSTR.Value"/> is <see langword="null"/>.</returns>
        </member>
        <member name="M:Windows.Win32.Foundation.PCWSTR.AsSpan">
            <summary>
            Returns a span of the characters in this string.
            </summary>
        </member>
        <member name="M:Windows.Win32.Foundation.PWSTR.AsSpan">
            <summary>
            Returns a span of the characters in this string.
            </summary>
        </member>
        <member name="T:Windows.Win32.Foundation.RECT">
            <summary>The RECT structure defines a rectangle by the coordinates of its upper-left and lower-right corners.</summary>
            <remarks>
            <para>The RECT structure is identical to the <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rectl">RECTL</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//windef/ns-windef-rect#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Foundation.RECT.left">
            <summary>Specifies the <i>x</i>-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Foundation.RECT.top">
            <summary>Specifies the <i>y</i>-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Foundation.RECT.right">
            <summary>Specifies the <i>x</i>-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Foundation.RECT.bottom">
            <summary>Specifies the <i>y</i>-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIObject,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIObject.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIObject,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIObject.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIObject,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIObject.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIObject,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIObject.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIDeviceSubObject,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDeviceSubObject.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIDeviceSubObject,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDeviceSubObject.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIDeviceSubObject,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDeviceSubObject.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIDeviceSubObject,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDeviceSubObject.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Dxgi.IDXGIDeviceSubObject,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDeviceSubObject.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISurface,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISurface.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGISurface,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISurface.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISurface,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISurface.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGISurface,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISurface.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Dxgi.IDXGISurface,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISurface.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGISurface,Windows.Win32.Graphics.Dxgi.DXGI_SURFACE_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISurface.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_SURFACE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Map(Windows.Win32.Graphics.Dxgi.IDXGISurface,Windows.Win32.Graphics.Dxgi.DXGI_MAPPED_RECT@,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISurface.Map(Windows.Win32.Graphics.Dxgi.DXGI_MAPPED_RECT*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIOutput,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIOutput,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.SetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckInterfaceSupport(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,System.Guid@,System.Int64@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter.CheckInterfaceSupport(System.Guid*,System.Int64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIDevice,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIDevice,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIDevice,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIDevice,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSurface(Windows.Win32.Graphics.Dxgi.IDXGIDevice,Windows.Win32.Graphics.Dxgi.DXGI_SURFACE_DESC@,System.UInt32,System.Nullable{Windows.Win32.Graphics.Dxgi.DXGI_SHARED_RESOURCE},Windows.Win32.Graphics.Dxgi.IDXGISurface[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.CreateSurface(Windows.Win32.Graphics.Dxgi.DXGI_SURFACE_DESC*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_SHARED_RESOURCE*,Windows.Win32.Graphics.Dxgi.IDXGISurface[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.QueryResourceResidency(Windows.Win32.Graphics.Dxgi.IDXGIDevice,System.Object[],System.Span{Windows.Win32.Graphics.Dxgi.DXGI_RESIDENCY})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.QueryResourceResidency(System.Object[],Windows.Win32.Graphics.Dxgi.DXGI_RESIDENCY*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGPUThreadPriority(Windows.Win32.Graphics.Dxgi.IDXGIDevice,System.Int32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIDevice.GetGPUThreadPriority(System.Int32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetIids(Windows.Win32.System.WinRT.IInspectable,System.UInt32@,System.Guid**)">
            <inheritdoc cref="M:Windows.Win32.System.WinRT.IInspectable.GetIids(System.UInt32*,System.Guid**)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetRuntimeClassName(Windows.Win32.System.WinRT.IInspectable,Windows.Win32.WindowsDeleteStringSafeHandle@)">
            <inheritdoc cref="M:Windows.Win32.System.WinRT.IInspectable.GetRuntimeClassName(Windows.Win32.System.WinRT.HSTRING*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetTrustLevel(Windows.Win32.System.WinRT.IInspectable,Windows.Win32.System.WinRT.TrustLevel@)">
            <inheritdoc cref="M:Windows.Win32.System.WinRT.IInspectable.GetTrustLevel(Windows.Win32.System.WinRT.TrustLevel*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceChild.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetType(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Resource.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetType(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer,Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Buffer,Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Buffer.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetType(Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D,Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetType(Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D,Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetType(Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D,Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.GetType(Windows.Win32.Graphics.Direct3D11.D3D11_RESOURCE_DIMENSION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11View,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11View,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11View,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11View.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView,Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView,Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView,Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView,Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance,Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_CLASS_INSTANCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetInstanceName(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance,Windows.Win32.Foundation.PSTR,System.UIntPtr@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetInstanceName(Windows.Win32.Foundation.PSTR,System.UIntPtr*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetTypeName(Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance,Windows.Win32.Foundation.PSTR,System.UIntPtr@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance.GetTypeName(Windows.Win32.Foundation.PSTR,System.UIntPtr*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetClassInstance(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,System.String,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.GetClassInstance(Windows.Win32.Foundation.PCSTR,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateClassInstance(Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage.CreateClassInstance(Windows.Win32.Foundation.PCSTR,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11HullShader,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11HullShader,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11HullShader,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11HullShader.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState,Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11BlendState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState,Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState,Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState,Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Asynchronous.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Query,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Query,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Query,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Query,Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Query.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Predicate,Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Predicate.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Counter,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Counter,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Counter,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Direct3D11.ID3D11Counter,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Counter.GetDesc(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11CommandList,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11CommandList,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11CommandList,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11CommandList.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.VSSetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.PSSetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.PSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11PixelShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.PSSetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.VSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11VertexShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.PSSetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetVertexBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[],System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[],System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GSSetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.VSSetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.VSSetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GSSetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GSSetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetRenderTargets(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetRenderTargetsAndUnorderedAccessViews(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[],System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetRenderTargetsAndUnorderedAccessViews(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[],System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11BlendState,System.Nullable{System.Single},System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMSetBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11BlendState,System.Single*,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SOSetTargets(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[],System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SOSetTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[],System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetViewports(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetScissorRects(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopySubresourceRegion(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_BOX})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CopySubresourceRegion(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_BOX*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.UpdateSubresource(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_BOX},System.Void*,System.UInt32,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.UpdateSubresource(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.UInt32,Windows.Win32.Graphics.Direct3D11.D3D11_BOX*,System.Void*,System.UInt32,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView,System.Single@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView,System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView,System.Single@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView,System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.HSSetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.HSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11HullShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11HullShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.HSSetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.HSSetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DSSetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11DomainShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DSSetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DSSetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CSSetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CSSetUnorderedAccessViews(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[],System.ReadOnlySpan{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetUnorderedAccessViews(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[],System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetShader(Windows.Win32.Graphics.Direct3D11.ID3D11ComputeShader,Windows.Win32.Graphics.Direct3D11.ID3D11ClassInstance[],System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CSSetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CSSetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSSetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.VSGetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.PSGetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.PSGetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.PSGetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.PSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IAGetVertexBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[],System.Span{System.UInt32},System.Span{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[],System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GSGetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IAGetPrimitiveTopology(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.IAGetPrimitiveTopology(Windows.Win32.Graphics.Direct3D.D3D_PRIMITIVE_TOPOLOGY*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.VSGetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.VSGetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.VSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GSGetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GSGetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.GSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMGetRenderTargets(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMGetRenderTargetsAndUnorderedAccessViews(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView@,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.OMGetRenderTargetsAndUnorderedAccessViews(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView[],Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView@,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SOGetTargets(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.SOGetTargets(System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSGetViewports(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32@,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetViewports(System.UInt32*,Windows.Win32.Graphics.Direct3D11.D3D11_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSGetScissorRects(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32@,Windows.Win32.Foundation.RECT*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.RSGetScissorRects(System.UInt32*,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.HSGetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.HSGetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.HSGetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.HSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DSGetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DSGetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DSGetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.DSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CSGetShaderResources(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetShaderResources(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CSGetUnorderedAccessViews(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetUnorderedAccessViews(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CSGetSamplers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetSamplers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CSGetConstantBuffers(Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext.CSGetConstantBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateBuffer(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Buffer@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateBuffer(Windows.Win32.Graphics.Direct3D11.D3D11_BUFFER_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Buffer@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateTexture1D(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture1D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE1D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture1D@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateTexture2D(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture2D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE2D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture2D@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateTexture3D(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC@,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA},Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateTexture3D(Windows.Win32.Graphics.Direct3D11.D3D11_TEXTURE3D_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_SUBRESOURCE_DATA*,Windows.Win32.Graphics.Direct3D11.ID3D11Texture3D@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,Windows.Win32.Graphics.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11ShaderResourceView@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,Windows.Win32.Graphics.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11UnorderedAccessView@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,Windows.Win32.Graphics.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11RenderTargetView@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.ID3D11Resource,System.Nullable{Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D11.ID3D11Resource,Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilView@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateInputLayout(Windows.Win32.Graphics.Direct3D11.ID3D11Device,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC},System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateInputLayout(Windows.Win32.Graphics.Direct3D11.D3D11_INPUT_ELEMENT_DESC*,System.UInt32,System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.ID3D11InputLayout@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateGeometryShaderWithStreamOutput(Windows.Win32.Graphics.Direct3D11.ID3D11Device,System.Void*,System.UIntPtr,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY},System.ReadOnlySpan{System.UInt32},System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateGeometryShaderWithStreamOutput(System.Void*,System.UIntPtr,Windows.Win32.Graphics.Direct3D11.D3D11_SO_DECLARATION_ENTRY*,System.UInt32,System.UInt32*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11ClassLinkage,Windows.Win32.Graphics.Direct3D11.ID3D11GeometryShader@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateBlendState(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11BlendState@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateBlendState(Windows.Win32.Graphics.Direct3D11.D3D11_BLEND_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11BlendState@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilState(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateDepthStencilState(Windows.Win32.Graphics.Direct3D11.D3D11_DEPTH_STENCIL_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11DepthStencilState@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRasterizerState(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateRasterizerState(Windows.Win32.Graphics.Direct3D11.D3D11_RASTERIZER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11RasterizerState@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSamplerState(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateSamplerState(Windows.Win32.Graphics.Direct3D11.D3D11_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11SamplerState@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateQuery(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11Query@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateQuery(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Query@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePredicate(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11Predicate@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreatePredicate(Windows.Win32.Graphics.Direct3D11.D3D11_QUERY_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Predicate@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCounter(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC@,Windows.Win32.Graphics.Direct3D11.ID3D11Counter@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CreateCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*,Windows.Win32.Graphics.Direct3D11.ID3D11Counter@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedResource(Windows.Win32.Graphics.Direct3D11.ID3D11Device,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.OpenSharedResource(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckFormatSupport(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckFormatSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckMultisampleQualityLevels(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckMultisampleQualityLevels(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckCounterInfo(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckCounterInfo(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_INFO*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckCounter(Windows.Win32.Graphics.Direct3D11.ID3D11Device,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC@,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE@,System.UInt32@,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.CheckCounter(Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_DESC*,Windows.Win32.Graphics.Direct3D11.D3D11_COUNTER_TYPE*,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*,Windows.Win32.Foundation.PSTR,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Device,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D11.ID3D11Device,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D11.ID3D11Device,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D11.ID3D11Device.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISwapChain,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGISwapChain,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISwapChain,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGISwapChain,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Dxgi.IDXGISwapChain,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetBuffer(Windows.Win32.Graphics.Dxgi.IDXGISwapChain,System.UInt32,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetBuffer(System.UInt32,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGISwapChain,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResizeTarget(Windows.Win32.Graphics.Dxgi.IDXGISwapChain,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.ResizeTarget(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGISwapChain,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetLastPresentCount(Windows.Win32.Graphics.Dxgi.IDXGISwapChain,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain.GetLastPresentCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIFactory,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIFactory,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetWindowAssociation(Windows.Win32.Graphics.Dxgi.IDXGIFactory,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.GetWindowAssociation(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChain(Windows.Win32.Graphics.Dxgi.IDXGIFactory,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.CreateSwapChain(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSoftwareAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory.CreateSoftwareAdapter(Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIAdapter1,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter1.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIAdapter1,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter1.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIAdapter1,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter1.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIAdapter1,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter1.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIAdapter1,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter1.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckInterfaceSupport(Windows.Win32.Graphics.Dxgi.IDXGIAdapter1,System.Guid@,System.Int64@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter1.CheckInterfaceSupport(System.Guid*,System.Int64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc1(Windows.Win32.Graphics.Dxgi.IDXGIAdapter1,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter1.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory1,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory1.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIFactory1,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory1.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory1,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory1.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIFactory1,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory1.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetWindowAssociation(Windows.Win32.Graphics.Dxgi.IDXGIFactory1,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory1.GetWindowAssociation(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChain(Windows.Win32.Graphics.Dxgi.IDXGIFactory1,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory1.CreateSwapChain(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSoftwareAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory1,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory1.CreateSoftwareAdapter(Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetBuffer(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,System.UInt32,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetBuffer(System.UInt32,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResizeTarget(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.ResizeTarget(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetLastPresentCount(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetLastPresentCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc1(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFullscreenDesc(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetFullscreenDesc(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetHwnd(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetHwnd(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCoreWindow(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetCoreWindow(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Present1(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.Present1(System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetBackgroundColor(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,Windows.Win32.Graphics.Dxgi.DXGI_RGBA@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.SetBackgroundColor(Windows.Win32.Graphics.Dxgi.DXGI_RGBA*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetBackgroundColor(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,Windows.Win32.Graphics.Dxgi.DXGI_RGBA@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetBackgroundColor(Windows.Win32.Graphics.Dxgi.DXGI_RGBA*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetRotation(Windows.Win32.Graphics.Dxgi.IDXGISwapChain1,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_ROTATION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain1.GetRotation(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_ROTATION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetWindowAssociation(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.GetWindowAssociation(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChain(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.CreateSwapChain(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSoftwareAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.CreateSoftwareAdapter(Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForHwnd(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,System.Nullable{Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC},Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.CreateSwapChainForHwnd(System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForCoreWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.CreateSwapChainForCoreWindow(System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetSharedResourceAdapterLuid(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.LUID@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.GetSharedResourceAdapterLuid(Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.LUID*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.RegisterStereoStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.RegisterStereoStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.RegisterOcclusionStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.RegisterOcclusionStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForComposition(Windows.Win32.Graphics.Dxgi.IDXGIFactory2,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory2.CreateSwapChainForComposition(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetWindowAssociation(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.GetWindowAssociation(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChain(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.CreateSwapChain(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSoftwareAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.CreateSoftwareAdapter(Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForHwnd(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,System.Nullable{Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC},Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.CreateSwapChainForHwnd(System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForCoreWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.CreateSwapChainForCoreWindow(System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetSharedResourceAdapterLuid(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.LUID@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.GetSharedResourceAdapterLuid(Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.LUID*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.RegisterStereoStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.RegisterStereoStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.RegisterOcclusionStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.RegisterOcclusionStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForComposition(Windows.Win32.Graphics.Dxgi.IDXGIFactory3,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory3.CreateSwapChainForComposition(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetWindowAssociation(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.GetWindowAssociation(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChain(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.CreateSwapChain(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSoftwareAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.CreateSoftwareAdapter(Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForHwnd(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,System.Nullable{Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC},Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.CreateSwapChainForHwnd(System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForCoreWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.CreateSwapChainForCoreWindow(System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetSharedResourceAdapterLuid(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.LUID@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.GetSharedResourceAdapterLuid(Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.LUID*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.RegisterStereoStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.RegisterStereoStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.RegisterOcclusionStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.RegisterOcclusionStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForComposition(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.CreateSwapChainForComposition(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumAdapterByLuid(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,Windows.Win32.Foundation.LUID,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.EnumAdapterByLuid(Windows.Win32.Foundation.LUID,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumWarpAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory4,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory4.EnumWarpAdapter(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetWindowAssociation(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.GetWindowAssociation(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChain(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.CreateSwapChain(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSoftwareAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.CreateSoftwareAdapter(Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForHwnd(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,System.Nullable{Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC},Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.CreateSwapChainForHwnd(System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForCoreWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.CreateSwapChainForCoreWindow(System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetSharedResourceAdapterLuid(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.LUID@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.GetSharedResourceAdapterLuid(Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.LUID*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.RegisterStereoStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.RegisterStereoStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.RegisterOcclusionStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.RegisterOcclusionStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForComposition(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.CreateSwapChainForComposition(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumAdapterByLuid(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,Windows.Win32.Foundation.LUID,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.EnumAdapterByLuid(Windows.Win32.Foundation.LUID,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumWarpAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory5,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory5.EnumWarpAdapter(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetWindowAssociation(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.GetWindowAssociation(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChain(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.CreateSwapChain(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSoftwareAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.CreateSoftwareAdapter(Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForHwnd(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,System.Nullable{Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC},Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.CreateSwapChainForHwnd(System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForCoreWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.CreateSwapChainForCoreWindow(System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetSharedResourceAdapterLuid(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.LUID@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.GetSharedResourceAdapterLuid(Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.LUID*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.RegisterStereoStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.RegisterStereoStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.RegisterOcclusionStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.RegisterOcclusionStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForComposition(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.CreateSwapChainForComposition(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumAdapterByLuid(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,Windows.Win32.Foundation.LUID,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.EnumAdapterByLuid(Windows.Win32.Foundation.LUID,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumWarpAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.EnumWarpAdapter(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumAdapterByGpuPreference(Windows.Win32.Graphics.Dxgi.IDXGIFactory6,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_GPU_PREFERENCE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory6.EnumAdapterByGpuPreference(System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_GPU_PREFERENCE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetWindowAssociation(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.GetWindowAssociation(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChain(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.CreateSwapChain(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSoftwareAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.CreateSoftwareAdapter(Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Dxgi.IDXGIAdapter@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForHwnd(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,System.Nullable{Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC},Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.CreateSwapChainForHwnd(System.Object,Windows.Win32.Foundation.HWND,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForCoreWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.CreateSwapChainForCoreWindow(System.Object,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetSharedResourceAdapterLuid(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.LUID@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.GetSharedResourceAdapterLuid(Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.LUID*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.RegisterStereoStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterStereoStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.RegisterStereoStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusWindow(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.RegisterOcclusionStatusWindow(Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterOcclusionStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.RegisterOcclusionStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSwapChainForComposition(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.CreateSwapChainForComposition(System.Object,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*,Windows.Win32.Graphics.Dxgi.IDXGIOutput,Windows.Win32.Graphics.Dxgi.IDXGISwapChain1@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumAdapterByLuid(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,Windows.Win32.Foundation.LUID,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.EnumAdapterByLuid(Windows.Win32.Foundation.LUID,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumWarpAdapter(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.EnumWarpAdapter(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumAdapterByGpuPreference(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_GPU_PREFERENCE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.EnumAdapterByGpuPreference(System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_GPU_PREFERENCE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterAdaptersChangedEvent(Windows.Win32.Graphics.Dxgi.IDXGIFactory7,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIFactory7.RegisterAdaptersChangedEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIAdapter2,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter2.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIAdapter2,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter2.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIAdapter2,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter2.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIAdapter2,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter2.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIAdapter2,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter2.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckInterfaceSupport(Windows.Win32.Graphics.Dxgi.IDXGIAdapter2,System.Guid@,System.Int64@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter2.CheckInterfaceSupport(System.Guid*,System.Int64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc1(Windows.Win32.Graphics.Dxgi.IDXGIAdapter2,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter2.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc2(Windows.Win32.Graphics.Dxgi.IDXGIAdapter2,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter2.GetDesc2(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIAdapter3,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIAdapter3,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIAdapter3,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIAdapter3,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIAdapter3,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckInterfaceSupport(Windows.Win32.Graphics.Dxgi.IDXGIAdapter3,System.Guid@,System.Int64@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.CheckInterfaceSupport(System.Guid*,System.Int64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc1(Windows.Win32.Graphics.Dxgi.IDXGIAdapter3,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc2(Windows.Win32.Graphics.Dxgi.IDXGIAdapter3,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.GetDesc2(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterHardwareContentProtectionTeardownStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIAdapter3,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.RegisterHardwareContentProtectionTeardownStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.QueryVideoMemoryInfo(Windows.Win32.Graphics.Dxgi.IDXGIAdapter3,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_MEMORY_SEGMENT_GROUP,Windows.Win32.Graphics.Dxgi.DXGI_QUERY_VIDEO_MEMORY_INFO@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.QueryVideoMemoryInfo(System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_MEMORY_SEGMENT_GROUP,Windows.Win32.Graphics.Dxgi.DXGI_QUERY_VIDEO_MEMORY_INFO*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterVideoMemoryBudgetChangeNotificationEvent(Windows.Win32.Graphics.Dxgi.IDXGIAdapter3,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter3.RegisterVideoMemoryBudgetChangeNotificationEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckInterfaceSupport(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,System.Guid@,System.Int64@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.CheckInterfaceSupport(System.Guid*,System.Int64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc1(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc2(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.GetDesc2(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC2*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterHardwareContentProtectionTeardownStatusEvent(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.RegisterHardwareContentProtectionTeardownStatusEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.QueryVideoMemoryInfo(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_MEMORY_SEGMENT_GROUP,Windows.Win32.Graphics.Dxgi.DXGI_QUERY_VIDEO_MEMORY_INFO@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.QueryVideoMemoryInfo(System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_MEMORY_SEGMENT_GROUP,Windows.Win32.Graphics.Dxgi.DXGI_QUERY_VIDEO_MEMORY_INFO*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RegisterVideoMemoryBudgetChangeNotificationEvent(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,System.Runtime.InteropServices.SafeHandle,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.RegisterVideoMemoryBudgetChangeNotificationEvent(Windows.Win32.Foundation.HANDLE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc3(Windows.Win32.Graphics.Dxgi.IDXGIAdapter4,Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIAdapter4.GetDesc3(Windows.Win32.Graphics.Dxgi.DXGI_ADAPTER_DESC3*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIResource,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIResource,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIResource,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIResource,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Dxgi.IDXGIResource,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetSharedHandle(Windows.Win32.Graphics.Dxgi.IDXGIResource,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.GetSharedHandle(Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetUsage(Windows.Win32.Graphics.Dxgi.IDXGIResource,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.GetUsage(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetEvictionPriority(Windows.Win32.Graphics.Dxgi.IDXGIResource,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIResource.GetEvictionPriority(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication,Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AcquireNextFrame(Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO@,Windows.Win32.Graphics.Dxgi.IDXGIResource@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.AcquireNextFrame(System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_FRAME_INFO*,Windows.Win32.Graphics.Dxgi.IDXGIResource@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameDirtyRects(Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication,System.UInt32,Windows.Win32.Foundation.RECT@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.GetFrameDirtyRects(System.UInt32,Windows.Win32.Foundation.RECT*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameMoveRects(Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_MOVE_RECT@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.GetFrameMoveRects(System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_MOVE_RECT*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFramePointerShape(Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication,System.UInt32,System.Void*,System.UInt32@,Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_SHAPE_INFO@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.GetFramePointerShape(System.UInt32,System.Void*,System.UInt32*,Windows.Win32.Graphics.Dxgi.DXGI_OUTDUPL_POINTER_SHAPE_INFO*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.MapDesktopSurface(Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication,Windows.Win32.Graphics.Dxgi.DXGI_MAPPED_RECT@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication.MapDesktopSurface(Windows.Win32.Graphics.Dxgi.DXGI_MAPPED_RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.SetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.GetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.IDXGIOutput1,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput1.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.SetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.GetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.IDXGIOutput2,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput2.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.SetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.GetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckOverlaySupport(Windows.Win32.Graphics.Dxgi.IDXGIOutput3,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.Object,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput3.CheckOverlaySupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.Object,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.SetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.GetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckOverlaySupport(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.Object,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.CheckOverlaySupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.Object,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckOverlayColorSpaceSupport(Windows.Win32.Graphics.Dxgi.IDXGIOutput4,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.Object,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput4.CheckOverlayColorSpaceSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.Object,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.SetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.GetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckOverlaySupport(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.Object,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.CheckOverlaySupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.Object,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckOverlayColorSpaceSupport(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.Object,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.CheckOverlayColorSpaceSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.Object,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DuplicateOutput1(Windows.Win32.Graphics.Dxgi.IDXGIOutput5,System.Object,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT},Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput5.DuplicateOutput1(System.Object,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT*,Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.GetDisplayModeList(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.FindClosestMatchingMode(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.GetGammaControlCapabilities(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL_CAPABILITIES*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.SetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetGammaControl(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.GetGammaControl(Windows.Win32.Graphics.Dxgi.Common.DXGI_GAMMA_CONTROL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.GetDisplayModeList1(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.FindClosestMatchingMode1(Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,Windows.Win32.Graphics.Dxgi.DXGI_MODE_DESC1*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckOverlaySupport(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.Object,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.CheckOverlaySupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.Object,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckOverlayColorSpaceSupport(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.Object,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.CheckOverlayColorSpaceSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.Object,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DuplicateOutput1(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,System.Object,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT},Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.DuplicateOutput1(System.Object,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT*,Windows.Win32.Graphics.Dxgi.IDXGIOutputDuplication@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc1(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_OUTPUT_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckHardwareCompositionSupport(Windows.Win32.Graphics.Dxgi.IDXGIOutput6,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGIOutput6.CheckHardwareCompositionSupport(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Object,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Object.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Object,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Object.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Object,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Object.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Object,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Object.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Pageable,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Pageable.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Pageable,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Pageable.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Pageable,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Pageable.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Pageable,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Pageable.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12Pageable,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Pageable.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Map(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RANGE},System.Void**)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.Map(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RANGE*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Unmap(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RANGE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.Unmap(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RANGE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.WriteToSubresource(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_BOX},System.Void*,System.UInt32,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.WriteToSubresource(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*,System.Void*,System.UInt32,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ReadFromSubresource(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Void*,System.UInt32,System.UInt32,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_BOX})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Resource.ReadFromSubresource(System.Void*,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Heap.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Heap.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Heap.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Heap.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Heap.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateCommandList(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateRootSignature(System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSampler(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateSampler(Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyDescriptors(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CopyDescriptors(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.GetResourceAllocationInfo(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateHeap(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Nullable{Windows.Win32.Security.SECURITY_ATTRIBUTES},System.UInt32,System.String,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,Windows.Win32.Security.SECURITY_ATTRIBUTES*,System.UInt32,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.OpenSharedHandle(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandleByName(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.String,System.UInt32,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.OpenSharedHandleByName(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.MakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.MakeResident(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Evict(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.Evict(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateFence(Windows.Win32.Graphics.Direct3D12.ID3D12Device,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateFence(System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Fence.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Fence.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Fence.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Fence.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Fence.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetEventOnCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Fence.SetEventOnCompletion(System.UInt64,Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateCommandList(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateRootSignature(System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSampler(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateSampler(Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyDescriptors(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CopyDescriptors(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.GetResourceAllocationInfo(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateHeap(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Nullable{Windows.Win32.Security.SECURITY_ATTRIBUTES},System.UInt32,System.String,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,Windows.Win32.Security.SECURITY_ATTRIBUTES*,System.UInt32,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.OpenSharedHandle(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandleByName(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.String,System.UInt32,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.OpenSharedHandleByName(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.MakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.MakeResident(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Evict(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.Evict(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateFence(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateFence(System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineLibrary(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.CreatePipelineLibrary(System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.ReadOnlySpan{System.UInt64},Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.UInt64*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetResidencyPriority(Windows.Win32.Graphics.Direct3D12.ID3D12Device1,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device1.SetResidencyPriority(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateCommandList(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateRootSignature(System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSampler(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateSampler(Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyDescriptors(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CopyDescriptors(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.GetResourceAllocationInfo(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateHeap(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Nullable{Windows.Win32.Security.SECURITY_ATTRIBUTES},System.UInt32,System.String,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,Windows.Win32.Security.SECURITY_ATTRIBUTES*,System.UInt32,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.OpenSharedHandle(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandleByName(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.String,System.UInt32,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.OpenSharedHandleByName(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.MakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.MakeResident(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Evict(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.Evict(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateFence(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateFence(System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineLibrary(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreatePipelineLibrary(System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.ReadOnlySpan{System.UInt64},Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.UInt64*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetResidencyPriority(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.SetResidencyPriority(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device2,Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device2.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateCommandList(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateRootSignature(System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSampler(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateSampler(Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyDescriptors(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CopyDescriptors(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.GetResourceAllocationInfo(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateHeap(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Nullable{Windows.Win32.Security.SECURITY_ATTRIBUTES},System.UInt32,System.String,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,Windows.Win32.Security.SECURITY_ATTRIBUTES*,System.UInt32,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.OpenSharedHandle(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandleByName(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.String,System.UInt32,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.OpenSharedHandleByName(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.MakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.MakeResident(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Evict(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.Evict(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateFence(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateFence(System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineLibrary(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreatePipelineLibrary(System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.ReadOnlySpan{System.UInt64},Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.UInt64*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetResidencyPriority(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.SetResidencyPriority(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromAddress(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.Void*,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.OpenExistingHeapFromAddress(System.Void*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromFileMapping(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.OpenExistingHeapFromFileMapping(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device3,Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device3.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetStatusFence(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedSession.GetStatusFence(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetStatusFence(Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession.GetStatusFence(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateCommandList(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateRootSignature(System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSampler(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateSampler(Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyDescriptors(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CopyDescriptors(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.GetResourceAllocationInfo(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateHeap(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Nullable{Windows.Win32.Security.SECURITY_ATTRIBUTES},System.UInt32,System.String,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,Windows.Win32.Security.SECURITY_ATTRIBUTES*,System.UInt32,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.OpenSharedHandle(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandleByName(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.String,System.UInt32,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.OpenSharedHandleByName(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.MakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.MakeResident(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Evict(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.Evict(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateFence(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateFence(System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineLibrary(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreatePipelineLibrary(System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.ReadOnlySpan{System.UInt64},Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.UInt64*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetResidencyPriority(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.SetResidencyPriority(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromAddress(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.Void*,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.OpenExistingHeapFromAddress(System.Void*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromFileMapping(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.OpenExistingHeapFromFileMapping(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList1(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateCommandList1(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap1(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateHeap1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo1(Windows.Win32.Graphics.Direct3D12.ID3D12Device4,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC},System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device4.GetResourceAllocationInfo1(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateCommandList(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateRootSignature(System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSampler(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateSampler(Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyDescriptors(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CopyDescriptors(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.GetResourceAllocationInfo(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateHeap(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Nullable{Windows.Win32.Security.SECURITY_ATTRIBUTES},System.UInt32,System.String,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,Windows.Win32.Security.SECURITY_ATTRIBUTES*,System.UInt32,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.OpenSharedHandle(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandleByName(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.String,System.UInt32,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.OpenSharedHandleByName(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.MakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.MakeResident(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Evict(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.Evict(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateFence(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateFence(System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineLibrary(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreatePipelineLibrary(System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.ReadOnlySpan{System.UInt64},Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.UInt64*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetResidencyPriority(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.SetResidencyPriority(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromAddress(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.Void*,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.OpenExistingHeapFromAddress(System.Void*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromFileMapping(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.OpenExistingHeapFromFileMapping(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList1(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateCommandList1(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap1(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateHeap1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo1(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC},System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.GetResourceAllocationInfo1(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateLifetimeTracker(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.ID3D12LifetimeOwner,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateLifetimeTracker(Windows.Win32.Graphics.Direct3D12.ID3D12LifetimeOwner,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumerateMetaCommands(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.UInt32@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.EnumerateMetaCommands(System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumerateMetaCommandParameters(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.Guid@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32*,System.UInt32@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.EnumerateMetaCommandParameters(System.Guid*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateMetaCommand(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,System.Guid@,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateMetaCommand(System.Guid*,System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateStateObject(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CreateStateObject(Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetRaytracingAccelerationStructurePrebuildInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS@,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.GetRaytracingAccelerationStructurePrebuildInfo(Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckDriverMatchingIdentifier(Windows.Win32.Graphics.Direct3D12.ID3D12Device5,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device5.CheckDriverMatchingIdentifier(Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateCommandList(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateRootSignature(System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSampler(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateSampler(Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyDescriptors(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CopyDescriptors(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.GetResourceAllocationInfo(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateHeap(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Nullable{Windows.Win32.Security.SECURITY_ATTRIBUTES},System.UInt32,System.String,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,Windows.Win32.Security.SECURITY_ATTRIBUTES*,System.UInt32,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.OpenSharedHandle(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandleByName(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.String,System.UInt32,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.OpenSharedHandleByName(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.MakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.MakeResident(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Evict(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.Evict(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateFence(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateFence(System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineLibrary(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreatePipelineLibrary(System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.ReadOnlySpan{System.UInt64},Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.UInt64*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetResidencyPriority(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.SetResidencyPriority(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromAddress(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.Void*,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.OpenExistingHeapFromAddress(System.Void*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromFileMapping(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.OpenExistingHeapFromFileMapping(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList1(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateCommandList1(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap1(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateHeap1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo1(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC},System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.GetResourceAllocationInfo1(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateLifetimeTracker(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.ID3D12LifetimeOwner,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateLifetimeTracker(Windows.Win32.Graphics.Direct3D12.ID3D12LifetimeOwner,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumerateMetaCommands(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.UInt32@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.EnumerateMetaCommands(System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumerateMetaCommandParameters(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.Guid@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32*,System.UInt32@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.EnumerateMetaCommandParameters(System.Guid*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateMetaCommand(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,System.Guid@,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateMetaCommand(System.Guid*,System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateStateObject(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CreateStateObject(Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetRaytracingAccelerationStructurePrebuildInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS@,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.GetRaytracingAccelerationStructurePrebuildInfo(Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckDriverMatchingIdentifier(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.CheckDriverMatchingIdentifier(Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetBackgroundProcessingMode(Windows.Win32.Graphics.Direct3D12.ID3D12Device6,Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE,Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.BOOL*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device6.SetBackgroundProcessingMode(Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE,Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION,Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12StateObject,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12StateObject.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12StateObject,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12StateObject.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12StateObject,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12StateObject.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12StateObject,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12StateObject.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12StateObject,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12StateObject.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateCommandList(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateRootSignature(System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSampler(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateSampler(Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyDescriptors(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CopyDescriptors(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.GetResourceAllocationInfo(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateHeap(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Nullable{Windows.Win32.Security.SECURITY_ATTRIBUTES},System.UInt32,System.String,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,Windows.Win32.Security.SECURITY_ATTRIBUTES*,System.UInt32,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.OpenSharedHandle(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandleByName(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.String,System.UInt32,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.OpenSharedHandleByName(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.MakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.MakeResident(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Evict(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.Evict(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateFence(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateFence(System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineLibrary(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreatePipelineLibrary(System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.ReadOnlySpan{System.UInt64},Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.UInt64*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetResidencyPriority(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.SetResidencyPriority(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromAddress(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.Void*,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.OpenExistingHeapFromAddress(System.Void*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromFileMapping(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.OpenExistingHeapFromFileMapping(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList1(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateCommandList1(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap1(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateHeap1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo1(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC},System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.GetResourceAllocationInfo1(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateLifetimeTracker(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.ID3D12LifetimeOwner,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateLifetimeTracker(Windows.Win32.Graphics.Direct3D12.ID3D12LifetimeOwner,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumerateMetaCommands(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.UInt32@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.EnumerateMetaCommands(System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumerateMetaCommandParameters(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.Guid@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32*,System.UInt32@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.EnumerateMetaCommandParameters(System.Guid*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateMetaCommand(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,System.Guid@,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateMetaCommand(System.Guid*,System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateStateObject(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateStateObject(Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetRaytracingAccelerationStructurePrebuildInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS@,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.GetRaytracingAccelerationStructurePrebuildInfo(Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckDriverMatchingIdentifier(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CheckDriverMatchingIdentifier(Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetBackgroundProcessingMode(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE,Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.BOOL*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.SetBackgroundProcessingMode(Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE,Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION,Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AddToStateObject(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12StateObject,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.AddToStateObject(Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12StateObject,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateProtectedResourceSession1(Windows.Win32.Graphics.Direct3D12.ID3D12Device7,Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC1@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device7.CreateProtectedResourceSession1(Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC1*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateCommandList(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateRootSignature(System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSampler(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateSampler(Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyDescriptors(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CopyDescriptors(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.GetResourceAllocationInfo(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateHeap(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Nullable{Windows.Win32.Security.SECURITY_ATTRIBUTES},System.UInt32,System.String,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,Windows.Win32.Security.SECURITY_ATTRIBUTES*,System.UInt32,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.OpenSharedHandle(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandleByName(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.String,System.UInt32,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.OpenSharedHandleByName(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.MakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.MakeResident(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Evict(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.Evict(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateFence(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateFence(System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineLibrary(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreatePipelineLibrary(System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.ReadOnlySpan{System.UInt64},Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.UInt64*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetResidencyPriority(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.SetResidencyPriority(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromAddress(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.Void*,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.OpenExistingHeapFromAddress(System.Void*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromFileMapping(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.OpenExistingHeapFromFileMapping(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList1(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateCommandList1(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap1(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateHeap1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo1(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC},System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.GetResourceAllocationInfo1(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateLifetimeTracker(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12LifetimeOwner,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateLifetimeTracker(Windows.Win32.Graphics.Direct3D12.ID3D12LifetimeOwner,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumerateMetaCommands(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.UInt32@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.EnumerateMetaCommands(System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumerateMetaCommandParameters(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.Guid@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32*,System.UInt32@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.EnumerateMetaCommandParameters(System.Guid*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateMetaCommand(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.Guid@,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateMetaCommand(System.Guid*,System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateStateObject(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateStateObject(Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetRaytracingAccelerationStructurePrebuildInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS@,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.GetRaytracingAccelerationStructurePrebuildInfo(Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckDriverMatchingIdentifier(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CheckDriverMatchingIdentifier(Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetBackgroundProcessingMode(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE,Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.BOOL*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.SetBackgroundProcessingMode(Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE,Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION,Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AddToStateObject(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12StateObject,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.AddToStateObject(Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12StateObject,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateProtectedResourceSession1(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC1@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateProtectedResourceSession1(Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC1*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo2(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1},System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.GetResourceAllocationInfo2(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource2(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreateCommittedResource2(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.CreatePlacedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints1(Windows.Win32.Graphics.Direct3D12.ID3D12Device8,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device8.GetCopyableFootprints1(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateCommandQueue(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateCommandAllocator(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateGraphicsPipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_GRAPHICS_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateComputePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_COMPUTE_PIPELINE_STATE_DESC@,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateCommandList(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.ID3D12CommandAllocator,Windows.Win32.Graphics.Direct3D12.ID3D12PipelineState,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateDescriptorHeap(Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRootSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateRootSignature(System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateConstantBufferView(Windows.Win32.Graphics.Direct3D12.D3D12_CONSTANT_BUFFER_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateShaderResourceView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_RESOURCE_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateUnorderedAccessView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_UNORDERED_ACCESS_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_TARGET_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DEPTH_STENCIL_VIEW_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSampler(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateSampler(Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLER_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyDescriptors(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},System.ReadOnlySpan{System.UInt32},Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CopyDescriptors(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_DESCRIPTOR_HEAP_TYPE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.GetResourceAllocationInfo(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateCommittedResource(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateHeap(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreatePlacedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateReservedResource(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,System.Nullable{Windows.Win32.Security.SECURITY_ATTRIBUTES},System.UInt32,System.String,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12DeviceChild,Windows.Win32.Security.SECURITY_ATTRIBUTES*,System.UInt32,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandle(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.OpenSharedHandle(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenSharedHandleByName(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.String,System.UInt32,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.OpenSharedHandleByName(Windows.Win32.Foundation.PCWSTR,System.UInt32,Windows.Win32.Foundation.HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.MakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.MakeResident(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Evict(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.Evict(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateFence(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateFence(System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_FENCE_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.GetCopyableFootprints(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateQueryHeap(Windows.Win32.Graphics.Direct3D12.D3D12_QUERY_HEAP_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateCommandSignature(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12RootSignature,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineLibrary(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreatePipelineLibrary(System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.ReadOnlySpan{System.UInt64},Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,System.Runtime.InteropServices.SafeHandle)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.SetEventOnMultipleFenceCompletion(Windows.Win32.Graphics.Direct3D12.ID3D12Fence[],System.UInt64*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_MULTIPLE_FENCE_WAIT_FLAGS,Windows.Win32.Foundation.HANDLE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetResidencyPriority(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.SetResidencyPriority(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_PRIORITY*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreatePipelineState(Windows.Win32.Graphics.Direct3D12.D3D12_PIPELINE_STATE_STREAM_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromAddress(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.Void*,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.OpenExistingHeapFromAddress(System.Void*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OpenExistingHeapFromFileMapping(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.Runtime.InteropServices.SafeHandle,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.OpenExistingHeapFromFileMapping(Windows.Win32.Foundation.HANDLE,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.EnqueueMakeResident(Windows.Win32.Graphics.Direct3D12.D3D12_RESIDENCY_FLAGS,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Pageable[],Windows.Win32.Graphics.Direct3D12.ID3D12Fence,System.UInt64)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandList1(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateCommandList1(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_LIST_FLAGS,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateProtectedResourceSession(Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateCommittedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateHeap1(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateHeap1(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateReservedResource1(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo1(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC},System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.GetResourceAllocationInfo1(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateLifetimeTracker(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12LifetimeOwner,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateLifetimeTracker(Windows.Win32.Graphics.Direct3D12.ID3D12LifetimeOwner,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumerateMetaCommands(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.UInt32@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.EnumerateMetaCommands(System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EnumerateMetaCommandParameters(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.Guid@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32*,System.UInt32@,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.EnumerateMetaCommandParameters(System.Guid*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_STAGE,System.UInt32*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_META_COMMAND_PARAMETER_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateMetaCommand(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.Guid@,System.UInt32,System.Void*,System.UIntPtr,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateMetaCommand(System.Guid*,System.UInt32,System.Void*,System.UIntPtr,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateStateObject(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateStateObject(Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetRaytracingAccelerationStructurePrebuildInfo(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS@,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.GetRaytracingAccelerationStructurePrebuildInfo(Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS*,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckDriverMatchingIdentifier(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CheckDriverMatchingIdentifier(Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_TYPE,Windows.Win32.Graphics.Direct3D12.D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetBackgroundProcessingMode(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE,Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Foundation.BOOL*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.SetBackgroundProcessingMode(Windows.Win32.Graphics.Direct3D12.D3D12_BACKGROUND_PROCESSING_MODE,Windows.Win32.Graphics.Direct3D12.D3D12_MEASUREMENTS_ACTION,Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.BOOL*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AddToStateObject(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC@,Windows.Win32.Graphics.Direct3D12.ID3D12StateObject,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.AddToStateObject(Windows.Win32.Graphics.Direct3D12.D3D12_STATE_OBJECT_DESC*,Windows.Win32.Graphics.Direct3D12.ID3D12StateObject,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateProtectedResourceSession1(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC1@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateProtectedResourceSession1(Windows.Win32.Graphics.Direct3D12.D3D12_PROTECTED_RESOURCE_SESSION_DESC1*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetResourceAllocationInfo2(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1},System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.GetResourceAllocationInfo2(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_ALLOCATION_INFO1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommittedResource2(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES@,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateCommittedResource2(Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_PROPERTIES*,Windows.Win32.Graphics.Direct3D12.D3D12_HEAP_FLAGS,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,Windows.Win32.Graphics.Direct3D12.ID3D12ProtectedResourceSession,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreatePlacedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1@,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE},System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreatePlacedResource1(Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1*,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_STATES,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_VALUE*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCopyableFootprints1(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1@,System.UInt32,System.UInt64,System.Span{Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT},System.Span{System.UInt32},System.Span{System.UInt64},System.UInt64*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.GetCopyableFootprints1(Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_DESC1*,System.UInt32,System.UInt32,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_PLACED_SUBRESOURCE_FOOTPRINT*,System.UInt32*,System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateShaderCacheSession(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_CACHE_SESSION_DESC@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateShaderCacheSession(Windows.Win32.Graphics.Direct3D12.D3D12_SHADER_CACHE_SESSION_DESC*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CreateCommandQueue1(Windows.Win32.Graphics.Direct3D12.ID3D12Device9,Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC@,System.Guid@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12Device9.CreateCommandQueue1(Windows.Win32.Graphics.Direct3D12.D3D12_COMMAND_QUEUE_DESC*,System.Guid*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12CommandList,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandList.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12CommandList,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandList.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12CommandList,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandList.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12CommandList,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandList.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12CommandList,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandList.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.UpdateTileMappings(Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE},Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_TILE_RANGE_FLAGS},System.ReadOnlySpan{System.UInt32},System.ReadOnlySpan{System.UInt32},Windows.Win32.Graphics.Direct3D12.D3D12_TILE_MAPPING_FLAGS)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.UpdateTileMappings(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE*,Windows.Win32.Graphics.Direct3D12.ID3D12Heap,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_RANGE_FLAGS*,System.UInt32*,System.UInt32*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_MAPPING_FLAGS)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTileMappings(Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE@,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE@,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE@,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_MAPPING_FLAGS)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.CopyTileMappings(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_MAPPING_FLAGS)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ExecuteCommandLists(Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue,Windows.Win32.Graphics.Direct3D12.ID3D12CommandList[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.ExecuteCommandLists(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12CommandList[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetTimestampFrequency(Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.GetTimestampFrequency(System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetClockCalibration(Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue,System.UInt64@,System.UInt64@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandQueue.GetClockCalibration(System.UInt64*,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12QueryHeap.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12CommandSignature,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandSignature.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12CommandSignature,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandSignature.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12CommandSignature,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandSignature.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12CommandSignature,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandSignature.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12CommandSignature,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12CommandSignature.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_BOX})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE@,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE@,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE*,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetViewports(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetScissorRects(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetBlendFactor(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.ReadOnlySpan{System.Single})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.OMSetBlendFactor(System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResourceBarrier(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ResourceBarrier(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetDescriptorHeaps(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SetDescriptorHeaps(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetVertexBuffers(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SOSetTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.SOSetTargets(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetRenderTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},Windows.Win32.Foundation.BOOL,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.OMSetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,Windows.Win32.Foundation.BOOL,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_BOX})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE@,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE@,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE*,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetViewports(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetScissorRects(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetBlendFactor(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.ReadOnlySpan{System.Single})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.OMSetBlendFactor(System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResourceBarrier(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.ResourceBarrier(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetDescriptorHeaps(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.SetDescriptorHeaps(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetVertexBuffers(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SOSetTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.SOSetTargets(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetRenderTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},Windows.Win32.Foundation.BOOL,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.OMSetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,Windows.Win32.Foundation.BOOL,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AtomicCopyBufferUINT(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.AtomicCopyBufferUINT(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AtomicCopyBufferUINT64(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.AtomicCopyBufferUINT64(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetSamplePositions(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.SetSamplePositions(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResolveSubresourceRegion(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.Nullable{Windows.Win32.Foundation.RECT},Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList1.ResolveSubresourceRegion(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,Windows.Win32.Foundation.RECT*,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_BOX})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE@,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE@,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE*,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetViewports(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetScissorRects(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetBlendFactor(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.ReadOnlySpan{System.Single})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.OMSetBlendFactor(System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResourceBarrier(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.ResourceBarrier(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetDescriptorHeaps(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.SetDescriptorHeaps(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetVertexBuffers(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SOSetTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.SOSetTargets(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetRenderTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},Windows.Win32.Foundation.BOOL,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.OMSetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,Windows.Win32.Foundation.BOOL,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AtomicCopyBufferUINT(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.AtomicCopyBufferUINT(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AtomicCopyBufferUINT64(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.AtomicCopyBufferUINT64(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetSamplePositions(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.SetSamplePositions(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResolveSubresourceRegion(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.Nullable{Windows.Win32.Foundation.RECT},Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.ResolveSubresourceRegion(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,Windows.Win32.Foundation.RECT*,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.WriteBufferImmediate(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList2.WriteBufferImmediate(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_BOX})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE@,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE@,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE*,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetViewports(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetScissorRects(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetBlendFactor(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.ReadOnlySpan{System.Single})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.OMSetBlendFactor(System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResourceBarrier(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.ResourceBarrier(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetDescriptorHeaps(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.SetDescriptorHeaps(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetVertexBuffers(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SOSetTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.SOSetTargets(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetRenderTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},Windows.Win32.Foundation.BOOL,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.OMSetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,Windows.Win32.Foundation.BOOL,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AtomicCopyBufferUINT(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.AtomicCopyBufferUINT(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AtomicCopyBufferUINT64(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.AtomicCopyBufferUINT64(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetSamplePositions(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.SetSamplePositions(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResolveSubresourceRegion(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.Nullable{Windows.Win32.Foundation.RECT},Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.ResolveSubresourceRegion(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,Windows.Win32.Foundation.RECT*,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.WriteBufferImmediate(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList3.WriteBufferImmediate(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12MetaCommand.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_BOX})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE@,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE@,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE*,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetViewports(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetScissorRects(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetBlendFactor(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.ReadOnlySpan{System.Single})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.OMSetBlendFactor(System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResourceBarrier(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.ResourceBarrier(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetDescriptorHeaps(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.SetDescriptorHeaps(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetVertexBuffers(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SOSetTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.SOSetTargets(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetRenderTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},Windows.Win32.Foundation.BOOL,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.OMSetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,Windows.Win32.Foundation.BOOL,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AtomicCopyBufferUINT(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.AtomicCopyBufferUINT(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AtomicCopyBufferUINT64(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.AtomicCopyBufferUINT64(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetSamplePositions(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.SetSamplePositions(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResolveSubresourceRegion(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.Nullable{Windows.Win32.Foundation.RECT},Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.ResolveSubresourceRegion(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,Windows.Win32.Foundation.RECT*,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.WriteBufferImmediate(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.WriteBufferImmediate(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.BeginRenderPass(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_RENDER_TARGET_DESC[],System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_FLAGS)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.BeginRenderPass(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_RENDER_TARGET_DESC[],Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_FLAGS)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.BuildRaytracingAccelerationStructure(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC@,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.BuildRaytracingAccelerationStructure(Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EmitRaytracingAccelerationStructurePostbuildInfo(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC@,System.ReadOnlySpan{System.UInt64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.EmitRaytracingAccelerationStructurePostbuildInfo(Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,System.UInt32,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DispatchRays(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4,Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList4.DispatchRays(Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetName(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.String)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.SetName(Windows.Win32.Foundation.PCWSTR)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_BOX})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.CopyTextureRegion(Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_TEXTURE_COPY_LOCATION@,Windows.Win32.Graphics.Direct3D12.D3D12_BOX*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE@,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE@,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.CopyTiles(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_TILED_RESOURCE_COORDINATE*,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_REGION_SIZE*,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.D3D12_TILE_COPY_FLAGS)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetViewports(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.RSSetViewports(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VIEWPORT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetScissorRects(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.RSSetScissorRects(System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetBlendFactor(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.ReadOnlySpan{System.Single})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.OMSetBlendFactor(System.Single*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResourceBarrier(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.ResourceBarrier(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RESOURCE_BARRIER[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetDescriptorHeaps(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.SetDescriptorHeaps(System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12DescriptorHeap[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.IASetIndexBuffer(Windows.Win32.Graphics.Direct3D12.D3D12_INDEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.IASetVertexBuffers(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.IASetVertexBuffers(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_VERTEX_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SOSetTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.SOSetTargets(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_STREAM_OUTPUT_BUFFER_VIEW*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.OMSetRenderTargets(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.UInt32,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE},Windows.Win32.Foundation.BOOL,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.OMSetRenderTargets(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*,Windows.Win32.Foundation.BOOL,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.ClearDepthStencilView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CLEAR_FLAGS,System.Single,System.Byte,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.ClearRenderTargetView(Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.ClearUnorderedAccessViewUint(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single@,System.ReadOnlySpan{Windows.Win32.Foundation.RECT})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.ClearUnorderedAccessViewFloat(Windows.Win32.Graphics.Direct3D12.D3D12_GPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.D3D12_CPU_DESCRIPTOR_HANDLE,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Single*,System.UInt32,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.DiscardResource(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,Windows.Win32.Graphics.Direct3D12.D3D12_DISCARD_REGION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AtomicCopyBufferUINT(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.AtomicCopyBufferUINT(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.AtomicCopyBufferUINT64(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.AtomicCopyBufferUINT64(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt64,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource[],Windows.Win32.Graphics.Direct3D12.D3D12_SUBRESOURCE_RANGE_UINT64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetSamplePositions(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.SetSamplePositions(System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_SAMPLE_POSITION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResolveSubresourceRegion(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.Nullable{Windows.Win32.Foundation.RECT},Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.ResolveSubresourceRegion(Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D12.ID3D12Resource,System.UInt32,Windows.Win32.Foundation.RECT*,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,Windows.Win32.Graphics.Direct3D12.D3D12_RESOLVE_MODE)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.WriteBufferImmediate(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER},System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.WriteBufferImmediate(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_PARAMETER*,Windows.Win32.Graphics.Direct3D12.D3D12_WRITEBUFFERIMMEDIATE_MODE*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.BeginRenderPass(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_RENDER_TARGET_DESC[],System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC},Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_FLAGS)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.BeginRenderPass(System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_RENDER_TARGET_DESC[],Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_DEPTH_STENCIL_DESC@,Windows.Win32.Graphics.Direct3D12.D3D12_RENDER_PASS_FLAGS)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.BuildRaytracingAccelerationStructure(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC@,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.BuildRaytracingAccelerationStructure(Windows.Win32.Graphics.Direct3D12.D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC*,System.UInt32,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.EmitRaytracingAccelerationStructurePostbuildInfo(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC@,System.ReadOnlySpan{System.UInt64})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.EmitRaytracingAccelerationStructurePostbuildInfo(Windows.Win32.Graphics.Direct3D12.D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC*,System.UInt32,System.UInt64*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.DispatchRays(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.DispatchRays(Windows.Win32.Graphics.Direct3D12.D3D12_DISPATCH_RAYS_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.RSSetShadingRate(Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5,Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE,System.Nullable{Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE_COMBINER})">
            <inheritdoc cref="M:Windows.Win32.Graphics.Direct3D12.ID3D12GraphicsCommandList5.RSSetShadingRate(Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE,Windows.Win32.Graphics.Direct3D12.D3D12_SHADING_RATE_COMBINER*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetBuffer(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,System.UInt32,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetBuffer(System.UInt32,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResizeTarget(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.ResizeTarget(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetLastPresentCount(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetLastPresentCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc1(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFullscreenDesc(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetFullscreenDesc(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetHwnd(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetHwnd(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCoreWindow(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetCoreWindow(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Present1(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.Present1(System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetBackgroundColor(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,Windows.Win32.Graphics.Dxgi.DXGI_RGBA@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.SetBackgroundColor(Windows.Win32.Graphics.Dxgi.DXGI_RGBA*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetBackgroundColor(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,Windows.Win32.Graphics.Dxgi.DXGI_RGBA@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetBackgroundColor(Windows.Win32.Graphics.Dxgi.DXGI_RGBA*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetRotation(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_ROTATION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetRotation(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_ROTATION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetSourceSize(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetSourceSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetMaximumFrameLatency(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetMaximumFrameLatency(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameLatencyWaitableObject_SafeHandle(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetFrameLatencyWaitableObject"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetMatrixTransform(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.SetMatrixTransform(Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetMatrixTransform(Windows.Win32.Graphics.Dxgi.IDXGISwapChain2,Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain2.GetMatrixTransform(Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetBuffer(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.UInt32,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetBuffer(System.UInt32,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResizeTarget(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.ResizeTarget(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetLastPresentCount(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetLastPresentCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc1(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFullscreenDesc(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetFullscreenDesc(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetHwnd(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetHwnd(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCoreWindow(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetCoreWindow(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Present1(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.Present1(System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetBackgroundColor(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Graphics.Dxgi.DXGI_RGBA@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.SetBackgroundColor(Windows.Win32.Graphics.Dxgi.DXGI_RGBA*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetBackgroundColor(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Graphics.Dxgi.DXGI_RGBA@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetBackgroundColor(Windows.Win32.Graphics.Dxgi.DXGI_RGBA*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetRotation(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_ROTATION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetRotation(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_ROTATION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetSourceSize(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetSourceSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetMaximumFrameLatency(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetMaximumFrameLatency(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameLatencyWaitableObject_SafeHandle(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetFrameLatencyWaitableObject"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetMatrixTransform(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.SetMatrixTransform(Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetMatrixTransform(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.GetMatrixTransform(Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckColorSpaceSupport(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.CheckColorSpaceSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResizeBuffers1(Windows.Win32.Graphics.Dxgi.IDXGISwapChain3,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.ReadOnlySpan{System.UInt32},System.Object[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain3.ResizeBuffers1(System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,System.Object[])"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.Guid@,System.UInt32,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.SetPrivateData(System.Guid*,System.UInt32,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetPrivateDataInterface(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.Guid@,System.Object)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.SetPrivateDataInterface(System.Guid*,System.Object)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetPrivateData(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.Guid@,System.UInt32@,System.Void*)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetPrivateData(System.Guid*,System.UInt32*,System.Void*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetParent(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetParent(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDevice(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetDevice(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetBuffer(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.UInt32,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetBuffer(System.UInt32,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetDesc(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResizeTarget(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.ResizeTarget(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetFrameStatistics(Windows.Win32.Graphics.Dxgi.DXGI_FRAME_STATISTICS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetLastPresentCount(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetLastPresentCount(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetDesc1(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetDesc1(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC1*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFullscreenDesc(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetFullscreenDesc(Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_FULLSCREEN_DESC*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetHwnd(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Foundation.HWND@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetHwnd(Windows.Win32.Foundation.HWND*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetCoreWindow(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetCoreWindow(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.Present1(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.Present1(System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_PRESENT_PARAMETERS*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetBackgroundColor(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Graphics.Dxgi.DXGI_RGBA@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.SetBackgroundColor(Windows.Win32.Graphics.Dxgi.DXGI_RGBA*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetBackgroundColor(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Graphics.Dxgi.DXGI_RGBA@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetBackgroundColor(Windows.Win32.Graphics.Dxgi.DXGI_RGBA*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetRotation(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_ROTATION@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetRotation(Windows.Win32.Graphics.Dxgi.Common.DXGI_MODE_ROTATION*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetSourceSize(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.UInt32@,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetSourceSize(System.UInt32*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetMaximumFrameLatency(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetMaximumFrameLatency(System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetFrameLatencyWaitableObject_SafeHandle(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetFrameLatencyWaitableObject"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.SetMatrixTransform(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.SetMatrixTransform(Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.GetMatrixTransform(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.GetMatrixTransform(Windows.Win32.Graphics.Dxgi.DXGI_MATRIX_3X2_F*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.CheckColorSpaceSupport(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.UInt32@)">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.CheckColorSpaceSupport(Windows.Win32.Graphics.Dxgi.Common.DXGI_COLOR_SPACE_TYPE,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.FriendlyOverloadExtensions.ResizeBuffers1(Windows.Win32.Graphics.Dxgi.IDXGISwapChain4,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.ReadOnlySpan{System.UInt32},System.Object[])">
            <inheritdoc cref="M:Windows.Win32.Graphics.Dxgi.IDXGISwapChain4.ResizeBuffers1(System.UInt32,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.Common.DXGI_FORMAT,System.UInt32,System.UInt32*,System.Object[])"/>
        </member>
        <member name="M:Windows.Win32.System.WinRT.IInspectable.GetIids(System.UInt32*,System.Guid**)">
            <summary>Gets the interfaces that are implemented by the current Windows Runtime class.</summary>
            <param name="iidCount">
            <para>Type: <b>ULONG*</b> The number of interfaces that are implemented by the current Windows Runtime object, excluding the <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> and <a href="https://docs.microsoft.com/windows/desktop/api/inspectable/nn-inspectable-iinspectable">IInspectable</a> implementations.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//inspectable/nf-inspectable-iinspectable-getiids#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="iids">
            <para>Type: <b>IID**</b> A pointer to an array that contains an IID for   each interface implemented by the current Windows Runtime object. The <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a> and <a href="https://docs.microsoft.com/windows/desktop/api/inspectable/nn-inspectable-iinspectable">IInspectable</a> interfaces are excluded.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//inspectable/nf-inspectable-iinspectable-getiids#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> This function can return the following values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//inspectable/nf-inspectable-iinspectable-getiids">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.WinRT.IInspectable.GetRuntimeClassName(Windows.Win32.System.WinRT.HSTRING*)">
            <summary>Gets the fully qualified name of the current Windows Runtime object.</summary>
            <param name="className">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinRT/hstring">HSTRING</a>*</b> The fully qualified name of the current Windows Runtime object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//inspectable/nf-inspectable-iinspectable-getruntimeclassname#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> This function can return the following values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//inspectable/nf-inspectable-iinspectable-getruntimeclassname">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.System.WinRT.IInspectable.GetTrustLevel(Windows.Win32.System.WinRT.TrustLevel*)">
            <summary>Gets the trust level of the current Windows Runtime object.</summary>
            <param name="trustLevel">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/inspectable/ne-inspectable-trustlevel">TrustLevel</a>*</b> The trust level of the current Windows Runtime object. The default is <b>BaseLevel</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//inspectable/nf-inspectable-iinspectable-gettrustlevel#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> This method always returns <b>S_OK</b>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//inspectable/nf-inspectable-iinspectable-gettrustlevel">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.System.WinRT.TrustLevel">
            <summary>Represents the trust level of an activatable class.</summary>
            <remarks>
            <para>Classes can be activated depending on the trust level of the caller and the trust classification of the activatable class.</para>
            <para><a href="https://docs.microsoft.com/previous-versions/dn408470(v=vs.85)">RegisteredTrustLevel</a> is an alias for this enumeration.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//inspectable/ne-inspectable-trustlevel#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.System.WinRT.TrustLevel.BaseTrust">
            <summary>The component has access to resources that are not protected.</summary>
        </member>
        <member name="F:Windows.Win32.System.WinRT.TrustLevel.PartialTrust">
            <summary>The component has access to resources requested in the app manifest and approved by the user.</summary>
        </member>
        <member name="F:Windows.Win32.System.WinRT.TrustLevel.FullTrust">
            <summary>The component requires the full privileges of the user.</summary>
        </member>
        <member name="T:Windows.Win32.UI.WindowsAndMessaging.MSG">
            <summary>Contains message information from a thread's message queue.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-msg">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.UI.WindowsAndMessaging.MSG.hwnd">
            <summary>
            <para>Type: <b>HWND</b> A handle to the window whose window procedure receives the message. This member is <b>NULL</b> when the message is a thread message.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-msg#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.WindowsAndMessaging.MSG.message">
            <summary>
            <para>Type: <b>UINT</b> The message identifier. Applications can only use the low word; the high word is reserved by the system.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-msg#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.WindowsAndMessaging.MSG.wParam">
            <summary>
            <para>Type: <b>WPARAM</b> Additional information about the message. The exact meaning depends on the value of the <b>message</b> member.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-msg#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.WindowsAndMessaging.MSG.lParam">
            <summary>
            <para>Type: <b>LPARAM</b> Additional information about the message. The exact meaning depends on the value of the <b>message</b> member.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-msg#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.WindowsAndMessaging.MSG.time">
            <summary>
            <para>Type: <b>DWORD</b> The time at which the message was posted.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-msg#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.WindowsAndMessaging.MSG.pt">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/dd162805(v=vs.85)">POINT</a></b> The cursor position, in screen coordinates, when the message was posted.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-msg#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.PInvoke">
            <content>
            Contains extern methods from "api-ms-win-core-winrt-string-l1-1-0.dll".
            </content>
            <content>
            Contains extern methods from "d3d11.dll".
            </content>
            <content>
            Contains extern methods from "d3d12.dll".
            </content>
            <content>
            Contains extern methods from "dxgi.dll".
            </content>
            <content>
            Contains extern methods from "KERNEL32.dll".
            </content>
            <content>
            Contains extern methods from "USER32.dll".
            </content>
        </member>
        <member name="M:Windows.Win32.PInvoke.WindowsDeleteString(Windows.Win32.System.WinRT.HSTRING)">
            <summary>Decrements the reference count of a string buffer.</summary>
            <returns>
            <para>Type: <b>HRESULT</b> This function always returns <b>S_OK</b>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winstring/nf-winstring-windowsdeletestring">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D11CreateDevice(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL},System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Device@,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.D3D11CreateDevice(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE,Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Device@,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext@)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D11CreateDevice(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE,Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Device@,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext@)">
            <summary>Creates a device that represents the display adapter.</summary>
            <param name="pAdapter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>*</b> A pointer to the video adapter to use when creating a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-intro">device</a>. Pass <b>NULL</b> to use the default adapter, which is the first adapter that is enumerated by <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-enumadapters">IDXGIFactory1::EnumAdapters</a>. <div class="alert"><b>Note</b>  Do not mix the use of DXGI 1.0 (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory">IDXGIFactory</a>) and DXGI 1.1 (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory1">IDXGIFactory1</a>) in an application. Use <b>IDXGIFactory</b> or <b>IDXGIFactory1</b>, but not both in an application. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DriverType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE</a>, which represents the driver type to create.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Software">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMODULE</a></b> A handle to a DLL that implements a software rasterizer. If <i>DriverType</i> is <i>D3D_DRIVER_TYPE_SOFTWARE</i>, <i>Software</i> must not be <b>NULL</b>. Get the handle by calling <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibrarya">LoadLibrary</a>, <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibraryexa">LoadLibraryEx</a> , or <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-getmodulehandlea">GetModuleHandle</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The runtime <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">layers</a> to enable (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_FLAG</a>); values can be bitwise OR'd together.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFeatureLevels">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>*</b> A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>s, which determine the order of feature levels to attempt to create. If <i>pFeatureLevels</i> is set to <b>NULL</b>, this function uses the following array of feature levels:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="FeatureLevels">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of elements in <i>pFeatureLevels</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SDKVersion">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The SDK version; use <i>D3D11_SDK_VERSION</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDevice">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>**</b> Returns the address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a> object that represents the device created. If this parameter is <b>NULL</b>, no ID3D11Device will be returned.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFeatureLevel">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>*</b> If successful, returns the first <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a> from the <i>pFeatureLevels</i> array which succeeded. Supply <b>NULL</b> as an input if you don't need to determine which feature level is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppImmediateContext">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a>**</b> Returns the address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> object that represents the device context. If this parameter is <b>NULL</b>, no ID3D11DeviceContext will be returned.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method can return one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            <para>This method returns E_INVALIDARG if you set the <i>pAdapter</i> parameter to a non-<b>NULL</b> value and the <i>DriverType</i> parameter to the D3D_DRIVER_TYPE_HARDWARE value.</para>
            <para>This method returns <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_SDK_COMPONENT_MISSING</a> if you specify <a href="/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_DEBUG</a> in <i>Flags</i> and the incorrect version of the <a href="/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a> is installed on your computer. Install the latest Windows SDK to get the correct version.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdevice">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D11CreateDeviceAndSwapChain(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE,System.Runtime.InteropServices.SafeHandle,Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL},System.UInt32,System.Nullable{Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC},Windows.Win32.Graphics.Dxgi.IDXGISwapChain@,Windows.Win32.Graphics.Direct3D11.ID3D11Device@,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.D3D11CreateDeviceAndSwapChain(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE,Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@,Windows.Win32.Graphics.Direct3D11.ID3D11Device@,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext@)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D11CreateDeviceAndSwapChain(Windows.Win32.Graphics.Dxgi.IDXGIAdapter,Windows.Win32.Graphics.Direct3D.D3D_DRIVER_TYPE,Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Graphics.Direct3D11.D3D11_CREATE_DEVICE_FLAG,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,System.UInt32,System.UInt32,Windows.Win32.Graphics.Dxgi.DXGI_SWAP_CHAIN_DESC*,Windows.Win32.Graphics.Dxgi.IDXGISwapChain@,Windows.Win32.Graphics.Direct3D11.ID3D11Device@,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext@)">
            <summary>Creates a device that represents the display adapter and a swap chain used for rendering.</summary>
            <param name="pAdapter">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiadapter">IDXGIAdapter</a>*</b> A pointer to the video adapter to use when creating a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-intro">device</a>. Pass <b>NULL</b> to use the default adapter, which is the first adapter enumerated by <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-enumadapters">IDXGIFactory1::EnumAdapters</a>. <div class="alert"><b>Note</b>  Do not mix the use of DXGI 1.0 (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory">IDXGIFactory</a>) and DXGI 1.1 (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory1">IDXGIFactory1</a>) in an application. Use <b>IDXGIFactory</b> or <b>IDXGIFactory1</b>, but not both in an application. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DriverType">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE</a></b> The <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE</a>, which represents the driver type to create.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Software">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HMODULE</a></b> A handle to a DLL that implements a software rasterizer. If <i>DriverType</i> is <i>D3D_DRIVER_TYPE_SOFTWARE</i>, <i>Software</i> must not be <b>NULL</b>. Get the handle by calling <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibrarya">LoadLibrary</a>, <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadlibraryexa">LoadLibraryEx</a> , or <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-getmodulehandlea">GetModuleHandle</a>. The value should be non-<b>NULL</b>when <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_driver_type">D3D_DRIVER_TYPE</a> is <b>D3D_DRIVER_TYPE_SOFTWARE</b> and <b>NULL</b> otherwise.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The runtime <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">layers</a> to enable (see <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_FLAG</a>); values can be bitwise OR'd together.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFeatureLevels">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>*</b> A pointer to an array of <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>s, which determine the order of feature levels to attempt to create. If <i>pFeatureLevels</i> is set to <b>NULL</b>, this function uses the following array of feature levels:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="FeatureLevels">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of elements in <i>pFeatureLevels</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SDKVersion">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The SDK version; use <i>D3D11_SDK_VERSION</i>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pSwapChainDesc">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a>*</b> A pointer to a swap chain description (see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ns-dxgi-dxgi_swap_chain_desc">DXGI_SWAP_CHAIN_DESC</a>) that contains initialization parameters for the swap chain.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppSwapChain">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiswapchain">IDXGISwapChain</a>**</b> Returns the address of a pointer to the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgiswapchain">IDXGISwapChain</a> object that represents the swap chain used for rendering.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDevice">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>**</b> Returns the address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a> object that represents the device created. If this parameter is  <b>NULL</b>, no ID3D11Device will be returned'.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFeatureLevel">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>*</b> Returns a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a>, which represents the first element in an array of feature levels supported by the device. Supply <b>NULL</b> as an input if you don't need to determine which feature level is supported.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppImmediateContext">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a>**</b> Returns the address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a> object that represents the device context. If this parameter is <b>NULL</b>, no ID3D11DeviceContext will be returned.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method can return one of the <a href="/windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
            <para>This method returns <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_NOT_CURRENTLY_AVAILABLE</a> if you call it in a Session 0 process.</para>
            <para>This method returns E_INVALIDARG if you set the <i>pAdapter</i> parameter to a non-<b>NULL</b> value and the <i>DriverType</i> parameter to the D3D_DRIVER_TYPE_HARDWARE value.</para>
            <para>This method returns <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_SDK_COMPONENT_MISSING</a> if you specify <a href="/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_DEBUG</a> in <i>Flags</i> and the incorrect version of the <a href="/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a> is installed on your computer. Install the latest Windows SDK to get the correct version.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11/nf-d3d11-d3d11createdeviceandswapchain">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D11On12CreateDevice(System.Object,System.UInt32,System.ReadOnlySpan{Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL},System.Object[],System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Device@,Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext@,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.D3D11On12CreateDevice(System.Object,System.UInt32,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,System.UInt32,System.Object[],System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Device@,Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext@,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D11On12CreateDevice(System.Object,System.UInt32,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*,System.UInt32,System.Object[],System.UInt32,System.UInt32,Windows.Win32.Graphics.Direct3D11.ID3D11Device@,Windows.Win32.Graphics.Direct3D11.ID3D11DeviceContext@,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL*)">
            <summary>Creates a device that uses Direct3D 11 functionality in Direct3D 12, specifying a pre-existing Direct3D 12 device to use for Direct3D 11 interop.</summary>
            <param name="pDevice">
            <para>Type: <b>IUnknown*</b> Specifies a pre-existing Direct3D 12 device to use for Direct3D 11 interop. May not be NULL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">
            <para>Type: <b>UINT</b> One or more bitwise OR'd flags from <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_FLAG</a>. These are the same flags as those used by <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-d3d11createdeviceandswapchain">D3D11CreateDeviceAndSwapChain</a>. Specifies which runtime <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">layers</a> to enable. <i>Flags</i> must be compatible with device flags, and its <i>NodeMask</i> must be a subset of the <i>NodeMask</i> provided to the present API.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pFeatureLevels">
            <para>Type: <b>const D3D_FEATURE_LEVEL*</b> An array of any of the following: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="FeatureLevels">
            <para>Type: <b>UINT</b> The size of (that is, the number of elements in) the *pFeatureLevels* array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppCommandQueues">
            <para>Type: <b>IUnknown* const *</b> An array of unique queues for D3D11On12 to use. The queues must be of the 3D command queue type.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NumQueues">
            <para>Type: <b>UINT</b> The size of (that is, the number of elements in) the *ppCommandQueues* array.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="NodeMask">
            <para>Type: <b>UINT</b> Which node of the Direct3D 12 device to use. Only 1 bit may be set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDevice">
            <para>Type: <b>ID3D11Device**</b> Pointer to the returned <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11device">ID3D11Device</a>. May be NULL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppImmediateContext">
            <para>Type: <b>ID3D11DeviceContext**</b> A pointer to the returned <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nn-d3d11-id3d11devicecontext">ID3D11DeviceContext</a>. May be NULL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pChosenFeatureLevel">
            <para>Type: <b>D3D_FEATURE_LEVEL*</b> A pointer to the returned feature level. May be NULL.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> that are documented for <a href="/windows/desktop/api/d3d11/nf-d3d11-d3d11createdevice">D3D11CreateDevice</a>. This method returns <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_SDK_COMPONENT_MISSING</a>if you specify <a href="/windows/desktop/api/d3d11/ne-d3d11-d3d11_create_device_flag">D3D11_CREATE_DEVICE_DEBUG</a>in <i>Flags</i>and the incorrect version of the <a href="/windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a> is installed on your computer. Install the latest Windows SDK to get the correct version.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d11on12/nf-d3d11on12-d3d11on12createdevice">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12SerializeRootSignature(Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D12.D3D_ROOT_SIGNATURE_VERSION,Windows.Win32.Graphics.Direct3D.ID3DBlob@,Windows.Win32.Graphics.Direct3D.ID3DBlob@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.D3D12SerializeRootSignature(Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D_ROOT_SIGNATURE_VERSION,Windows.Win32.Graphics.Direct3D.ID3DBlob@,Windows.Win32.Graphics.Direct3D.ID3DBlob@)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12SerializeRootSignature(Windows.Win32.Graphics.Direct3D12.D3D12_ROOT_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D12.D3D_ROOT_SIGNATURE_VERSION,Windows.Win32.Graphics.Direct3D.ID3DBlob@,Windows.Win32.Graphics.Direct3D.ID3DBlob@)">
            <summary>Serializes a root signature version 1.0 that can be passed to ID3D12Device::CreateRootSignature.</summary>
            <param name="pRootSignature">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_signature_desc">D3D12_ROOT_SIGNATURE_DESC</a>*</b> The description of the root signature, as a pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_root_signature_desc">D3D12_ROOT_SIGNATURE_DESC</a> structure.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12serializerootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Version">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d_root_signature_version">D3D_ROOT_SIGNATURE_VERSION</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ne-d3d12-d3d_root_signature_version">D3D_ROOT_SIGNATURE_VERSION</a>-typed value that specifies the version of root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12serializerootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppBlob">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b> A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access the serialized root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12serializerootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppErrorBlob">
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b> A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access serializer error messages, or <b>NULL</b> if there are no errors.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12serializerootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns <b>S_OK</b> if successful; otherwise, returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12serializerootsignature">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12CreateRootSignatureDeserializer(System.Void*,System.UIntPtr,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.D3D12CreateRootSignatureDeserializer(System.Void*,System.UIntPtr,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12CreateRootSignatureDeserializer(System.Void*,System.UIntPtr,System.Guid*,System.Void**)">
            <summary>Deserializes a root signature so you can determine the layout definition (D3D12_ROOT_SIGNATURE_DESC).</summary>
            <param name="pSrcData">
            <para>Type: <b>LPCVOID</b> A pointer to the source data for the serialized root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createrootsignaturedeserializer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcDataSizeInBytes">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">SIZE_T</a></b> The size, in bytes, of the block of memory that <i>pSrcData</i> points to.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createrootsignaturedeserializer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRootSignatureDeserializerInterface">
            <para>Type: <b><b>REFIID</b></b> The globally unique identifier (<b>GUID</b>) for the root signature deserializer interface. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createrootsignaturedeserializer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRootSignatureDeserializer">
            <para>Type: <b><b>void</b>**</b> A pointer to a memory block that receives a pointer to the root signature deserializer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createrootsignaturedeserializer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns <b>S_OK</b> if successful; otherwise, returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createrootsignaturedeserializer">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12SerializeVersionedRootSignature(Windows.Win32.Graphics.Direct3D12.D3D12_VERSIONED_ROOT_SIGNATURE_DESC@,Windows.Win32.Graphics.Direct3D.ID3DBlob@,Windows.Win32.Graphics.Direct3D.ID3DBlob@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.D3D12SerializeVersionedRootSignature(Windows.Win32.Graphics.Direct3D12.D3D12_VERSIONED_ROOT_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D.ID3DBlob@,Windows.Win32.Graphics.Direct3D.ID3DBlob@)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12SerializeVersionedRootSignature(Windows.Win32.Graphics.Direct3D12.D3D12_VERSIONED_ROOT_SIGNATURE_DESC*,Windows.Win32.Graphics.Direct3D.ID3DBlob@,Windows.Win32.Graphics.Direct3D.ID3DBlob@)">
            <summary>Serializes a root signature of any version that can be passed to ID3D12Device::CreateRootSignature.</summary>
            <param name="pRootSignature">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_versioned_root_signature_desc">D3D12_VERSIONED_ROOT_SIGNATURE_DESC</a>*</b> Specifies a <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/ns-d3d12-d3d12_versioned_root_signature_desc">D3D12_VERSIONED_ROOT_SIGNATURE_DESC</a> that contains a description of any version of a root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12serializeversionedrootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppBlob">
            <para>Type: <b>ID3DBlob**</b> A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access the serialized root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12serializeversionedrootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppErrorBlob">
            <para>Type: <b>ID3DBlob**</b> A pointer to a memory block that receives a pointer to the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access serializer error messages, or <b>NULL</b> if there are no errors.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12serializeversionedrootsignature#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns <b>S_OK</b> if successful; otherwise, returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12serializeversionedrootsignature">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12CreateVersionedRootSignatureDeserializer(System.Void*,System.UIntPtr,System.Guid@,System.Void*@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.D3D12CreateVersionedRootSignatureDeserializer(System.Void*,System.UIntPtr,System.Guid*,System.Void**)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12CreateVersionedRootSignatureDeserializer(System.Void*,System.UIntPtr,System.Guid*,System.Void**)">
            <summary>Generates an interface that can return the deserialized data structure, via GetUnconvertedRootSignatureDesc.</summary>
            <param name="pSrcData">
            <para>Type: <b>LPCVOID</b> A pointer to the source data for the serialized root signature.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createversionedrootsignaturedeserializer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="SrcDataSizeInBytes">
            <para>Type: <b>SIZE_T</b> The size, in bytes, of the block of memory that <i>pSrcData</i> points to.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createversionedrootsignaturedeserializer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pRootSignatureDeserializerInterface">
            <para>Type: <b>REFIID</b> The globally unique identifier (<b>GUID</b>) for the root signature deserializer interface. See remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createversionedrootsignaturedeserializer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppRootSignatureDeserializer">
            <para>Type: <b>void**</b> A pointer to a memory block that receives a pointer to the root signature deserializer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createversionedrootsignaturedeserializer#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns <b>S_OK</b> if successful; otherwise, returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createversionedrootsignaturedeserializer">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12CreateDevice(System.Object,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.D3D12CreateDevice(System.Object,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12CreateDevice(System.Object,Windows.Win32.Graphics.Direct3D.D3D_FEATURE_LEVEL,System.Guid*,System.Object@)">
            <summary>Creates a device that represents the display adapter.</summary>
            <param name="pAdapter">
            <para>Type: <b>IUnknown*</b> A pointer to the video adapter to use when creating a <a href="https://docs.microsoft.com/windows/desktop/direct3d11/overviews-direct3d-11-devices-intro">device</a>. Pass <b>NULL</b> to use the default adapter, which is the first adapter that is enumerated by <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-enumadapters">IDXGIFactory1::EnumAdapters</a>.</para>
            <para><div class="alert"><b>Note</b>  Don't mix the use of DXGI 1.0 (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory">IDXGIFactory</a>) and DXGI 1.1 (<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory1">IDXGIFactory1</a>) in an application. Use <b>IDXGIFactory</b> or <b>IDXGIFactory1</b>, but not both in an application. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="MinimumFeatureLevel">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a></b> The minimum <a href="https://docs.microsoft.com/windows/desktop/api/d3dcommon/ne-d3dcommon-d3d_feature_level">D3D_FEATURE_LEVEL</a> required for successful device creation.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b><b>REFIID</b></b> The globally unique identifier (<b>GUID</b>) for the device interface. This parameter, and <i>ppDevice</i>, can be addressed with the single macro <a href="https://docs.microsoft.com/windows/desktop/api/combaseapi/nf-combaseapi-iid_ppv_args">IID_PPV_ARGS</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppDevice">
            <para>Type: <b><b>void</b>**</b> A pointer to a memory block that receives a pointer to the device. Pass **NULL** to test if device creation would succeed, but to not actually create the device. If **NULL** is passed and device creation would succeed, **S_FALSE** is returned.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createdevice#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method can return one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            <para>Possible return values include those documented for <a href="/windows/desktop/api/dxgi/nf-dxgi-createdxgifactory1">CreateDXGIFactory1</a> and  <a href="/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-enumadapters">IDXGIFactory::EnumAdapters</a>. If **ppDevice** is **NULL** and the function succeeds, **S_FALSE** is returned, rather than **S_OK**.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12createdevice">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12GetDebugInterface(System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.D3D12GetDebugInterface(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12GetDebugInterface(System.Guid*,System.Object@)">
            <summary>Gets a debug interface.</summary>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (<b>GUID</b>) for the debug interface. The <b>REFIID</b>, or <b>GUID</b>, of the debug interface can be obtained by using the __uuidof() macro. For example, __uuidof(<a href="https://docs.microsoft.com/windows/desktop/api/d3d12sdklayers/nn-d3d12sdklayers-id3d12debug">ID3D12Debug</a>) will get the <b>GUID</b> of the debug interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12getdebuginterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppvDebug">
            <para>Type: <b>void**</b> The debug interface, as a pointer to pointer to void. See <a href="https://docs.microsoft.com/windows/desktop/api/d3d12sdklayers/nn-d3d12sdklayers-id3d12debug">ID3D12Debug</a>and <a href="https://docs.microsoft.com/windows/desktop/api/d3d12sdklayers/nn-d3d12sdklayers-id3d12debugdevice">ID3D12DebugDevice</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12getdebuginterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns one of the <a href="/windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12getdebuginterface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12EnableExperimentalFeatures(System.ReadOnlySpan{System.Guid},System.Void*,System.Span{System.UInt32})">
            <inheritdoc cref="M:Windows.Win32.PInvoke.D3D12EnableExperimentalFeatures(System.UInt32,System.Guid*,System.Void*,System.UInt32*)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12EnableExperimentalFeatures(System.UInt32,System.Guid*,System.Void*,System.UInt32*)">
            <summary>Enables a list of experimental features.</summary>
            <param name="NumFeatures">
            <para>Type: <b>UINT</b> The number of experimental features to enable.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12enableexperimentalfeatures#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pIIDs">
            <para>Type: <b>const IID*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>__in_ecount(NumFeatures)</c> A pointer to an array of IDs that specify which of the available experimental features to enable.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12enableexperimentalfeatures#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pConfigurationStructs">
            <para>Type: <b>void*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>__in_ecount(NumFeatures)</c> Structures that contain additional configuration details that some experimental features might need to be enabled.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12enableexperimentalfeatures#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pConfigurationStructSizes">
            <para>Type: <b>UINT*</b> <a href="https://docs.microsoft.com/visualstudio/code-quality/annotating-function-parameters-and-return-values?view=vs-2015">SAL</a>: <c>__in_ecount(NumFeatures)</c> The sizes of any configuration structs passed in pConfigurationStructs parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12enableexperimentalfeatures#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> This method returns an HRESULT success or error code that can include E_NOINTERFACE if an unrecognized feature is specified or Developer Mode is not enabled, or E_INVALIDARG if the configuration of a feature is in correct, the experimental features specified are not compatible, or other errors.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//d3d12/nf-d3d12-d3d12enableexperimentalfeatures">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.D3D12GetInterface(System.Guid@,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.D3D12GetInterface(System.Guid*,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.CreateDXGIFactory(System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.CreateDXGIFactory(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.CreateDXGIFactory(System.Guid*,System.Object@)">
            <summary>Creates a DXGI 1.0 factory that you can use to generate other DXGI objects.</summary>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (GUID) of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory">IDXGIFactory</a> object referenced by the <i>ppFactory</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppFactory">
            <para>Type: <b>void**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory">IDXGIFactory</a> object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns <b>S_OK</b> if successful; otherwise, returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.CreateDXGIFactory1(System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.CreateDXGIFactory1(System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.CreateDXGIFactory1(System.Guid*,System.Object@)">
            <summary>Creates a DXGI 1.1 factory that you can use to generate other DXGI objects.</summary>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (GUID) of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory1">IDXGIFactory1</a> object referenced by the <i>ppFactory</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppFactory">
            <para>Type: <b>void**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nn-dxgi-idxgifactory1">IDXGIFactory1</a> object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory1#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; an error code otherwise. For a list of error codes, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-createdxgifactory1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.CreateDXGIFactory2(System.UInt32,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.CreateDXGIFactory2(System.UInt32,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.CreateDXGIFactory2(System.UInt32,System.Guid*,System.Object@)">
            <summary>Creates a DXGI 1.3 factory that you can use to generate other DXGI objects.</summary>
            <param name="Flags">
            <para>Type: <b>UINT</b> Valid values include the <b>DXGI_CREATE_FACTORY_DEBUG (0x01)</b> flag, and zero. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-createdxgifactory2#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="riid">
            <para>Type: <b>REFIID</b> The globally unique identifier (GUID) of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgifactory2">IDXGIFactory2</a> object referenced by the <i>ppFactory</i> parameter.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-createdxgifactory2#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppFactory">
            <para>Type: <b>void**</b> Address of a pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgifactory2">IDXGIFactory2</a> object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-createdxgifactory2#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns S_OK if successful; an error code otherwise. For a list of error codes, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-createdxgifactory2">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.DXGIGetDebugInterface1(System.UInt32,System.Guid@,System.Object@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.DXGIGetDebugInterface1(System.UInt32,System.Guid*,System.Object@)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.DXGIGetDebugInterface1(System.UInt32,System.Guid*,System.Object@)">
            <summary>Retrieves an interface that Windows Store apps use for debugging the Microsoft DirectX Graphics Infrastructure (DXGI).</summary>
            <param name="Flags">Not used.</param>
            <param name="riid">The globally unique identifier (GUID) of the requested interface type, which can be the identifier for the <a href="https://docs.microsoft.com/windows/desktop/api/dxgidebug/nn-dxgidebug-idxgidebug">IDXGIDebug</a>, <a href="https://docs.microsoft.com/windows/desktop/api/dxgidebug/nn-dxgidebug-idxgidebug1">IDXGIDebug1</a>, or <a href="https://docs.microsoft.com/windows/desktop/api/dxgidebug/nn-dxgidebug-idxgiinfoqueue">IDXGIInfoQueue</a> interfaces.</param>
            <param name="pDebug">A pointer to a buffer that receives a pointer to the debugging interface.</param>
            <returns>If this function succeeds, it returns <b xmlns:loc="http://microsoft.com/wdcml/l10n">S_OK</b>. Otherwise, it returns an <b xmlns:loc="http://microsoft.com/wdcml/l10n">HRESULT</b> error code.</returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_3/nf-dxgi1_3-dxgigetdebuginterface1">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.DXGIDeclareAdapterRemovalSupport">
            <summary>Allows a process to indicate that it's resilient to any of its graphics devices being removed.</summary>
            <returns>
            <para>Type: <b>HRESULT</b> Returns <b>S_OK</b> if successful; an error code otherwise. If this function is called after device creation, it returns <b>DXGI_ERROR_INVALID_CALL</b>. If this is not the first time that this function is called, it returns <b>DXGI_ERROR_ALREADY_EXISTS</b>. For a full list of error codes, see <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_6/nf-dxgi1_6-dxgideclareadapterremovalsupport">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.S_OK">
            <summary>Documentation varies per use. Refer to each: <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnradioevents-onsetsoftwareradiostatecomplete">IMbnRadioEvents.OnSetSoftwareRadioStateComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnsmsevents-onsmssendcomplete">IMbnSmsEvents.OnSmsSendComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnpinmanagerevents-ongetpinstatecomplete">IMbnPinManagerEvents.OnGetPinStateComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnpinevents-onchangecomplete">IMbnPinEvents.OnChangeComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnsmsevents-onsetsmsconfigurationcomplete">IMbnSmsEvents.OnSetSmsConfigurationComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnpinevents-onentercomplete">IMbnPinEvents.OnEnterComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnpinevents-onunblockcomplete">IMbnPinEvents.OnUnblockComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnsmsevents-onsmsdeletecomplete">IMbnSmsEvents.OnSmsDeleteComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnsmsevents-onsmsreadcomplete">IMbnSmsEvents.OnSmsReadComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnconnectioncontextevents-onsetprovisionedcontextcomplete">IMbnConnectionContextEvents.OnSetProvisionedContextComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnpinevents-onenablecomplete">IMbnPinEvents.OnEnableComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnconnectionevents-onconnectcomplete">IMbnConnectionEvents.OnConnectComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnpinevents-ondisablecomplete">IMbnPinEvents.OnDisableComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnserviceactivationevents-onactivationcomplete">IMbnServiceActivationEvents.OnActivationComplete</see>.</summary>
        </member>
        <member name="F:Windows.Win32.PInvoke.E_FAIL">
            <summary>The operation could not be completed.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnpinevents-onentercomplete">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.PInvoke.E_INVALIDARG">
            <summary>Documentation varies per use. Refer to each: <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnsmsevents-onsmssendcomplete">IMbnSmsEvents.OnSmsSendComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnconnectioncontextevents-onsetprovisionedcontextcomplete">IMbnConnectionContextEvents.OnSetProvisionedContextComplete</see>, <see href="https://docs.microsoft.com/windows/win32/api//mbnapi/nf-mbnapi-imbnserviceactivationevents-onactivationcomplete">IMbnServiceActivationEvents.OnActivationComplete</see>.</summary>
        </member>
        <member name="M:Windows.Win32.PInvoke.CloseHandle(Windows.Win32.Foundation.HANDLE)">
            <summary>Closes an open object handle.</summary>
            <param name="hObject">A valid handle to an open object.</param>
            <returns>
            <para>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <a href="/windows/desktop/api/errhandlingapi/nf-errhandlingapi-getlasterror">GetLastError</a>. If the application is running under a debugger,  the function will throw an exception if it receives either a  handle value that is not valid  or a pseudo-handle value. This can happen if you close a handle twice, or if you  call <b>CloseHandle</b> on a handle returned by the <a href="/windows/desktop/api/fileapi/nf-fileapi-findfirstfilea">FindFirstFile</a> function instead of calling the <a href="/windows/desktop/api/fileapi/nf-fileapi-findclose">FindClose</a> function.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//handleapi/nf-handleapi-closehandle">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.GetClientRect(Windows.Win32.Foundation.HWND,Windows.Win32.Foundation.RECT@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.GetClientRect(Windows.Win32.Foundation.HWND,Windows.Win32.Foundation.RECT*)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.GetClientRect(Windows.Win32.Foundation.HWND,Windows.Win32.Foundation.RECT*)">
            <summary>Retrieves the coordinates of a window's client area.</summary>
            <param name="hWnd">
            <para>Type: <b>HWND</b> A handle to the window whose client coordinates are to be retrieved.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-getclientrect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="lpRect">
            <para>Type: <b>LPRECT</b> A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure that receives the client coordinates. The <b>left</b> and <b>top</b> members are zero. The <b>right</b> and <b>bottom</b> members contain the width and height of the window.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-getclientrect#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>BOOL</b> If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <a href="/windows/desktop/api/errhandlingapi/nf-errhandlingapi-getlasterror">GetLastError</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-getclientrect">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.PeekMessage(Windows.Win32.UI.WindowsAndMessaging.MSG@,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32,Windows.Win32.UI.WindowsAndMessaging.PEEK_MESSAGE_REMOVE_TYPE)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.PeekMessage(Windows.Win32.UI.WindowsAndMessaging.MSG*,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32,Windows.Win32.UI.WindowsAndMessaging.PEEK_MESSAGE_REMOVE_TYPE)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.PeekMessage(Windows.Win32.UI.WindowsAndMessaging.MSG*,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32,Windows.Win32.UI.WindowsAndMessaging.PEEK_MESSAGE_REMOVE_TYPE)">
            <summary>Dispatches incoming sent messages, checks the thread message queue for a posted message, and retrieves the message (if any exist).</summary>
            <param name="lpMsg">
            <para>Type: <b>LPMSG</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/winuser/ns-winuser-msg">MSG</a> structure that receives message information.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-peekmessagew#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="hWnd">
            <para>Type: <b>HWND</b> A handle to the window whose messages are to be retrieved. The window must belong to the current thread.</para>
            <para>If <i>hWnd</i> is <b>NULL</b>, <b>PeekMessage</b> retrieves messages for any window that belongs to the current thread, and any messages on the current thread's message queue whose <b>hwnd</b> value is <b>NULL</b> (see the <a href="https://docs.microsoft.com/windows/desktop/api/winuser/ns-winuser-msg">MSG</a> structure). Therefore if hWnd is <b>NULL</b>, both window messages and thread messages are processed. If <i>hWnd</i> is -1, <b>PeekMessage</b> retrieves only messages on the current thread's message queue whose <b>hwnd</b> value is <b>NULL</b>, that is, thread messages as posted by  <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-postmessagea">PostMessage</a> (when the <i>hWnd</i> parameter is <b>NULL</b>) or <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-postthreadmessagea">PostThreadMessage</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-peekmessagew#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="wMsgFilterMin">
            <para>Type: <b>UINT</b> The value of the first message in the range of messages to be examined. Use <b>WM_KEYFIRST</b> (0x0100) to specify the first keyboard message or <b>WM_MOUSEFIRST</b> (0x0200) to specify the first mouse message. If <i>wMsgFilterMin</i> and <i>wMsgFilterMax</i> are both zero, <b>PeekMessage</b> returns all available messages (that is, no range filtering is performed).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-peekmessagew#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="wMsgFilterMax">
            <para>Type: <b>UINT</b> The value of the last message in the range of messages to be examined. Use <b>WM_KEYLAST</b> to specify the last keyboard message or <b>WM_MOUSELAST</b> to specify the last mouse message. If <i>wMsgFilterMin</i> and <i>wMsgFilterMax</i> are both zero, <b>PeekMessage</b> returns all available messages (that is, no range filtering is performed).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-peekmessagew#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="wRemoveMsg">Type: <b>UINT</b></param>
            <returns>
            <para>Type: <b>BOOL</b> If a message is available, the return value is nonzero. If no messages are available, the return value is zero.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-peekmessagew">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.GetMessage(Windows.Win32.UI.WindowsAndMessaging.MSG@,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.GetMessage(Windows.Win32.UI.WindowsAndMessaging.MSG*,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.GetMessage(Windows.Win32.UI.WindowsAndMessaging.MSG*,Windows.Win32.Foundation.HWND,System.UInt32,System.UInt32)">
            <summary>Retrieves a message from the calling thread's message queue. The function dispatches incoming sent messages until a posted message is available for retrieval.</summary>
            <param name="lpMsg">
            <para>Type: <b>LPMSG</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/winuser/ns-winuser-msg">MSG</a> structure that receives message information from the thread's message queue.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-getmessagew#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="hWnd">
            <para>Type: <b>HWND</b> A handle to the window whose messages are to be retrieved. The window must belong to the current thread.</para>
            <para>If <i>hWnd</i> is <b>NULL</b>, <b>GetMessage</b> retrieves messages for any window that belongs to the current thread, and any messages on the current thread's message queue whose <b>hwnd</b> value is <b>NULL</b> (see the <a href="https://docs.microsoft.com/windows/desktop/api/winuser/ns-winuser-msg">MSG</a> structure). Therefore if hWnd is <b>NULL</b>, both window messages and thread messages are processed. If <i>hWnd</i> is -1, <b>GetMessage</b> retrieves only messages on the current thread's message queue whose <b>hwnd</b> value is <b>NULL</b>,  that is, thread messages as posted by  <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-postmessagea">PostMessage</a> (when the <i>hWnd</i> parameter is <b>NULL</b>) or <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-postthreadmessagea">PostThreadMessage</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-getmessagew#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="wMsgFilterMin">
            <para>Type: <b>UINT</b> The integer value of the lowest message value to be retrieved. Use <b>WM_KEYFIRST</b> (0x0100) to specify the first keyboard message or <b>WM_MOUSEFIRST</b> (0x0200) to specify the first mouse message. Use <a href="https://docs.microsoft.com/windows/desktop/inputdev/wm-input">WM_INPUT</a> here and in <i>wMsgFilterMax</i> to specify only the <b>WM_INPUT</b> messages. If <i>wMsgFilterMin</i> and <i>wMsgFilterMax</i> are both zero, <b>GetMessage</b> returns all available messages (that is, no range filtering is performed).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-getmessagew#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="wMsgFilterMax">
            <para>Type: <b>UINT</b> The integer value of the highest message value to be retrieved. Use <b>WM_KEYLAST</b> to specify the last keyboard message or <b>WM_MOUSELAST</b> to specify the last mouse message.</para>
            <para>Use <a href="https://docs.microsoft.com/windows/desktop/inputdev/wm-input">WM_INPUT</a> here and in <i>wMsgFilterMin</i> to specify only the <b>WM_INPUT</b> messages. If <i>wMsgFilterMin</i> and <i>wMsgFilterMax</i> are both zero, <b>GetMessage</b> returns all available messages (that is, no range filtering is performed).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-getmessagew#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>BOOL</b> If the function retrieves a message other than <a href="/windows/desktop/winmsg/wm-quit">WM_QUIT</a>, the return value is nonzero. If the function retrieves the <a href="/windows/desktop/winmsg/wm-quit">WM_QUIT</a> message, the return value is zero. If there is an error, the return value is -1. For example, the function fails if <i>hWnd</i> is an invalid window handle or <i>lpMsg</i> is an invalid pointer. To get extended error information, call <a href="/windows/desktop/api/errhandlingapi/nf-errhandlingapi-getlasterror">GetLastError</a>. Because the return value can be nonzero, zero, or -1, avoid code like this:</para>
            <para></para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-getmessagew">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.TranslateMessage(Windows.Win32.UI.WindowsAndMessaging.MSG@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.TranslateMessage(Windows.Win32.UI.WindowsAndMessaging.MSG*)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.TranslateMessage(Windows.Win32.UI.WindowsAndMessaging.MSG*)">
            <summary>Translates virtual-key messages into character messages. The character messages are posted to the calling thread's message queue, to be read the next time the thread calls the GetMessage or PeekMessage function.</summary>
            <param name="lpMsg">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/winuser/ns-winuser-msg">MSG</a>*</b> A pointer to an <a href="https://docs.microsoft.com/windows/desktop/api/winuser/ns-winuser-msg">MSG</a> structure that contains message information retrieved from the calling thread's message queue by using the <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-getmessage">GetMessage</a> or <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-peekmessagea">PeekMessage</a> function.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-translatemessage#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>BOOL</b> If the message is translated (that is, a character message is posted to the thread's message queue), the return value is nonzero. If the message is <a href="/windows/desktop/inputdev/wm-keydown">WM_KEYDOWN</a>, <a href="/windows/desktop/inputdev/wm-keyup">WM_KEYUP</a>, <a href="/windows/desktop/inputdev/wm-syskeydown">WM_SYSKEYDOWN</a>, or <a href="/windows/desktop/inputdev/wm-syskeyup">WM_SYSKEYUP</a>, the return value is nonzero, regardless of the translation. If the message is not translated (that is, a character message is not posted to the thread's message queue), the return value is zero.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-translatemessage">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.DispatchMessage(Windows.Win32.UI.WindowsAndMessaging.MSG@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.DispatchMessage(Windows.Win32.UI.WindowsAndMessaging.MSG*)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.DispatchMessage(Windows.Win32.UI.WindowsAndMessaging.MSG*)">
            <summary>Dispatches a message to a window procedure. It is typically used to dispatch a message retrieved by the GetMessage function.</summary>
            <param name="lpMsg">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/winuser/ns-winuser-msg">MSG</a>*</b> A pointer to a structure that contains the message.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-dispatchmessagew#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>LRESULT</b> The return value specifies the value returned by the window procedure. Although its meaning depends on the message being dispatched, the return value generally is ignored.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/nf-winuser-dispatchmessagew">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.Security.SECURITY_ATTRIBUTES">
            <summary>The SECURITY_ATTRIBUTES structure contains the security descriptor for an object and specifies whether the handle retrieved by specifying this structure is inheritable.</summary>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//wtypesbase/ns-wtypesbase-security_attributes#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Security.SECURITY_ATTRIBUTES.nLength">
            <summary>The size, in bytes, of this structure. Set this value to the size of the **SECURITY\_ATTRIBUTES** structure.</summary>
        </member>
        <member name="F:Windows.Win32.Security.SECURITY_ATTRIBUTES.lpSecurityDescriptor">
            <summary>
            <para>A pointer to a [**SECURITY\_DESCRIPTOR**](../winnt/ns-winnt-security_descriptor.md) structure that controls access to the object. If the value of this member is **NULL**, the object is assigned the default security descriptor associated with the [*access token*](/windows/win32/secauthz/access-tokens) of the calling process. This is not the same as granting access to everyone by assigning a **NULL** [*discretionary access control list*](/windows/win32/secauthz/dacls-and-aces) (DACL). By default, the default DACL in the access token of a process allows access only to the user represented by the access token. For information about creating a security descriptor, see [Creating a Security Descriptor](/windows/win32/secauthz/creating-a-security-descriptor-for-a-new-object-in-c--).</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//wtypesbase/ns-wtypesbase-security_attributes#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.Security.SECURITY_ATTRIBUTES.bInheritHandle">
            <summary>A Boolean value that specifies whether the returned handle is inherited when a new process is created. If this member is **TRUE**, the new process inherits the handle.</summary>
        </member>
        <member name="T:Windows.Win32.WindowsDeleteStringSafeHandle">
            <summary>
            Represents a Win32 handle that can be closed with <see cref="M:Windows.Win32.PInvoke.WindowsDeleteString(Windows.Win32.System.WinRT.HSTRING)"/>.
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.AlphaMode">
            <summary>Identifies the alpha value, transparency behavior, of a surface.</summary>
            <remarks>
            <para>For more information about alpha mode, see <a href="https://docs.microsoft.com/windows/desktop/api/dcommon/ne-dcommon-d2d1_alpha_mode">DXGI_ALPHA_MODE</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_alpha_mode#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.AlphaMode.Unspecified">
            <summary>Indicates that the transparency behavior is not specified.</summary>
        </member>
        <member name="F:DXSharp.DXGI.AlphaMode.Premultiplied">
            <summary>Indicates that the transparency behavior is premultiplied. Each color is first scaled by the alpha value. The alpha value itself is the same in both straight and premultiplied alpha. Typically, no color channel value is greater than the alpha channel value. If a color channel value in a premultiplied format is greater than the alpha channel, the standard source-over blending math results in an additive blend.</summary>
        </member>
        <member name="F:DXSharp.DXGI.AlphaMode.Straight">
            <summary>Indicates that the transparency behavior is not premultiplied. The alpha channel indicates the transparency of the color.</summary>
        </member>
        <member name="F:DXSharp.DXGI.AlphaMode.Ignore">
            <summary>Indicates to ignore the transparency behavior.</summary>
        </member>
        <member name="F:DXSharp.DXGI.AlphaMode.ForceDWORD">
            <summary>
            <para>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits. This value is not used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_alpha_mode#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
            <remarks>
            For these C# bindings this should be a non-issue. The underlying type is already uint/UInt32, which is 32-bit.
            </remarks>
        </member>
        <member name="T:DXSharp.DXGI.ScanlineOrder">
            <summary>
            Flags indicating the method the raster uses to create an image on a surface.
            </summary>
            <remarks>
            <para>See <a href="https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/bb173067(v=vs.85)">DXGI_MODE_SCANLINE_ORDER</a> for more info.</para>
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.ScanlineOrder.Unspecified">
            <summary>
            Scanline order is unspecified.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.ScanlineOrder.Progressive">
            <summary>
            The image is created from the first scanline to the last without skipping any.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.ScanlineOrder.UpperFieldFirst">
            <summary>
            The image is created beginning with the upper field.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.ScanlineOrder.LowerFieldFirst">
            <summary>
            The image is created beginning with the lower field.
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.Scaling">
            <summary>Identifies resize behavior when the back-buffer size does not match the size of the target output.</summary>
            <remarks>
            <para>The DXGI_SCALING_NONE value is supported only for flip presentation model swap chains that you create with the 
            <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL</a> 
            value. You pass these values in a call to 
            <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforhwnd">IDXGIFactory2::CreateSwapChainForHwnd</a>, 
            <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcorewindow">IDXGIFactory2::CreateSwapChainForCoreWindow</a>, 
            or  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcomposition">IDXGIFactory2::CreateSwapChainForComposition</a>. 
            
            DXGI_SCALING_ASPECT_RATIO_STRETCH will prefer to use a horizontal fill, otherwise it will use a vertical fill, using the 
            following logic. 
            <pre class="syntax" xml:space="preserve"><code>
            // C++ version (C# translation needed):
            float aspectRatio = backBufferWidth / float(backBufferHeight); 
            
            // Horizontal fill float scaledWidth = outputWidth; float scaledHeight = outputWidth / aspectRatio; 
            if (scaledHeight &gt;= outputHeight) { 
            	// Do vertical fill 
            	scaledWidth = outputHeight * aspectRatio; 
            	scaledHeight = outputHeight; 
            } 
            
            float offsetX = (outputWidth - scaledWidth) * 0.5f; 
            float offsetY = (outputHeight - scaledHeight) * 0.5f; 
            rect.left = static_cast&lt;LONG&gt;(offsetX); 
            rect.top = static_cast&lt;LONG&gt;(offsetY); 
            rect.right = static_cast&lt;LONG&gt;(offsetX + scaledWidth); 
            rect.bottom = static_cast&lt;LONG&gt;(offsetY + scaledHeight); 
            rect.left = std::max&lt;LONG&gt;(0, rect.left); 
            rect.top = std::max&lt;LONG&gt;(0, rect.top); 
            rect.right = std::min&lt;LONG&gt;(static_cast&lt;LONG&gt;(outputWidth), rect.right); 
            rect.bottom = std::min&lt;LONG&gt;(static_cast&lt;LONG&gt;(outputHeight), rect.bottom); 
            </code></pre> 
            
            Note that <i>outputWidth</i> and <i>outputHeight</i> are the pixel sizes of the presentation target size. In the case of <b>CoreWindow</b>, this requires converting the <i>logicalWidth</i> and <i>logicalHeight</i> values from DIPS to pixels using the window's DPI property.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_scaling#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.Scaling.Stretch">
            <summary>
            Directs DXGI to make the back-buffer contents scale to fit the presentation target size. 
            This is the implicit behavior of DXGI when you call the 
            <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">IDXGIFactory::CreateSwapChain</a> method.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Scaling.None">
            <summary>
            <para>Directs DXGI to make the back-buffer contents appear without any scaling when the presentation target size is not equal to the back-buffer size. The top edges of the back buffer and presentation target are aligned together. If the WS_EX_LAYOUTRTL style is associated with the <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a> handle to the target output window, the right edges of the back buffer and presentation target are aligned together; otherwise, the left edges are aligned together. All target area outside the back buffer is filled with window background color. This value specifies that all target areas outside the back buffer of a swap chain are filled with the background color that you specify in a call to <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-setbackgroundcolor">IDXGISwapChain1::SetBackgroundColor</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_scaling#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Scaling.AspectRatioStretch">
            <summary>
            <para>Directs DXGI to make the back-buffer contents scale to fit the presentation 
            target size, while preserving the aspect ratio of the back-buffer. If the scaled 
            back-buffer does not fill the presentation area, it will be centered with black 
            borders. This constant is supported on Windows Phone 8 and Windows 10. Note that 
            with legacy Win32 window swapchains, this works the same as DXGI_SCALING_STRETCH.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ne-dxgi1_2-dxgi_scaling#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.ScalingMode">
            <summary>
            Flags indicating how an image is stretched to fit a given monitor's resolution.
            </summary>
            <remarks>
            Selecting the CENTERED or STRETCHED modes can result in a mode change even if 
            you specify the native resolution of the display in the DXGI_MODE_DESC. If you 
            know the native resolution of the display and want to make sure that you do not 
            initiate a mode change when transitioning a swap chain to full screen (either via 
            ALT+ENTER or IDXGISwapChain::SetFullscreenState), you should use UNSPECIFIED.
            <para>
            This enum is used by the DXGI_MODE_DESC1 and DXGI_SWAP_CHAIN_FULLSCREEN_DESC structures.
            </para>
            More information at <a href="https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/bb173066(v=vs.85)">DXGI_MODE_SCALING enumeration</a>
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.ScalingMode.Unspecified">
            <summary>
            Unspecified scaling.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.ScalingMode.Centered">
            <summary>
            Specifies no scaling. The image is centered on the display. 
            This flag is typically used for a fixed-dot-pitch display 
            (such as an LED display).
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.ScalingMode.Stretched">
            <summary>
            Specifies stretched scaling.
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.Usage">
            <summary>
            Flags for surface and resource creation options.
            </summary>
            <remarks>
            For more information see: 
            <a href="https://learn.microsoft.com/en-us/windows/win32/direct3ddxgi/dxgi-usage">DXGI_USAGE</a>
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.Usage.Unknown">
            <summary>
            No flags
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Usage.BackBuffer">
            <summary>
            The surface or resource is used as a back buffer. You don’t need to pass 
            Usage.BackBuffer when you create a swap chain. But you can determine 
            whether a resource belongs to a swap chain when you call DXGI.IResource.GetUsage 
            and get Usage.BackBuffer ...
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Usage.DiscardOnPresent_internal">
            <summary>
            This flag is for internal use only.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Usage.ReadOnly">
            <summary>
            Use the surface or resource for reading only.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Usage.RenderTargetOutput">
            <summary>
            Use the surface or resource as an output render target.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Usage.ShaderInput">
            <summary>
            Use the surface or resource as an input to a shader.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Usage.Shared">
            <summary>
            Share the surface or resource.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Usage.UnorderedAccess">
            <summary>
            Use the surface or resource for unordered access.
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.SwapEffect">
            <summary>Options for handling pixels in a display surface after calling DXGI.ISwapChain1.Present1.</summary>
            <remarks>
            <para>
            <see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_effect#">Read more on docs.microsoft.com</see>.
            </para>
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.SwapEffect.Discard">
            <summary>
            <para>Use this flag to specify the bit-block transfer (bitblt) model and to specify that DXGI discard the contents of the back buffer after you call <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a>. This flag is valid for a swap chain with more than one back buffer, although, applications only have read and write access to buffer 0. Use this flag to enable the display driver to select the most efficient presentation technique for the swap chain. <b>Direct3D 12:  </b>This enumeration value is never supported. D3D12 apps must using <b>FlipSequential</b> or <b>FlipDiscard</b>. <div class="alert"><b>Note</b>  There are differences between full screen exclusive and full screen UWP. If you are porting a Direct3D 11 application to UWP on a Windows PC, be aware that the use of  <b>Discard</b> when creating swap chains does not behave the same way in UWP as it does in Win32, and its use may be detrimental to GPU performance. This is because UWP applications are forced into FLIP swap modes (even if other swap modes are set), because this reduces the computation time used by the memory copies originally done by the older bitblt model. The recommended approach is to manually convert DX11 Discard swap chains to use flip models within UWP,  using <b>FlipDiscard</b> instead of <b>Discard</b> where possible. Refer to the Example below, and see <a href="https://docs.microsoft.com/windows/win32/direct3ddxgi/for-best-performance--use-dxgi-flip-model">this article</a> for more information.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_effect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapEffect.Sequential">
            <summary>
            <para>Use this flag to specify the bitblt model and to specify that DXGI persist the contents of the back buffer after you call <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a>. Use this option to present the contents of the swap chain in order, from the first buffer (buffer 0) to the last buffer. This flag cannot be used with multisampling. <b>Direct3D 12:  </b>This enumeration value is never supported. D3D12 apps must using <b>FlipSequential</b> or <b>FlipDiscard</b>.</para>
            <para><div class="alert"><b>Note</b>  For best performance, use <b>FlipSequential</b> instead of <b>Sequential</b>. See <a href="https://docs.microsoft.com/windows/win32/direct3ddxgi/for-best-performance--use-dxgi-flip-model">this article</a> for more information.</div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_effect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapEffect.FlipSequential">
            <summary>
            <para>Use this flag to specify the flip presentation model and to specify that DXGI persist the contents of the back buffer after you call <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a>. This flag cannot be used with multisampling.</para>
            <para><b>Direct3D 11:  </b>This enumeration value is supported starting with Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_effect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapEffect.FlipDiscard">
            <summary>
            <para>Use this flag to specify the flip presentation model and to specify that DXGI discard the contents of the back buffer after you call <a href="https://docs.microsoft.com/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">IDXGISwapChain1::Present1</a>. This flag cannot be used with multisampling and partial presentation. See <a href="https://docs.microsoft.com/windows/win32/direct3ddxgi/dxgi-1-4-improvements">DXGI 1.4 Improvements</a>.</para>
            <para><b>Direct3D 11:  </b>This enumeration value is supported starting with Windows 10.</para>
            <para><div class="alert"><b>Note</b>  Windows Store apps must use <b>FlipSequential</b> or <b>FlipDiscard</b>. </div> <div> </div></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ne-dxgi-dxgi_swap_effect#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.SwapChainFlags">
            <summary>
            Options for swap-chain behavior.
            </summary>
            <remarks>
            These values can be combined as bitflags for many unique combinations
            with different behavior.
            <para><b>NOTES:</b></para>
            You don't need to set SwapChainFlag.DisplayOnly for swap chains that 
            you create in full-screen mode with the 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">DXGI.IFactory.CreateSwapChain method</a> 
            because those swap chains already behave as if SwapChainFlag.DisplayOnly 
            is set. That is, presented content is not accessible by remote access or through 
            the <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgioutputduplication">desktop duplication APIs</a>.
            <para>
            For more information, please see 
            <a href="https://learn.microsoft.com/en-us/windows/win32/api/dxgi/ne-dxgi-dxgi_swap_chain_flag">DXGI_SWAP_CHAIN_FLAG</a>
            </para>
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.NONE">
            <summary>
            No flags
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.NonPreRotated">
            <summary>
            <para><b>Value: 1</b></para>
            Set this flag to turn off automatic image rotation; that is, do not perform a 
            rotation when transferring the contents of the front buffer to the monitor.
            Use this flag to avoid a bandwidth penalty when an application expects to handle rotation. 
            This option is valid only during full-screen mode.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.AllowModeSwitch">
            <summary>
            <para><b>Value: 2</b></para>
            Set this flag to enable an application to switch modes by calling 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-resizetarget">DXGI.ISwapChain.ResizeTarget</a>.
            When switching from windowed to full-screen mode, the display mode (or monitor resolution) will 
            be changed to match the dimensions of the application window.
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.GDICompatible">
            <summary>
            <para><b>Value: 4</b></para>
            Set this flag to enable an application to render using GDI on a swap chain or a surface.
            This will allow the application to call 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi/nf-dxgi-idxgisurface1-getdc">DXGI.ISurface1.GetDC</a> 
            on the 0th back buffer or a surface.
            <para>This flag is <b>not</b> applicable for Direct3D 12.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.RestrictedContent">
            <summary>
            <para><b>Value: 8</b></para>
            Set this flag to indicate that the swap chain might contain protected content; therefore, 
            the operating system supports the creation of the swap chain only when driver and hardware 
            protection is used. If the driver and hardware do not support content protection, the call 
            to create a resource for the swap chain fails.
            <para><b>Direct3D 11:</b>  This enumeration value is supported starting with Windows 8.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.RestrictSharedResourceDriver">
            <summary>
            <para><b>Value: 16</b></para>
            Set this flag to indicate that shared resources that are created within the swap chain must be 
            protected by using the driver’s mechanism for restricting access to shared surfaces.
            <para><b>Direct3D 11:</b>  This enumeration value is supported starting with Windows 8.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.DisplayOnly">
            <summary>
            <para><b>Value: 32</b></para>
            Set this flag to restrict presented content to the local displays. Therefore, the presented content is not accessible via remote accessing or through the 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi1_2/nn-dxgi1_2-idxgioutputduplication">desktop duplication APIs</a>
            <para>This flag supports the window content protection features of Windows. Applications can use this flag to protect their own onscreen window content from being captured or copied through a specific set of public operating system features and APIs.</para>
            <para>If you use this flag with windowed (HWND or IWindow) swap chains where another process created the HWND, the owner of the HWND must use the 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-setwindowdisplayaffinity">SetWindowDisplayAffinity</a> 
            function appropriately in order to allow calls to 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-present">DXGI.ISwapChain.Present</a> 
            or 
            <a href="https://learn.microsoft.com/en-us/windows/win32/api/dxgi1_2/nf-dxgi1_2-idxgiswapchain1-present1">DXGI.ISwapChain1.Present1</a> 
            to succeed.</para>
            <para><b>Direct3D 11:</b>  This enumeration value is supported starting with Windows 8.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.FrameLatencyWaitableObject">
            <summary>
            <para><b>Value: 64</b></para>
            Set this flag to create a waitable object you can use to ensure rendering does not 
            begin while a frame is still being presented. When this flag is used, the swapchain's 
            latency must be set with the 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi1_3/nf-dxgi1_3-idxgiswapchain2-setmaximumframelatency">DXGI.ISwapChain2.SetMaximumFrameLatency</a> 
            API instead of 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi/nf-dxgi-idxgidevice1-setmaximumframelatency">DXGI.IDevice1.SetMaximumFrameLatency</a>.
            <para>This flag isn't supported in full-screen mode, unless the render API is Direct3D 12.</para>
            <para><b>Direct3D 11:</b>  This enumeration value is supported starting with Windows 8.1.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.ForegroundLayer">
            <summary>
            <para><b>Value: 128</b></para>
            Set this flag to create a swap chain in the foreground layer for multi-plane rendering. 
            This flag can only be used with 
            <a href="https://learn.microsoft.com/en-us/uwp/api/Windows.UI.Core.CoreWindow">CoreWindow</a> 
            swap chains, which are created with 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi1_2/nf-dxgi1_2-idxgifactory2-createswapchainforcorewindow">CreateSwapChainForCoreWindow</a>. 
            Apps should not create foreground swap chains if 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi1_3/nf-dxgi1_3-idxgioutput2-supportsoverlays">DXGI.IOutput2.SupportsOverlays</a> 
            indicates that hardware support for overlays is not available.
            
            <para>Note that IDXGISwapChain::ResizeBuffers cannot be used to add or remove this flag.</para>
            <para><b>Direct3D 11:</b>  This enumeration value is supported starting with Windows 8.1.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.FullscreenVideo">
            <summary>
            <para><b>Value: 256</b></para>
            Set this flag to create a swap chain for full-screen video.
            <para><b>Direct3D 11:</b>  This enumeration value is supported starting with Windows 8.1.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.YUVVideo">
            <summary>
            <para><b>Value: 512</b></para>
            Set this flag to create a swap chain for YUV video.
            <para><b>Direct3D 11:</b>  This enumeration value is supported starting with Windows 8.1.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.HW_Protected">
            <summary>
            <para><b>Value: 1024</b></para>
            Indicates that the swap chain should be created such that all underlying resources 
            can be protected by the hardware. Resource creation will fail if hardware content 
            protection is not supported.
            
            <para><b>This flag has the following restrictions:</b></para>
            <para>This flag can only be used with swap effect DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL.</para>
            </summary>
            <remarks>
            <b>NOTE: </b>Creating a swap chain using this flag does not automatically guarantee that 
            hardware protection will be enabled for the underlying allocation. Some implementations 
            require that the DRM components are first initialized prior to any guarantees of protection.
            
            <para><b>Windows Versions:</b>  This enumeration value is supported starting with Windows 10.</para>
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.AllowTearing">
            <summary>
            <para><b>Value: 2048</b></para>
            Tearing support is a requirement to enable displays that support variable refresh 
            rates to function properly when the application presents a swap chain tied to a full 
            screen borderless window. Win32 apps can already achieve tearing in fullscreen exclusive 
            mode by calling 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-setfullscreenstate">SetFullscreenState</a>(true), 
            but the recommended approach for Win32 developers is to use this tearing flag instead.
            
            <para>This flag requires the use of a DXGI_SWAP_EFFECT_FLIP_* swap effect.</para>
            </summary>
            <remarks>
            To check for hardware support of this feature, refer to 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi1_5/nf-dxgi1_5-idxgifactory5-checkfeaturesupport">DXGI.IFactory5.CheckFeatureSupport</a>. 
            For usage information refer to 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-present">DXGI.ISwapChain.Present</a> 
            and the 
            <a href="https://learn.microsoft.com/en-us/windows/desktop/direct3ddxgi/dxgi-present">DXGI_PRESENT flags</a>.
            <para><b>NOTE:</b> <a href="https://learn.microsoft.com/en-us/windows/win32/api/dxgi/nf-dxgi-idxgiswapchain-resizebuffers">DXGI.ISwapChain.ResizeBuffers</a> can't be used to add or remove this flag.</para>
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.SwapChainFlags.RestrictedToAllHolographicDisplays">
            <summary>
            <para><b>Value: 4096</b></para>
            Undocumented flag for holographi displays ???
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.Rational">
            <summary>Represents a rational number.</summary>
            <remarks>
            <para>This structure is a member of the 
            <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXG.ModeDescription</a> structure.
            The <b>DXGI_RATIONAL</b> structure operates under the following rules: </para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_rational#">Read more on docs.microsoft.com</see>.</para>
            <para>The DXGI_RATIONAL structure operates under the following rules:</para>
            <para>0/0 is legal and will be interpreted as 0/1.</para>
            <para>0/anything is interpreted as zero.</para>
            <para>If you are representing a whole number, the denominator should be 1.</para>
            
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.Rational.Zero">
            <summary>
            A Rational with a value of zero
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.Rational.AsFloat">
            <summary>
            Gets the rational value as a float
            </summary>
        </member>
        <member name="M:DXSharp.DXGI.Rational.#ctor">
            <summary>
            Creates a new rational value
            </summary>
        </member>
        <member name="M:DXSharp.DXGI.Rational.#ctor(System.UInt32)">
            <summary>
            Creates a new rational value
            </summary>
            <param name="numerator">
            The numerator value (denominator will be set to 1)
            </param>
        </member>
        <member name="M:DXSharp.DXGI.Rational.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Creates a new rational value
            </summary>
            <param name="numerator">The numerator value</param>
            <param name="denominator">The denominator value</param>
        </member>
        <member name="M:DXSharp.DXGI.Rational.#ctor(System.ValueTuple{System.UInt32,System.UInt32})">
            <summary>
            Creates a new Rational value
            </summary>
            <param name="values">Tuple holding numerator and denominator values</param>
        </member>
        <member name="P:DXSharp.DXGI.Rational.Numerator">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> An unsigned integer value representing the top of the rational number.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_rational#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.Rational.Denominator">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> An unsigned integer value representing the bottom of the rational number.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_rational#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="M:DXSharp.DXGI.Rational.Reduce">
            <summary>
            Reduces the rational/fraction value
            </summary>
        </member>
        <member name="M:DXSharp.DXGI.Rational.Reduced">
            <summary>
            Gets the reduced value of this rational/fraction value
            </summary>
            <returns>Reduced rationa/fraction value</returns>
        </member>
        <member name="M:DXSharp.DXGI.Rational.Equals(System.Object)">
            <summary>
            Determines if the given object and this value are equal
            </summary>
            <param name="obj">object to compare to</param>
            <returns>True if equal, otherwise false</returns>
        </member>
        <member name="M:DXSharp.DXGI.Rational.Equals(DXSharp.DXGI.Rational)">
            <summary>
            Determines if the given rational value and this value are equal
            </summary>
            <param name="other">Rational value to compare to</param>
            <returns>True if equal, otherwise false</returns>
        </member>
        <member name="M:DXSharp.DXGI.Rational.GetHashCode">
            <summary>
            Gets the 32-bit hash code of this rational value
            </summary>
            <returns>32-bit hash code</returns>
        </member>
        <member name="M:DXSharp.DXGI.Rational.GDC(DXSharp.DXGI.Rational)">
            <summary>
            Finds the greatest common denominator of a rational value
            </summary>
            <param name="r">A rational/fraction value</param>
            <returns>Greatest common denominator</returns>
            <exception cref="T:DXSharp.PerformanceException">
            Thrown in DEBUG build if the search for greatest common 
            denominator takes an unreasonably long amount of time 
            </exception>
        </member>
        <member name="M:DXSharp.DXGI.Rational.op_Implicit(System.ValueTuple{System.UInt32,System.UInt32})~DXSharp.DXGI.Rational">
            <summary>
            Converts a tuple of uints to Rational
            </summary>
            <param name="values">Value tuple of two uint values</param>
        </member>
        <member name="M:DXSharp.DXGI.Rational.op_Implicit(System.UInt32)~DXSharp.DXGI.Rational">
            <summary>
            Converts an unsigned value into rational form
            </summary>
            <param name="value">A whole, unsigned value</param>
        </member>
        <member name="T:DXSharp.DXGI.SampleDescription">
            <summary>Describes multi-sampling parameters for a resource.</summary>
            <remarks>
            <para>This structure is a member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1">DXGI_SWAP_CHAIN_DESC1</a> structure. The default sampler mode, with no anti-aliasing, has a count of 1 and a quality level of 0. If multi-sample antialiasing is being used, all bound render targets and depth buffers must have the same sample counts and quality levels. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_sample_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.SampleDescription.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Creates a new SampleDescription
            </summary>
            <param name="count">Number of multisamples per pixel</param>
            <param name="quality">The image quality level</param>
        </member>
        <member name="M:DXSharp.DXGI.SampleDescription.#ctor(System.ValueTuple{System.UInt32,System.UInt32})">
            <summary>
            Creates a new SampleDescription
            </summary>
            <param name="values">Tuple holding count and quality values</param>
        </member>
        <member name="P:DXSharp.DXGI.SampleDescription.Count">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The number of multisamples per pixel.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_sample_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SampleDescription.Quality">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The image quality level. The higher the quality, the lower the performance. The valid range is between zero and one less than the level returned by <a href="https://docs.microsoft.com/windows/desktop/api/d3d10/nf-d3d10-id3d10device-checkmultisamplequalitylevels">ID3D10Device::CheckMultisampleQualityLevels</a> for Direct3D 10 or <a href="https://docs.microsoft.com/windows/desktop/api/d3d11/nf-d3d11-id3d11device-checkmultisamplequalitylevels">ID3D11Device::CheckMultisampleQualityLevels</a> for Direct3D 11. For Direct3D 10.1 and Direct3D 11, you can use two special quality level values. For more information about these quality level values, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgicommon/ns-dxgicommon-dxgi_sample_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.SwapChainDescription">
            <summary>Describes a swap chain.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-getdesc">GetDesc</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">CreateSwapChain</a> methods. In full-screen mode, there is a dedicated front buffer; in windowed mode, the desktop is the front buffer. If you create a swap chain with one buffer, specifying <b>DXGI_SWAP_EFFECT_SEQUENTIAL</b> does not cause the contents of the single buffer to be swapped with the front buffer. For performance information about flipping swap-chain buffers in full-screen application, see <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/d3d10-graphics-programming-guide-dxgi">Full-Screen Application Performance Hints</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.SwapChainDescription.#ctor(DXSharp.DXGI.ModeDescription,DXSharp.DXGI.SampleDescription,DXSharp.DXGI.Usage,System.UInt32,Windows.Win32.Foundation.HWND,System.Boolean,DXSharp.DXGI.SwapEffect,DXSharp.DXGI.SwapChainFlags)">
            <summary>
            Creates a new SwapChainDescription
            </summary>
            <param name="bufferDesc">The swapchain ModeDescription for the display</param>
            <param name="sampleDesc">The multisampling settings description</param>
            <param name="bufferUsage">The DXGI Usage flags</param>
            <param name="bufferCount">The backbuffer count</param>
            <param name="outputWindow">Handle to the output window</param>
            <param name="windowed">Indicates if swapchain is in windowed mode</param>
            <param name="swapEffect">The swap effect flags</param>
            <param name="flags">Additional swapchain flags</param>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription.BufferDesc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a></b> A <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a> structure that describes the backbuffer display mode.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription.SampleDesc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a> structure that describes multi-sampling parameters.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription.BufferUsage">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE</a> enumerated type that describes the surface usage and CPU access options for the back buffer. The back buffer can be used for shader input or render-target output.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription.BufferCount">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that describes the number of buffers in the swap chain. When you call  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">IDXGIFactory::CreateSwapChain</a> to create a full-screen swap chain, you typically include the front buffer in this value. For more information about swap-chain buffers, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription.OutputWindow">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a></b> An <a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">HWND</a> handle to the output window. This member must not be <b>NULL</b>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription.Windowed">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">BOOL</a></b> A Boolean value that specifies whether the output is in windowed mode. <b>TRUE</b> if the output is in windowed mode; otherwise, <b>FALSE</b>. We recommend that you create a windowed swap chain and allow the end user to change the swap chain to full screen through <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-setfullscreenstate">IDXGISwapChain::SetFullscreenState</a>; that is, do not set this member to FALSE to force the swap chain to be full screen. However, if you create the swap chain as full screen, also provide the end user with a list of supported display modes through the <b>BufferDesc</b> member because a swap chain that is created with an unsupported display mode might cause the display to go black and prevent the end user from seeing anything. For more information about choosing windowed verses full screen, see <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">IDXGIFactory::CreateSwapChain</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription.SwapEffect">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT</a> enumerated type that describes options for handling the contents of the presentation buffer after presenting a surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription.Flags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_chain_flag">DXGI_SWAP_CHAIN_FLAG</a> enumerated type that describes options for swap-chain behavior.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.SwapChainDescription1">
            <summary>Describes a swap chain.</summary>
            <remarks>
            <para>This structure is used by the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiswapchain-getdesc">GetDesc</a> and <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">CreateSwapChain</a> methods. In full-screen mode, there is a dedicated front buffer; in windowed mode, the desktop is the front buffer. If you create a swap chain with one buffer, specifying <b>DXGI_SWAP_EFFECT_SEQUENTIAL</b> does not cause the contents of the single buffer to be swapped with the front buffer. For performance information about flipping swap-chain buffers in full-screen application, see <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/d3d10-graphics-programming-guide-dxgi">Full-Screen Application Performance Hints</a>.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.SwapChainDescription1.#ctor(System.UInt32,System.UInt32,DXSharp.DXGI.Format,System.Boolean,DXSharp.DXGI.SampleDescription,DXSharp.DXGI.Usage,System.UInt32,DXSharp.DXGI.Scaling,DXSharp.DXGI.SwapEffect,DXSharp.DXGI.AlphaMode,DXSharp.DXGI.SwapChainFlags)">
            <summary>
            Creates a new SwapChainDescription1
            </summary>
            <param name="width">The buffer width</param>
            <param name="height">The buffer height</param>
            <param name="format">The DXGI buffer format</param>
            <param name="stereo">Will swapchain render in stereoscopic mode (e.g., VR mode?)</param>
            <param name="sampleDesc">The multisample settings description</param>
            <param name="bufferUsage">The buffer usage flags</param>
            <param name="bufferCount">Number of backbuffers to use</param>
            <param name="scaling">The scaling flags</param>
            <param name="swapEffect">The swap effect flags</param>
            <param name="alphaMode">The alpha blending settings description</param>
            <param name="flags">Additional swapchain flags</param>
        </member>
        <member name="M:DXSharp.DXGI.SwapChainDescription1.#ctor(System.Int32,System.Int32,DXSharp.DXGI.Format,System.Boolean,DXSharp.DXGI.SampleDescription,DXSharp.DXGI.Usage,System.UInt32,DXSharp.DXGI.Scaling,DXSharp.DXGI.SwapEffect,DXSharp.DXGI.AlphaMode,DXSharp.DXGI.SwapChainFlags)">
            <summary>
            Creates a new SwapChainDescription1
            </summary>
            <param name="width">The buffer width</param>
            <param name="height">The buffer height</param>
            <param name="format">The DXGI buffer format</param>
            <param name="stereo">Will swapchain render in stereoscopic mode (e.g., VR mode?)</param>
            <param name="sampleDesc">The multisample settings description</param>
            <param name="bufferUsage">The buffer usage flags</param>
            <param name="bufferCount">Number of backbuffers to use</param>
            <param name="scaling">The scaling flags</param>
            <param name="swapEffect">The swap effect flags</param>
            <param name="alphaMode">The alpha blending settings description</param>
            <param name="flags">Additional swapchain flags</param>
        </member>
        <member name="M:DXSharp.DXGI.SwapChainDescription1.#ctor(DXSharp.DXGI.SwapChainDescription,DXSharp.DXGI.Scaling,DXSharp.DXGI.AlphaMode)">
            <summary>
            Creates a SwapChainDescription1 from a SwapChainDescription
            </summary>
            <param name="desc">A SwapChainDescription structure</param>
            <param name="scaling">Additional Scaling flags (default is None)</param>
            <param name="alphaMode">Additional AlphaMode flags (default is Straight)</param>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription1.Width">
            <summary>
            A value that describes the resolution width. If you specify the width as zero 
            when you call the DXGI.IFactory.CreateSwapChain method to create a swap chain, 
            the runtime obtains the width from the output window and assigns this width 
            value to the swap-chain description. You can subsequently call the 
            DXGI.ISwapChain.GetDesc method to retrieve the assigned width value.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription1.Height">
            <summary>
            A value that describes the resolution height. If you specify the height as zero 
            when you call the DXGI.IFactory.CreateSwapChain method to create a swap chain, 
            the runtime obtains the height from the output window and assigns this height 
            value to the swap-chain description. You can subsequently call the 
            DXGI.ISwapChain.GetDesc method to retrieve the assigned height value.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription1.Format">
            <summary>
            A DXGI.Format structure describing the display format.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription1.Stereo">
            <summary>
            Specifies whether the full-screen display mode is stereo. True if stereo; otherwise, false.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription1.SampleDesc">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a></b> A <a href="https://docs.microsoft.com/windows/desktop/api/dxgicommon/ns-dxgicommon-dxgi_sample_desc">DXGI_SAMPLE_DESC</a> structure that describes multi-sampling parameters.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription1.BufferUsage">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/direct3ddxgi/dxgi-usage">DXGI_USAGE</a> enumerated type that describes the surface usage and CPU access options for the back buffer. The back buffer can be used for shader input or render-target output.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription1.BufferCount">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A value that describes the number of buffers in the swap chain. When you call  <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgifactory-createswapchain">IDXGIFactory::CreateSwapChain</a> to create a full-screen swap chain, you typically include the front buffer in this value. For more information about swap-chain buffers, see Remarks.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription1.Scaling">
            <summary>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ne-dxgi1_2-dxgi_scaling">DXGI_SCALING</a>-typed value that identifies resize behavior if the size of the back buffer is not equal to the target output.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription1.SwapEffect">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_effect">DXGI_SWAP_EFFECT</a> enumerated type that describes options for handling the contents of the presentation buffer after presenting a surface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription1.AlphaMode">
            <summary>
            <para>A <a href="https://docs.microsoft.com/windows/desktop/api/dxgi1_2/ne-dxgi1_2-dxgi_alpha_mode">DXGI_ALPHA_MODE</a>-typed value that identifies the transparency behavior of the swap-chain back buffer.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi1_2/ns-dxgi1_2-dxgi_swap_chain_desc1#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainDescription1.Flags">
            <summary>
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> A member of the <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/ne-dxgi-dxgi_swap_chain_flag">DXGI_SWAP_CHAIN_FLAG</a> enumerated type that describes options for swap-chain behavior.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/ns-dxgi-dxgi_swap_chain_desc#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="M:DXSharp.DXGI.SwapChainDescription1.op_Explicit(DXSharp.DXGI.SwapChainDescription)~DXSharp.DXGI.SwapChainDescription1">
            <summary>
            Converts a SwapChainDescription to a SwapChainDescription1 structure
            </summary>
            <param name="desc">A SwapChainDescription strcuture</param>
        </member>
        <member name="T:DXSharp.DXGI.SwapChainFullscreenDescription">
            <summary>
            Describes full-screen mode for a swap chain.
            </summary>
        </member>
        <member name="M:DXSharp.DXGI.SwapChainFullscreenDescription.#ctor(DXSharp.DXGI.Rational,DXSharp.DXGI.ScanlineOrder,DXSharp.DXGI.ScalingMode,System.Boolean)">
            <summary>
            Creates a new SwapChainFullscreenDescription structure
            </summary>
            <param name="refreshRate">The refresh rate</param>
            <param name="scanlineOrdering">The scaline ordering flags</param>
            <param name="scalingMode">The scaling mode flags</param>
            <param name="windowed">Indicates if display mode is windowed</param>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainFullscreenDescription.RefreshRate">
            <summary>
            A <a href="https://learn.microsoft.com/en-us/windows/win32/api/dxgicommon/ns-dxgicommon-dxgi_rational?redirectedfrom=MSDN">DXGI.Rational</a> 
            structure describing the refresh rate in hertz
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainFullscreenDescription.ScanlineOrdering">
            <summary>
            A member of the DXGI.ScanlineOrdering enumerated type describing the scanline drawing mode.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainFullscreenDescription.Scaling">
            <summary>
            A member of the DXGI.ScalingMode enumerated type describing the scaling mode.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.SwapChainFullscreenDescription.Windowed">
            <summary>
            A Boolean value that specifies whether the swap chain is in windowed mode. 
            TRUE if the swap chain is in windowed mode; otherwise, FALSE.
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.ModeDescription">
            <summary>
            Describes a display mode.
            </summary>
            <remarks>
            For more info see: <a href="https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/bb173064(v=vs.85)">DXGI_MODE_DESC</a>
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.ModeDescription.#ctor(System.UInt32,System.UInt32,DXSharp.DXGI.Rational,DXSharp.DXGI.Format,DXSharp.DXGI.ScanlineOrder,DXSharp.DXGI.ScalingMode)">
            <summary>
            Creates a new DXGI.ModeDescription
            </summary>
            <param name="width">Width of the display mode</param>
            <param name="height">Height of the display mode</param>
            <param name="refreshRate">Refresh rate of the monitor</param>
            <param name="format">The resource format of the display mode</param>
            <param name="scanlineOrdering">The scanline ordering of the display mode</param>
            <param name="scaling">The scaling of the display mode</param>
        </member>
        <member name="M:DXSharp.DXGI.ModeDescription.#ctor(DXSharp.DXGI.ModeDescription1@)">
            <summary>
            Creates a new ModeDescription out of a ModeDescription1
            </summary>
            <param name="modeDesc1">A ModeDescription1 structure</param>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription.Width">
            <summary>
            A value that describes the resolution width. If you specify the width as zero 
            when you call the DXGI.IFactory.CreateSwapChain method to create a swap chain, 
            the runtime obtains the width from the output window and assigns this width 
            value to the swap-chain description. You can subsequently call the 
            DXGI.ISwapChain.GetDesc method to retrieve the assigned width value.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription.Height">
            <summary>
            A value that describes the resolution height. If you specify the height as zero 
            when you call the DXGI.IFactory.CreateSwapChain method to create a swap chain, 
            the runtime obtains the height from the output window and assigns this height 
            value to the swap-chain description. You can subsequently call the 
            DXGI.ISwapChain.GetDesc method to retrieve the assigned height value.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription.RefreshRate">
            <summary>
            A <a href="https://learn.microsoft.com/en-us/windows/win32/api/dxgicommon/ns-dxgicommon-dxgi_rational?redirectedfrom=MSDN">DXGI.Rational</a> 
            structure describing the refresh rate in hertz
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription.Format">
            <summary>
            A DXGI.Format structure describing the display format.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription.ScanlineOrdering">
            <summary>
            A member of the DXGI.ScanlineOrder enumerated type describing the scanline drawing mode.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription.Scaling">
            <summary>
            A member of the DXGI.ScalingMode enumerated type describing the scaling mode.
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.ModeDescription1">
            <summary>
            Describes a display mode and whether the display mode supports stereo.
            </summary>
            <remarks>
            ModeDescription1 is identical to ModeDescription except that ModeDescription1 includes the Stereo member.
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.ModeDescription1.#ctor(System.UInt32,System.UInt32,DXSharp.DXGI.Rational,DXSharp.DXGI.Format,DXSharp.DXGI.ScanlineOrder,DXSharp.DXGI.ScalingMode,System.Boolean)">
            <summary>
            Creates a new DXGI.ModeDescription
            </summary>
            <param name="width">Width of the display mode</param>
            <param name="height">Height of the display mode</param>
            <param name="refreshRate">Refresh rate of the monitor</param>
            <param name="format">The resource format of the display mode</param>
            <param name="scanlineOrdering">The scanline ordering of the display mode</param>
            <param name="scaling">The scaling of the display mode</param>
            <param name="stereo">Indicates if rendering in stereo (e.g., for VR/Mixed Reality) mode</param>
        </member>
        <member name="M:DXSharp.DXGI.ModeDescription1.#ctor(DXSharp.DXGI.ModeDescription,System.Boolean)">
            <summary>
            Creates a new ModeDescription1 from a ModeDescription and optional stereo (bool) value
            </summary>
            <param name="desc">A ModeDescription structure</param>
            <param name="stereo">Indicates if rendering in stereo (e.g., for VR/Mixed Reality) mode</param>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription1.Width">
            <summary>
            A value that describes the resolution width. If you specify the width as zero 
            when you call the DXGI.IFactory.CreateSwapChain method to create a swap chain, 
            the runtime obtains the width from the output window and assigns this width 
            value to the swap-chain description. You can subsequently call the 
            DXGI.ISwapChain.GetDesc method to retrieve the assigned width value.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription1.Height">
            <summary>
            A value that describes the resolution height. If you specify the height as zero 
            when you call the DXGI.IFactory.CreateSwapChain method to create a swap chain, 
            the runtime obtains the height from the output window and assigns this height 
            value to the swap-chain description. You can subsequently call the 
            DXGI.ISwapChain.GetDesc method to retrieve the assigned height value.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription1.RefreshRate">
            <summary>
            A <a href="https://learn.microsoft.com/en-us/windows/win32/api/dxgicommon/ns-dxgicommon-dxgi_rational?redirectedfrom=MSDN">DXGI.Rational</a> 
            structure describing the refresh rate in hertz
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription1.Format">
            <summary>
            A DXGI.Format structure describing the display format.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription1.ScanlineOrdering">
            <summary>
            A member of the DXGI.ScanlineOrder enumerated type describing the scanline drawing mode.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription1.Scaling">
            <summary>
            A member of the DXGI.ScalingMode enumerated type describing the scaling mode.
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.ModeDescription1.Stereo">
            <summary>
            Specifies whether the full-screen display mode is stereo. True if stereo; otherwise, false.
            </summary>
        </member>
        <member name="M:DXSharp.DXGI.ModeDescription1.op_Implicit(DXSharp.DXGI.ModeDescription)~DXSharp.DXGI.ModeDescription1">
            <summary>
            Converts a ModeDescription to a ModeDescription1 structure
            </summary>
            <param name="desc">A ModeDescription structure</param>
        </member>
        <member name="T:DXSharp.DXGI.MWAFlags">
            <summary>
            Flags for making window association between
            a SwapChain and a HWND (Window handle)
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.MWAFlags.None">
            <summary>
            No flags
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.MWAFlags.NoWindowChanges">
            <summary>
            Ignore all
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.MWAFlags.NoAltEnter">
            <summary>
            Ignore Alt+Enter
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.MWAFlags.NoPrintScreen">
            <summary>
            Ignore Print Screen key
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.MWAFlags.Valid">
            <summary>
            Valid? (Needs documentation)
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.Format">
            <summary>
            Resource data formats, including fully-typed and typeless formats. A list of modifiers 
            at the bottom of the page more fully describes each format type.
            </summary>
            <remarks>
            <para><h3><b>Byte Order (LSB/MSB):</b></h3></para>
            Most formats have byte-aligned components, and the components are in C-array order 
            (the least address comes first). For those formats that don't have power-of-2-aligned 
            components, the first named component is in the least-significant bits.
            <para><h3><b>Portable Coding for Endian-Independence:</b></h3></para>
            Rather than adjusting for whether a system uses big-endian or little-endian byte ordering, 
            you should write portable code, as follows.
            <para></para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.Format.UNKNOWN">
            <summary>The format is not known.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32B32A32_TYPELESS">
            <summary>A four-component, 128-bit typeless format that supports 32 bits per channel including alpha. ¹</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32B32A32_FLOAT">
            <summary>A four-component, 128-bit floating-point format that supports 32 bits per channel including alpha. <sup>1,5,8</sup></summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32B32A32_UINT">
            <summary>A four-component, 128-bit unsigned-integer format that supports 32 bits per channel including alpha. ¹</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32B32A32_SINT">
            <summary>A four-component, 128-bit signed-integer format that supports 32 bits per channel including alpha. ¹</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32B32_TYPELESS">
            <summary>A three-component, 96-bit typeless format that supports 32 bits per color channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32B32_FLOAT">
            <summary>A three-component, 96-bit floating-point format that supports 32 bits per color channel.<sup>5,8</sup></summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32B32_UINT">
            <summary>A three-component, 96-bit unsigned-integer format that supports 32 bits per color channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32B32_SINT">
            <summary>A three-component, 96-bit signed-integer format that supports 32 bits per color channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16B16A16_TYPELESS">
            <summary>A four-component, 64-bit typeless format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16B16A16_FLOAT">
            <summary>A four-component, 64-bit floating-point format that supports 16 bits per channel including alpha.<sup>5,7</sup></summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16B16A16_UNORM">
            <summary>A four-component, 64-bit unsigned-normalized-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16B16A16_UINT">
            <summary>A four-component, 64-bit unsigned-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16B16A16_SNORM">
            <summary>A four-component, 64-bit signed-normalized-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16B16A16_SINT">
            <summary>A four-component, 64-bit signed-integer format that supports 16 bits per channel including alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32_TYPELESS">
            <summary>A two-component, 64-bit typeless format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32_FLOAT">
            <summary>A two-component, 64-bit floating-point format that supports 32 bits for the red channel and 32 bits for the green channel.<sup>5,8</sup></summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32_UINT">
            <summary>A two-component, 64-bit unsigned-integer format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G32_SINT">
            <summary>A two-component, 64-bit signed-integer format that supports 32 bits for the red channel and 32 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32G8X24_TYPELESS">
            <summary>A two-component, 64-bit typeless format that supports 32 bits for the red channel, 8 bits for the green channel, and 24 bits are unused.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.D32_FLOAT_S8X24_UINT">
            <summary>A 32-bit floating-point component, and two unsigned-integer components (with an additional 32 bits). This format supports 32-bit depth, 8-bit stencil, and 24 bits are unused.⁵</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32_FLOAT_X8X24_TYPELESS">
            <summary>A 32-bit floating-point component, and two typeless components (with an additional 32 bits). This format supports 32-bit red channel, 8 bits are unused, and 24 bits are unused.⁵</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.X32_TYPELESS_G8X24_UINT">
            <summary>A 32-bit typeless component, and two unsigned-integer components (with an additional 32 bits). This format has 32 bits unused, 8 bits for green channel, and 24 bits are unused.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R10G10B10A2_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 10 bits for each color and 2 bits for alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R10G10B10A2_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 10 bits for each color and 2 bits for alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R10G10B10A2_UINT">
            <summary>A four-component, 32-bit unsigned-integer format that supports 10 bits for each color and 2 bits for alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R11G11B10_FLOAT">
            <summary>
            <para>Three partial-precision floating-point numbers encoded into a single 32-bit value (a variant of s10e5, which is sign bit, 10-bit mantissa, and 5-bit biased (15) exponent). There are no sign bits, and there is a 5-bit biased (15) exponent for each channel, 6-bit mantissa  for R and G, and a 5-bit mantissa for B, as shown in the following illustration.<sup>5,7</sup> </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8B8A8_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8B8A8_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8B8A8_UNORM_SRGB">
            <summary>A four-component, 32-bit unsigned-normalized integer sRGB format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8B8A8_UINT">
            <summary>A four-component, 32-bit unsigned-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8B8A8_SNORM">
            <summary>A four-component, 32-bit signed-normalized-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8B8A8_SINT">
            <summary>A four-component, 32-bit signed-integer format that supports 8 bits per channel including alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16_TYPELESS">
            <summary>A two-component, 32-bit typeless format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16_FLOAT">
            <summary>A two-component, 32-bit floating-point format that supports 16 bits for the red channel and 16 bits for the green channel.<sup>5,7</sup></summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16_UNORM">
            <summary>A two-component, 32-bit unsigned-normalized-integer format that supports 16 bits each for the green and red channels.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16_UINT">
            <summary>A two-component, 32-bit unsigned-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16_SNORM">
            <summary>A two-component, 32-bit signed-normalized-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16G16_SINT">
            <summary>A two-component, 32-bit signed-integer format that supports 16 bits for the red channel and 16 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32_TYPELESS">
            <summary>A single-component, 32-bit typeless format that supports 32 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.D32_FLOAT">
            <summary>A single-component, 32-bit floating-point format that supports 32 bits for depth.<sup>5,8</sup></summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32_FLOAT">
            <summary>A single-component, 32-bit floating-point format that supports 32 bits for the red channel.<sup>5,8</sup></summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32_UINT">
            <summary>A single-component, 32-bit unsigned-integer format that supports 32 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R32_SINT">
            <summary>A single-component, 32-bit signed-integer format that supports 32 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R24G8_TYPELESS">
            <summary>A two-component, 32-bit typeless format that supports 24 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.D24_UNORM_S8_UINT">
            <summary>A 32-bit z-buffer format that supports 24 bits for depth and 8 bits for stencil.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R24_UNORM_X8_TYPELESS">
            <summary>A 32-bit format, that contains a 24 bit, single-component, unsigned-normalized integer, with an additional typeless 8 bits. This format has 24 bits red channel and 8 bits unused.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.X24_TYPELESS_G8_UINT">
            <summary>A 32-bit format, that contains a 24 bit, single-component, typeless format,  with an additional 8 bit unsigned integer component. This format has 24 bits unused and 8 bits green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8_TYPELESS">
            <summary>A two-component, 16-bit typeless format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8_UNORM">
            <summary>A two-component, 16-bit unsigned-normalized-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8_UINT">
            <summary>A two-component, 16-bit unsigned-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8_SNORM">
            <summary>A two-component, 16-bit signed-normalized-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8_SINT">
            <summary>A two-component, 16-bit signed-integer format that supports 8 bits for the red channel and 8 bits for the green channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16_TYPELESS">
            <summary>A single-component, 16-bit typeless format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16_FLOAT">
            <summary>A single-component, 16-bit floating-point format that supports 16 bits for the red channel.<sup>5,7</sup></summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.D16_UNORM">
            <summary>A single-component, 16-bit unsigned-normalized-integer format that supports 16 bits for depth.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16_UNORM">
            <summary>A single-component, 16-bit unsigned-normalized-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16_UINT">
            <summary>A single-component, 16-bit unsigned-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16_SNORM">
            <summary>A single-component, 16-bit signed-normalized-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R16_SINT">
            <summary>A single-component, 16-bit signed-integer format that supports 16 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8_TYPELESS">
            <summary>A single-component, 8-bit typeless format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8_UNORM">
            <summary>A single-component, 8-bit unsigned-normalized-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8_UINT">
            <summary>A single-component, 8-bit unsigned-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8_SNORM">
            <summary>A single-component, 8-bit signed-normalized-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8_SINT">
            <summary>A single-component, 8-bit signed-integer format that supports 8 bits for the red channel.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.A8_UNORM">
            <summary>A single-component, 8-bit unsigned-normalized-integer format for alpha only.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R1_UNORM">
            <summary>A single-component, 1-bit unsigned-normalized integer format that supports 1 bit for the red channel. ².</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R9G9B9E5_SHAREDEXP">
            <summary>
            <para>Three partial-precision floating-point numbers encoded into a single 32-bit value all sharing the same 5-bit exponent (variant of s10e5, which is sign bit, 10-bit mantissa, and 5-bit biased (15) exponent). There is no sign bit, and there is a shared 5-bit biased (15) exponent and a 9-bit mantissa for each channel, as shown in the following illustration. <sup>6,7</sup>. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R8G8_B8G8_UNORM">
            <summary>
            <para>A four-component, 32-bit unsigned-normalized-integer format. This packed RGB format is analogous to the UYVY format. Each 32-bit block describes a pair of pixels: (R8, G8, B8) and (R8, G8, B8) where the R8/B8 values are repeated, and the G8 values are unique to each pixel. ³ Width must be even.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.G8R8_G8B8_UNORM">
            <summary>
            <para>A four-component, 32-bit unsigned-normalized-integer format. This packed RGB format is analogous to the YUY2 format. Each 32-bit block describes a pair of pixels: (R8, G8, B8) and (R8, G8, B8) where the R8/B8 values are repeated, and the G8 values are unique to each pixel. ³ Width must be even.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC1_TYPELESS">
            <summary>Four-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC1_UNORM">
            <summary>Four-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC1_UNORM_SRGB">
            <summary>Four-component block-compression format for sRGB data. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC2_TYPELESS">
            <summary>Four-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC2_UNORM">
            <summary>Four-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC2_UNORM_SRGB">
            <summary>Four-component block-compression format for sRGB data. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC3_TYPELESS">
            <summary>Four-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC3_UNORM">
            <summary>Four-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC3_UNORM_SRGB">
            <summary>Four-component block-compression format for sRGB data. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC4_TYPELESS">
            <summary>One-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC4_UNORM">
            <summary>One-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC4_SNORM">
            <summary>One-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC5_TYPELESS">
            <summary>Two-component typeless block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC5_UNORM">
            <summary>Two-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC5_SNORM">
            <summary>Two-component block-compression format. For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.B5G6R5_UNORM">
            <summary>
            <para>A three-component, 16-bit unsigned-normalized-integer format that supports 5 bits for blue, 6 bits for green, and 5 bits for red. <b>Direct3D 10 through Direct3D 11:  </b>This value is defined for DXGI. However, Direct3D 10, 10.1, or 11 devices do not support this format. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.B5G5R5A1_UNORM">
            <summary>
            <para>A four-component, 16-bit unsigned-normalized-integer format that supports 5 bits for each color channel and 1-bit alpha. <b>Direct3D 10 through Direct3D 11:  </b>This value is defined for DXGI. However, Direct3D 10, 10.1, or 11 devices do not support this format. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.B8G8R8A8_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits for each color channel and 8-bit alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.B8G8R8X8_UNORM">
            <summary>A four-component, 32-bit unsigned-normalized-integer format that supports 8 bits for each color channel and 8 bits unused.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.R10G10B10_XR_BIAS_A2_UNORM">
            <summary>A four-component, 32-bit 2.8-biased fixed-point format that supports 10 bits for each color channel and 2-bit alpha.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.B8G8R8A8_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 8 bits for each channel including alpha. ⁴</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.B8G8R8A8_UNORM_SRGB">
            <summary>A four-component, 32-bit unsigned-normalized standard RGB format that supports 8 bits for each channel including alpha. ⁴</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.B8G8R8X8_TYPELESS">
            <summary>A four-component, 32-bit typeless format that supports 8 bits for each color channel, and 8 bits are unused. ⁴</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.B8G8R8X8_UNORM_SRGB">
            <summary>A four-component, 32-bit unsigned-normalized standard RGB format that supports 8 bits for each color channel, and 8 bits are unused. ⁴</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC6H_TYPELESS">
            <summary>A typeless block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC6H_UF16">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.⁵</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC6H_SF16">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.⁵</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC7_TYPELESS">
            <summary>A typeless block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC7_UNORM">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.BC7_UNORM_SRGB">
            <summary>A block-compression format. ⁴ For information about block-compression formats, see <a href="https://docs.microsoft.com/windows/desktop/direct3d11/texture-block-compression-in-direct3d-11">Texture Block Compression in Direct3D 11</a>.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.AYUV">
            <summary>
            <para>Most common YUV 4:4:4 video resource format. Valid view formats for this video resource format are R8G8B8A8_UNORM and R8G8B8A8_UINT. For UAVs, an additional valid view format is R32_UINT. By using R32_UINT for UAVs, you can both read and write as opposed to just write for R8G8B8A8_UNORM and R8G8B8A8_UINT. Supported view types are SRV, RTV, and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is V-&gt;R8, U-&gt;G8, Y-&gt;B8, and A-&gt;A8. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.Y410">
            <summary>
            <para>10-bit per channel packed YUV 4:4:4 video resource format. Valid view formats for this video resource format are R10G10B10A2_UNORM and R10G10B10A2_UINT. For UAVs, an additional valid view format is R32_UINT. By using R32_UINT for UAVs, you can both read and write as opposed to just write for R10G10B10A2_UNORM and R10G10B10A2_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is U-&gt;R10, Y-&gt;G10, V-&gt;B10, and A-&gt;A2. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.Y416">
            <summary>
            <para>16-bit per channel packed YUV 4:4:4 video resource format. Valid view formats for this video resource format are R16G16B16A16_UNORM and R16G16B16A16_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is U-&gt;R16, Y-&gt;G16, V-&gt;B16, and A-&gt;A16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.NV12">
            <summary>
            <para>Most common YUV 4:2:0 video resource format. Valid luminance data view formats for this video resource format are R8_UNORM and R8_UINT. Valid chrominance data view formats (width and height are each 1/2 of luminance view) for this video resource format are R8G8_UNORM and R8G8_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R8. For chrominance data view, the mapping to the view channel is U-&gt;R8 and V-&gt;G8. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. The first (SysMemPitch * height) bytes are the Y plane, the remaining (SysMemPitch * (height / 2)) bytes are the UV plane. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.P010">
            <summary>
            <para>10-bit per channel planar YUV 4:2:0 video resource format. Valid luminance data view formats for this video resource format are R16_UNORM and R16_UINT. The runtime does not enforce whether the lowest 6 bits are 0 (given that this video resource format is a 10-bit format that uses 16 bits). If required, application shader code would have to enforce this manually.  From the runtime's point of view, P010 is no different than P016. Valid chrominance data view formats (width and height are each 1/2 of luminance view) for this video resource format are R16G16_UNORM and R16G16_UINT. For UAVs, an additional valid chrominance data view format is R32_UINT. By using R32_UINT for UAVs, you can both read and write as opposed to just write for R16G16_UNORM and R16G16_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R16. For chrominance data view, the mapping to the view channel is U-&gt;R16 and V-&gt;G16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. The first (SysMemPitch * height) bytes are the Y plane, the remaining (SysMemPitch * (height / 2)) bytes are the UV plane. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.P016">
            <summary>
            <para>16-bit per channel planar YUV 4:2:0 video resource format. Valid luminance data view formats for this video resource format are R16_UNORM and R16_UINT. Valid chrominance data view formats (width and height are each 1/2 of luminance view) for this video resource format are R16G16_UNORM and R16G16_UINT. For UAVs, an additional valid chrominance data view format is R32_UINT. By using R32_UINT for UAVs, you can both read and write as opposed to just write for R16G16_UNORM and R16G16_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R16. For chrominance data view, the mapping to the view channel is U-&gt;R16 and V-&gt;G16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. The first (SysMemPitch * height) bytes are the Y plane, the remaining (SysMemPitch * (height / 2)) bytes are the UV plane. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format._420_OPAQUE">
            <summary>
            <para>8-bit per channel planar YUV 4:2:0 video resource format. This format is subsampled where each pixel has its own Y value, but each 2x2 pixel block shares a single U and V value. The runtime requires that the width and height of all resources that are created with this format are multiples of 2. The runtime also requires that the left, right, top, and bottom members of any RECT that are used for this format are multiples of 2. This format differs from NV12 in that the layout of the data within the resource is completely opaque to applications. Applications cannot use the CPU to map the resource and then access the data within the resource. You cannot use shaders with this format. Because of this behavior, legacy hardware that supports a non-NV12 4:2:0 layout (for example, YV12, and so on) can be used. Also, new hardware that has a 4:2:0 implementation better than NV12 can be used when the application does not need the data to be in a standard layout. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width and height must be even. Direct3D 11 staging resources and initData parameters for this format use (rowPitch * (height + (height / 2))) bytes. An app using the YUY 4:2:0 formats  must map the luma (Y) plane separately from the chroma (UV) planes. Developers do this by calling <a href="https://docs.microsoft.com/windows/desktop/api/d3d12/nf-d3d12-id3d12device-createshaderresourceview">ID3D12Device::CreateShaderResourceView</a> twice for the same texture and passing in 1-channel and 2-channel formats. Passing in a 1-channel format compatible with the Y plane maps only the Y plane. Passing in a 2-channel format compatible with the UV planes (together) maps only the U and V planes as a single resource view. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.YUY2">
            <summary>
            <para>Most common YUV 4:2:2 video resource format. Valid view formats for this video resource format are R8G8B8A8_UNORM and R8G8B8A8_UINT. For UAVs, an additional valid view format is R32_UINT. By using R32_UINT for UAVs, you can both read and write as opposed to just write for R8G8B8A8_UNORM and R8G8B8A8_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is Y0-&gt;R8, U0-&gt;G8, Y1-&gt;B8, and V0-&gt;A8. A unique valid view format for this video resource format is R8G8_B8G8_UNORM. With this view format, the width of the view appears to be twice what the R8G8B8A8_UNORM or R8G8B8A8_UINT view would be when hardware reconstructs RGBA automatically on read and before filtering.  This Direct3D hardware behavior is legacy and is likely not useful any more. With this view format, the mapping to the view channel is Y0-&gt;R8, U0-&gt; G8[0], Y1-&gt;B8, and V0-&gt; G8[1]. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be even. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.Y210">
            <summary>
            <para>10-bit per channel packed YUV 4:2:2 video resource format. Valid view formats for this video resource format are R16G16B16A16_UNORM and R16G16B16A16_UINT. The runtime does not enforce whether the lowest 6 bits are 0 (given that this video resource format is a 10-bit format that uses 16 bits). If required, application shader code would have to enforce this manually.  From the runtime's point of view, Y210 is no different than Y216. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is Y0-&gt;R16, U-&gt;G16, Y1-&gt;B16, and V-&gt;A16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be even. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.Y216">
            <summary>
            <para>16-bit per channel packed YUV 4:2:2 video resource format. Valid view formats for this video resource format are R16G16B16A16_UNORM and R16G16B16A16_UINT. Supported view types are SRV and UAV. One view provides a straightforward mapping of the entire surface. The mapping to the view channel is Y0-&gt;R16, U-&gt;G16, Y1-&gt;B16, and V-&gt;A16. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be even. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.NV11">
            <summary>
            <para>Most common planar YUV 4:1:1 video resource format. Valid luminance data view formats for this video resource format are R8_UNORM and R8_UINT. Valid chrominance data view formats (width and height are each 1/4 of luminance view) for this video resource format are R8G8_UNORM and R8G8_UINT. Supported view types are SRV, RTV, and UAV. For luminance data view, the mapping to the view channel is Y-&gt;R8. For chrominance data view, the mapping to the view channel is U-&gt;R8 and V-&gt;G8. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. Width must be a multiple of 4. Direct3D11 staging resources and initData parameters for this format use (rowPitch * height * 2) bytes. The first (SysMemPitch * height) bytes are the Y plane, the next ((SysMemPitch / 2) * height) bytes are the UV plane, and the remainder is padding. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.AI44">
            <summary>
            <para>4-bit palletized YUV format that is commonly used for DVD subpicture. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.IA44">
            <summary>
            <para>4-bit palletized YUV format that is commonly used for DVD subpicture. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.P8">
            <summary>
            <para>8-bit palletized format that is used for palletized RGB data when the processor processes ISDB-T data and for palletized YUV data when the processor processes BluRay data. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.A8P8">
            <summary>
            <para>8-bit palletized format with 8 bits of alpha that is used for palletized YUV data when the processor processes BluRay data. For more info about YUV formats for video rendering, see <a href="https://docs.microsoft.com/windows/desktop/medfound/recommended-8-bit-yuv-formats-for-video-rendering">Recommended 8-Bit YUV Formats for Video Rendering</a>. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.B4G4R4A4_UNORM">
            <summary>
            <para>A four-component, 16-bit unsigned-normalized integer format that supports 4 bits for each channel including alpha. <b>Direct3D 11.1:  </b>This value is not supported until Windows 8.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.P208">
            <summary>A video format; an 8-bit version of a hybrid planar 4:2:2 format.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.V208">
            <summary>An 8 bit YCbCrA 4:4 rendering format.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.V408">
            <summary>An 8 bit YCbCrA 4:4:4:4 rendering format.</summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.SAMPLER_FEEDBACK_MIN_MIP_OPAQUE">
            <summary>
            For information about sampler feedback please see the 
            <a href="https://microsoft.github.io/DirectX-Specs/d3d/SamplerFeedback.html">article by Microsoft</a> ...
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE">
            <summary>
            For information about sampler feedback please see the 
            <a href="https://microsoft.github.io/DirectX-Specs/d3d/SamplerFeedback.html">article by Microsoft</a> ...
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.Format.FORCE_UINT">
            <summary>
            <para>Forces this enumeration to compile to 32 bits in size. Without this value, some compilers would allow this enumeration to compile to a size other than 32 bits. This value is not used.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgiformat/ne-dxgiformat-dxgi_format#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.XTensions.DXGIXTensions">
            <summary>
            Contains DXGI related extension methods
            </summary>
            <summary>
            Contains DXGI related extension methods
            </summary>
        </member>
        <member name="M:DXSharp.DXGI.XTensions.DXGIXTensions.IsAlive(DXSharp.DXGI.IUnknown)">
            <summary>
            Indicates if this IUknown COM interface is alive
            </summary>
            <param name="comObj">This IUnknown instance</param>
            <returns>True if alive, otherwise false</returns>
        </member>
        <member name="T:DXSharp.DXGI.FactoryCreateFlags">
            <summary>
            Valid values include the DXGI_CREATE_FACTORY_DEBUG (0x01) flag, and zero.
            </summary>
            <remarks>
            <b><h3>Note:</h3></b> 
            This flag will be set by the D3D runtime if:
            The system creates an implicit factory during device creation.
            The D3D11_CREATE_DEVICE_DEBUG flag is specified during device creation, 
            for example using D3D11CreateDevice (or the swapchain method, or the 
            Direct3D 10 equivalents).
            </remarks>
        </member>
        <member name="F:DXSharp.DXGI.FactoryCreateFlags.None">
            <summary>
            No flags
            </summary>
        </member>
        <member name="F:DXSharp.DXGI.FactoryCreateFlags.DEBUG">
            <summary>
            Enable debug layer
            </summary>
        </member>
        <member name="T:DXSharp.DXGI.DXGIFunctions">
            <summary>
            Defines the DXGI-related functions of the Windows SDK
            </summary>
            <remarks>
            See the documentation for the 
            <a href="https://learn.microsoft.com/en-us/windows/win32/direct3ddxgi/d3d10-graphics-reference-dxgi-functions">DXGI functions</a> 
            for a complete list with additional information
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.DXGIFunctions.CreateDXGIFactory``1(Windows.Win32.Foundation.HRESULT@)">
            <summary>
            Creates a DXGIFactoryX COM object you can use to generate other DXGI objects
            </summary>
            <typeparam name="T">Type of DXGIFactoryX</typeparam>
            <param name="hr">HRESULT to capture the result and indicate success/failure</param>
            <returns>A DXGIFactoryX object  of specified type T, or potentially null</returns>
        </member>
        <member name="M:DXSharp.DXGI.DXGIFunctions.CreateDXGIFactory``1">
            <summary>
            Creates a DXGIFactoryX COM object you can use to generate other DXGI objects
            </summary>
            <typeparam name="T">Type of DXGIFactoryX</typeparam>
            <returns>A DXGIFactoryX object  of specified type T, or potentially null</returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if the call fails and contains detailed error information</exception>
        </member>
        <member name="M:DXSharp.DXGI.DXGIFunctions.CreateDXGIFactory1``1(Windows.Win32.Foundation.HRESULT@)">
            <summary>
            Creates a DXGIFactoryX COM object you can use to generate other DXGI objects
            </summary>
            <typeparam name="T">Type of DXGIFactoryX</typeparam>
            <param name="hr">HRESULT to capture the result and indicate success/failure</param>
            <returns>A DXGIFactoryX object  of specified type T, or potentially null</returns>
        </member>
        <member name="M:DXSharp.DXGI.DXGIFunctions.CreateDXGIFactory1``1">
            <summary>
            Creates a DXGIFactoryX COM object you can use to generate other DXGI objects
            </summary>
            <typeparam name="T">Type of DXGIFactoryX</typeparam>
            <returns>A DXGIFactoryX object  of specified type T, or potentially null</returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">Thrown if the call fails and contains detailed error information</exception>
        </member>
        <member name="M:DXSharp.DXGI.DXGIFunctions.CreateDXGIFactory2``1(DXSharp.DXGI.FactoryCreateFlags,Windows.Win32.Foundation.HRESULT@)">
            <summary>
            Creates a DXGIFactoryX COM object you can use to generate other DXGI objects
            </summary>
            <typeparam name="T">Type of DXGIFactoryX</typeparam>
            <param name="Flags">Creation flags</param>
            <param name="hr">HRESULT to capture the result and indicate success/failure</param>
            <returns>A DXGIFactoryX object  of specified type T, or potentially null</returns>
        </member>
        <member name="M:DXSharp.DXGI.DXGIFunctions.CreateDXGIFactory2``1(DXSharp.DXGI.FactoryCreateFlags)">
            <summary>
            Creates a DXGIFactoryX COM object you can use to generate other DXGI objects
            </summary>
            <typeparam name="T">Type of DXGIFactoryX</typeparam>
            <param name="Flags">Creation flags</param>
            <returns>A DXGIFactoryX object  of specified type T, or potentially null</returns>
        </member>
        <member name="T:DXSharp.DXGI.IObject">
            <summary>
            Wrapper interface for the native IDXGIObject COM interface
            </summary>
        </member>
        <member name="M:DXSharp.DXGI.IObject.SetPrivateData``1(System.UInt32,System.IntPtr)">
            <summary>
            Sets application-defined data to the object and associates that data with a GUID.
            </summary>
            <param name="DataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of the object's data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const void*</b> A pointer to the object's data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <typeparam name="T">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> A GUID that identifies the data.Use this GUID in a call to<a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiobject-getprivatedata"> GetPrivateData</a> to get the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </typeparam>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.IObject.SetPrivateDataInterface``1(``0)">
            <summary>Set an interface in the object's private data.</summary>
            <param name="Name">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> A GUID identifying the interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pUnknown">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>*</b> The interface to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedatainterface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.IObject.GetPrivateData(System.UInt32@,System.IntPtr)">
            <summary>Get a pointer to the object's data.</summary>
            <param name="Name">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> A GUID identifying the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The size of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>void*</b> Pointer to the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.IObject.GetParent(System.Guid@,System.Object@)">
            <summary>Gets the parent of the object.</summary>
            <param name="riid">
            <para>Type: <b>REFIID</b> The ID of the requested interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getparent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppParent">
            <para>Type: <b>void**</b> The address of a pointer to the parent object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getparent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getparent">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.Object.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:DXSharp.DXGI.Object.Pointer">
            <summary>
            Gets the pointer to the underyling COM interface
            </summary>
        </member>
        <member name="M:DXSharp.DXGI.Object.Dispose">
            <summary>
            Diposes of this instance and frees its native COM resources
            </summary>
        </member>
        <member name="M:DXSharp.DXGI.IDXObject`1.SetPrivateData``1(System.UInt32,System.IntPtr)">
            <summary>Sets application-defined data to the object and associates that data with a GUID.</summary>
            <param name="Name">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> A GUID that identifies the data. Use this GUID in a call to <a href="https://docs.microsoft.com/windows/desktop/api/dxgi/nf-dxgi-idxgiobject-getprivatedata">GetPrivateData</a> to get the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="DataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a></b> The size of the object's data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>const void*</b> A pointer to the object's data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.IDXObject`1.SetPrivateDataInterface``1(``0)">
            <summary>Set an interface in the object's private data.</summary>
            <param name="Name">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> A GUID identifying the interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pUnknown">
            <para>Type: <b>const <a href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</a>*</b> The interface to set.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedatainterface#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-setprivatedatainterface">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.IDXObject`1.GetPrivateData``1(System.UInt32@,System.IntPtr)">
            <summary>Get a pointer to the object's data.</summary>
            <param name="Name">
            <para>Type: <b><a href="https://docs.microsoft.com/openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b> A GUID identifying the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pDataSize">
            <para>Type: <b><a href="https://docs.microsoft.com/windows/desktop/WinProg/windows-data-types">UINT</a>*</b> The size of the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pData">
            <para>Type: <b>void*</b> Pointer to the data.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the following <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getprivatedata">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:DXSharp.DXGI.IDXObject`1.GetParent``1(``0@)">
            <summary>Gets the parent of the object.</summary>
            <param name="riid">
            <para>Type: <b>REFIID</b> The ID of the requested interface.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getparent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="ppParent">
            <para>Type: <b>void**</b> The address of a pointer to the parent object.</para>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getparent#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b><a href="/windows/win32/com/structure-of-com-error-codes">HRESULT</a></b> Returns one of the <a href="/windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> values.</para>
            </returns>
            <remarks>
            <para><see href="https://docs.microsoft.com/windows/win32/api//dxgi/nf-dxgi-idxgiobject-getparent">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:DXSharp.DXGI.Object`1">
            <summary>
            The DXGI.Object&lt;T&gt; class is an abstract wrapper class around the 
            <a href="https://learn.microsoft.com/en-us/windows/win32/api/dxgi/nn-dxgi-idxgiobject">IDXGIObject</a> interface.
            <para>
            The IDXGIObject interface is a base interface for all DXGI objects; 
            IDXGIObject supports associating caller-defined (private data) with 
            an object and retrieval of an interface to the parent object.
            </para>
            </summary>
            <typeparam name="T">Type of IDXGIObject interface wrapped by this class</typeparam>
        </member>
        <member name="T:DXSharp.GPUVendor">
            <summary>
            Enumeration representing the major GPU vendors
            </summary>
        </member>
        <member name="T:DXSharp.LibResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DXSharp.LibResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DXSharp.LibResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DXSharp.LibResources.DXSharp_ICON_512">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:DXSharp.LibResources.DXSharp_Logo_00">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DXSharp.LibResources.DXSharp_Logo_00_512">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DXSharp.LibResources.LibraryName">
            <summary>
              Looks up a localized string similar to DXSharp.
            </summary>
        </member>
        <member name="T:DXSharp.PerformanceException">
            <summary>
            Type of exception thrown when something happens which can be
            deterimental to performance.
            </summary>
            <remarks>
            <b>NOTE:</b> Generally, PerformanceExceptions will only ever be thrown by
            the Debug assembly of DXSharp except in some rare situations where something 
            may halt the program indefinitely or cause other serious problems.
            </remarks>
        </member>
        <member name="M:DXSharp.PerformanceException.#ctor(System.String)">
            <summary>
            Creates a new PerformanceException with the specified exception message
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:DXSharp.PerformanceException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new PerformanceException with the specified exception message
            and inner exception info
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="T:DXSharp.Vector4D">
            <summary>
            A 4-dimensional double-precision floating-point vector with
            SIMD-enabled arithmetic and operations
            </summary>
            <remarks>
            <h3><b>NOTE:</b></h3>
            <para>
            This structure type is only available for .NET 7 for Windows
            </para>
            </remarks>
        </member>
        <member name="F:DXSharp.Vector4D.nITEMS">
            <summary>
            Number of items in the vector
            </summary>
        </member>
        <member name="F:DXSharp.Vector4D.Zero">
            <summary>
            A vector with all zero values
            </summary>
        </member>
        <member name="F:DXSharp.Vector4D.One">
            <summary>
            A vector with all 1.0 values
            </summary>
        </member>
        <member name="F:DXSharp.Vector4D.UnitX">
            <summary>
            The Unit X vector (right)
            </summary>
        </member>
        <member name="F:DXSharp.Vector4D.UnitY">
            <summary>
            The Unit Y vector (up) 
            </summary>
        </member>
        <member name="F:DXSharp.Vector4D.UnitZ">
            <summary>
            The Unit Z vector (forward) 
            </summary>
        </member>
        <member name="F:DXSharp.Vector4D.UnitW">
            <summary>
            The Unit W vector (forward) 
            </summary>
        </member>
        <member name="M:DXSharp.Vector4D.#ctor(System.Runtime.Intrinsics.Vector256{System.Double})">
            <summary>
            Creates a new Vector4D
            </summary>
            <param name="vec">A System.Numerics.Vector256</param>
        </member>
        <member name="M:DXSharp.Vector4D.#ctor(System.Runtime.Intrinsics.Vector128{System.Double},System.Runtime.Intrinsics.Vector128{System.Double})">
            <summary>
            Creates a new Vector4D
            </summary>
            <param name="lower">A System.Numerics.Vector128 for the lower memory chunk</param>
            <param name="upper">A System.Numerics.Vector128 for the upper memory chunk</param>
        </member>
        <member name="M:DXSharp.Vector4D.#ctor(System.Numerics.Vector4)">
            <summary>
            Creates a new Vector4D
            </summary>
            <param name="vec">A System.Numerics.Vector4</param>
            <remarks>
            The Vector4 will be expanded to a double-precision vector
            </remarks>
        </member>
        <member name="M:DXSharp.Vector4D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new Vector4D
            </summary>
            <param name="x">The X coordinate/value</param>
            <param name="y">The Y coordinate/value</param>
            <param name="z">The Z coordinate/value</param>
            <param name="w">The W coordinate/value</param>
        </member>
        <member name="M:DXSharp.Vector4D.#ctor(System.ValueTuple{System.Double,System.Double})">
            <summary>
            Creates a new Vector4D
            </summary>
            <param name="values">Tuple of the X and Y values</param>
        </member>
        <member name="M:DXSharp.Vector4D.#ctor(System.ValueTuple{System.Double,System.Double,System.Double})">
            <summary>
            Creates a new Vector4D
            </summary>
            <param name="values">Tuple of the X, Y and Z values</param>
        </member>
        <member name="M:DXSharp.Vector4D.#ctor(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})">
            <summary>
            Creates a new Vector4D
            </summary>
            <param name="values">Tuple of the X, Y, Z and W values</param>
        </member>
        <member name="P:DXSharp.Vector4D.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index
            </summary>
            <param name="index">Index/offset</param>
            <returns>Element of the vector</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            Thrown if the given index is out of range
            </exception>
        </member>
        <member name="P:DXSharp.Vector4D.X">
            <summary>
            The X component of the vector
            </summary>
        </member>
        <member name="P:DXSharp.Vector4D.Y">
            <summary>
            The Y component of the vector
            </summary>
        </member>
        <member name="P:DXSharp.Vector4D.Z">
            <summary>
            The Z component of the vector
            </summary>
        </member>
        <member name="P:DXSharp.Vector4D.W">
            <summary>
            The W component of the vector
            </summary>
        </member>
        <member name="M:DXSharp.Vector4D.ToString">
            <inheritdoc />
        </member>
        <member name="M:DXSharp.Vector4D.ToString(System.String,System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:DXSharp.Vector4D.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DXSharp.Vector4D.Equals(DXSharp.Vector4D)">
            <inheritdoc />
        </member>
        <member name="M:DXSharp.Vector4D.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:DXSharp.Vector2">
            <summary>
            A 2D Euclidean vector.
            </summary>
        </member>
        <member name="F:DXSharp.Vector2.UnitX">
            <summary>
            The Unit X vector (right)
            </summary>
        </member>
        <member name="F:DXSharp.Vector2.UnitY">
            <summary>
            The Unit Y vector (up) 
            </summary>
        </member>
        <member name="M:DXSharp.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Creates a new 2D vector
            </summary>
            <param name="x">X-coordinate</param>
            <param name="y">Y-coordinate</param>
        </member>
        <member name="M:DXSharp.Vector2.#ctor(System.Numerics.Vector2)">
            <summary>
            Creates a new 2D vector
            </summary>
            <param name="vec">A System.Numerics.Vector2 value</param>
        </member>
        <member name="P:DXSharp.Vector2.X">
            <summary>
            Gets or sets the X component of the vector
            </summary>
        </member>
        <member name="P:DXSharp.Vector2.Y">
            <summary>
            Gets or sets the Y component of the vector
            </summary>
        </member>
        <member name="M:DXSharp.Vector2.ToString">
            <summary>
            Gets the string representation of this vector value
            </summary>
            <returns>Vector in string form</returns>
        </member>
        <member name="M:DXSharp.Vector2.Equals(System.Object)">
            <summary>
            Indicates whether this vector and the specified object are equal
            </summary>
            <param name="obj">Object to compare to</param>
            <returns>True if equal, otherwise false</returns>
        </member>
        <member name="M:DXSharp.Vector2.GetHashCode">
            <summary>
            Returns the hash code this this vector
            </summary>
            <returns>32-bit integer hash code</returns>
        </member>
        <member name="T:DXSharp.Vector3">
            <summary>
            A 3D Euclidean vector.
            </summary>
        </member>
        <member name="F:DXSharp.Vector3.UnitX">
            <summary>
            The Unit X vector (right)
            </summary>
        </member>
        <member name="F:DXSharp.Vector3.UnitY">
            <summary>
            The Unit Y vector (up) 
            </summary>
        </member>
        <member name="F:DXSharp.Vector3.UnitZ">
            <summary>
            The Unit Z vector (forward) 
            </summary>
        </member>
        <member name="M:DXSharp.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new 3D vector
            </summary>
            <param name="x">X-coordinate</param>
            <param name="y">Y-coordinate</param>
            <param name="z">Z-coordinate</param>
        </member>
        <member name="M:DXSharp.Vector3.#ctor(System.Numerics.Vector3)">
            <summary>
            Creates a new 3D vector
            </summary>
            <param name="vec">A System.Numerics.Vector3 value</param>
        </member>
        <member name="M:DXSharp.Vector3.#ctor(DXSharp.Vector2)">
            <summary>
            Creates a new 3D vector
            </summary>
            <param name="vec">A Vector2 value</param>
        </member>
        <member name="M:DXSharp.Vector3.#ctor(System.Numerics.Vector2)">
            <summary>
            Creates a new 3D vector
            </summary>
            <param name="vec">A System.Numerics.Vector2 value</param>
        </member>
        <member name="P:DXSharp.Vector3.X">
            <summary>
            Gets or sets the X component of the vector
            </summary>
        </member>
        <member name="P:DXSharp.Vector3.Y">
            <summary>
            Gets or sets the Y component of the vector
            </summary>
        </member>
        <member name="P:DXSharp.Vector3.Z">
            <summary>
            Gets or sets the Z component of the vector
            </summary>
        </member>
        <member name="M:DXSharp.Vector3.ToString">
            <summary>
            Gets the string representation of this vector value
            </summary>
            <returns>Vector in string form</returns>
        </member>
        <member name="M:DXSharp.Vector3.ToString(System.String,System.IFormatProvider)">
            <inheritdoc />
        </member>
        <member name="M:DXSharp.Vector3.Equals(System.Object)">
            <summary>
            Indicates whether this instance and the specified object are equal
            </summary>
            <param name="obj">Object to compare to</param>
            <returns>True if equal, otherwise false</returns>
        </member>
        <member name="M:DXSharp.Vector3.GetHashCode">
            <summary>
            Returns the hash code this this vector
            </summary>
            <returns>32-bit integer hash code</returns>
        </member>
        <member name="M:DXSharp.Vector3.Equals(DXSharp.Vector3)">
            <summary>
            Determines if this vector and the specified vector are equal
            </summary>
            <param name="other">Vector to compare to</param>
            <returns>True if equal, otherwise false</returns>
        </member>
        <member name="T:DXSharp.Viewport">
            <summary>
            Represents a graphics viewport for DirectX
            </summary>
            <remarks>
            <para><h3><b>NOTE:</b></h3></para> 
            <para>D3D11 and D3D12 each define their own viewport structures:</para>
            <para><a href="https://learn.microsoft.com/en-us/windows/win32/api/d3d12/ns-d3d12-d3d12_viewport">D3D12_VIEWPORT</a></para>
            <para><a href="https://learn.microsoft.com/en-us/windows/win32/api/d3d11/ns-d3d11-d3d11_viewport">D3D11_VIEWPORT</a></para>
            
            As these structures have identical definitions with matching fields, C#/.NET projections
            of DirectX APIs are using this standardized viewport struct instead of maintaining two
            identical structures with different names.
            </remarks>
        </member>
        <member name="M:DXSharp.Viewport.#ctor">
            <summary>
            Creates a new Viewport structure
            </summary>
        </member>
        <member name="M:DXSharp.Viewport.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new Viewport structure
            </summary>
            <param name="topLeftX">Top-left X coordinate</param>
            <param name="topLeftY">Top-left Y coordinate</param>
            <param name="width">Width of viewport</param>
            <param name="height">Height of viewport</param>
            <param name="minDepth">Minimum depth value (between 0.0 and 1.0)</param>
            <param name="maxDepth">Maximum depth value (between 0.0 and 1.0)</param>
        </member>
        <member name="M:DXSharp.Viewport.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new Viewport structure
            </summary>
            <param name="width">Width of viewport</param>
            <param name="height">Height of viewport</param>
            <param name="minDepth">Minimum depth value (between 0.0 and 1.0)</param>
            <param name="maxDepth">Maximum depth value (between 0.0 and 1.0)</param>
            <remarks>
            Assumes 0.0, 0.0 for the top-left X and Y coordinates
            </remarks>
        </member>
        <member name="P:DXSharp.Viewport.TopLeftX">
            <summary>
            The top-left X coordinate
            </summary>
        </member>
        <member name="P:DXSharp.Viewport.TopLeftY">
            <summary>
            The top-left Y coordinate
            </summary>
        </member>
        <member name="P:DXSharp.Viewport.Width">
            <summary>
            The width of the viewport
            </summary>
        </member>
        <member name="P:DXSharp.Viewport.Height">
            <summary>
            The height of the viewport
            </summary>
        </member>
        <member name="P:DXSharp.Viewport.MinDepth">
            <summary>
            The minimum depth value (between 0.0 and 1.0)
            </summary>
        </member>
        <member name="P:DXSharp.Viewport.MaxDepth">
            <summary>
            The maximum depth value (between 0.0 and 1.0)
            </summary>
        </member>
        <member name="P:DXSharp.Windows.COM.COMBaseObject`1.Pointer">
            <inheritdoc/>
        </member>
        <member name="P:DXSharp.Windows.COM.COMBaseObject`1.COMPointer">
            <summary>
            A ComPtr "smart pointer" to a native COM interface
            </summary>
        </member>
        <member name="P:DXSharp.Windows.COM.COMBaseObject`1.Disposed">
            <inheritdoc/>
        </member>
        <member name="M:DXSharp.Windows.COM.COMBaseObject`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:DXSharp.Windows.COM.COMBaseObject`1.DisposeAsync">
            <summary>
            Asynchronously disposes of this instance's resources
            </summary>
            <returns>A ValueTask</returns>
        </member>
        <member name="T:DXSharp.Windows.COM.ComPtr">
            <summary>
            Base class of COM object pointers which provides a somewhat
            similar set of functionality to the native 
            <a href="https://learn.microsoft.com/en-us/cpp/cppcx/wrl/comptr-class?view=msvc-170"><c>wrl::ComPtr&lt;T&gt;</c></a> template 
            class used in C++ COM programming, like DirectX.
            </summary>
            <remarks>
            The <c>ComPtr</c> type is a type of "smart pointer" which holds the actual memory address of a COM object
            and helps automatically relinquish native resources when it is <i>disposed</i> or goes out of scope. It 
            also provides methods for reference counting and COM interface management functionality.
            </remarks>
        </member>
        <member name="F:DXSharp.Windows.COM.ComPtr.GUID_IUNKNOWN">
            <summary>
            The GUID of the IUnknown COM interface
            </summary>
        </member>
        <member name="P:DXSharp.Windows.COM.ComPtr.Interface">
            <summary>
            The underlying COM interface
            </summary>
        </member>
        <member name="P:DXSharp.Windows.COM.ComPtr.Pointer">
            <summary>
            Pointer to the underlying COM interface
            </summary>
        </member>
        <member name="P:DXSharp.Windows.COM.ComPtr.GUID">
            <summary>
            The GUID of the COM interface
            </summary>
        </member>
        <member name="P:DXSharp.Windows.COM.ComPtr.nRefs">
            <summary>
            Counts the number of extra references obtained to
            this COM object interface
            </summary>
        </member>
        <member name="P:DXSharp.Windows.COM.ComPtr.Disposed">
            <summary>
            Indicates if this instance has been disposed
            and released its resources and memory
            </summary>
        </member>
        <member name="M:DXSharp.Windows.COM.ComPtr.Dispose(System.Boolean)">
            <summary>
            Disposes of this instance's resources
            </summary>
            <param name="disposing">
            Indicates if managed resources should be
            disposed of from this call
            </param>
        </member>
        <member name="M:DXSharp.Windows.COM.ComPtr.Dispose">
            <summary>
            Releases native COM interface references so that they can be
            freed from memory when the reference count reaches zero.
            </summary>
        </member>
        <member name="M:DXSharp.Windows.COM.ComPtr.DisposeAsync">
            <summary>
            Asynchronously releases references to underlying native COM interfaces
            so that the memory can be freed when the reference count reaches zero.
            </summary>
            <returns>An async ValueTask</returns>
        </member>
        <member name="T:DXSharp.Windows.COM.ComPtr`1">
            <summary>
            Provides a set of functionality similar to the native 
            <a href="https://learn.microsoft.com/en-us/cpp/cppcx/wrl/comptr-class?view=msvc-170"><c>wrl::ComPtr&lt; <typeparamref name="T"/> &gt;</c></a> template.
            </summary>
            <remarks>
            The <c>ComPtr&lt; <typeparamref name="T"/> &gt;</c> type is a type of "smart pointer" which holds the actual memory address of a COM object
            and helps automatically relinquish native resources when it is <i>disposed</i> or goes out of scope. It 
            also provides methods for reference counting and COM interface management functionality.
            </remarks>
            <typeparam name="T">Type of COM interface</typeparam>
        </member>
        <member name="F:DXSharp.Windows.COM.ComPtr`1.RIID">
            <summary>
            The GUID of the type pointed to by the ComPtr
            </summary>
        </member>
        <member name="P:DXSharp.Windows.COM.ComPtr`1.Interface">
            <summary>
            The underlying COM interface
            </summary>
        </member>
        <member name="T:DXSharp.Windows.COM.IUnknown">
            <summary>
            Wrapper of the base IUnknown COM interface
            </summary>
            <remarks>
            More info on COM IUnknown interface can be found
            <a href="https://learn.microsoft.com/en-us/windows/win32/api/unknwn/nn-unknwn-iunknown">here</a>.
            </remarks>
        </member>
        <member name="P:DXSharp.Windows.COM.IUnknown.Pointer">
            <summary>
            Gets the address of the underlying IUnknown COM interface
            </summary>
        </member>
        <member name="P:DXSharp.Windows.COM.IUnknown.Disposed">
            <summary>
            Indicates if this instance has disposed of
            its native COM resources
            </summary>
        </member>
        <member name="M:DXSharp.Windows.COM.IUnknown.AddRef">
            <summary>
            Increments the reference count for an interface pointer to a COM object. 
            You should call this method whenever you make a copy of an interface pointer.
            </summary>
            <returns>Updated reference count</returns>
        </member>
        <member name="M:DXSharp.Windows.COM.IUnknown.Release">
            <summary>
            Decrements the reference count for an interface on a COM object.
            </summary>
            <returns>Updated reference count</returns>
        </member>
        <member name="M:DXSharp.Windows.COM.IUnknown.QueryInterface``1(``0@)">
            <summary>
            Retrieves reference to the supported interfaces on an object.
            </summary>
            <typeparam name="T">Type of COM interface</typeparam>
            <param name="ppvObject">object to hold COM interface reference</param>
            <returns>A Win32 HRESULT error code indicating success or failure</returns>
            <remarks>
            Wrapper of native <a href="https://learn.microsoft.com/en-us/windows/win32/api/unknwn/nf-unknwn-iunknown-queryinterface(refiid_void)">QueryInterface</a>(REFIID,void) function.
            </remarks>
        </member>
        <member name="T:DXSharp.Windows.RenderForm">
            <summary>
            Default Rendering Form.
            </summary>
            <remarks>
            <para><h3><b>NOTE:</b></h3></para>
            This code was adapter from SharpDX project's SharpDX.Windows.RenderForm type.
            It is provided as a helper class, and for its familiarity and usefulness.
            </remarks>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DXSharp.Windows.RenderForm"/> class.
            </summary>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DXSharp.Windows.RenderForm"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="E:DXSharp.Windows.RenderForm.AppActivated">
            <summary>
            Occurs when [app activated].
            </summary>
        </member>
        <member name="E:DXSharp.Windows.RenderForm.AppDeactivated">
            <summary>
            Occurs when [app deactivated].
            </summary>
        </member>
        <member name="E:DXSharp.Windows.RenderForm.MonitorChanged">
            <summary>
            Occurs when [monitor changed].
            </summary>
        </member>
        <member name="E:DXSharp.Windows.RenderForm.PauseRendering">
            <summary>
            Occurs when [pause rendering].
            </summary>
        </member>
        <member name="E:DXSharp.Windows.RenderForm.ResumeRendering">
            <summary>
            Occurs when [resume rendering].
            </summary>
        </member>
        <member name="E:DXSharp.Windows.RenderForm.Screensaver">
            <summary>
            Occurs when [screensaver].
            </summary>
        </member>
        <member name="E:DXSharp.Windows.RenderForm.SystemResume">
            <summary>
            Occurs when [system resume].
            </summary>
        </member>
        <member name="E:DXSharp.Windows.RenderForm.SystemSuspend">
            <summary>
            Occurs when [system suspend].
            </summary>
        </member>
        <member name="E:DXSharp.Windows.RenderForm.UserResized">
            <summary>
            Occurs when [user resized].
            </summary>
        </member>
        <member name="P:DXSharp.Windows.RenderForm.AllowUserResizing">
            <summary>
            Gets or sets a value indicating whether this form can be resized by the user. See remarks.
            </summary>
            <remarks>
            This property alters <see cref="P:System.Windows.Forms.Form.FormBorderStyle"/>, 
            for <c>true</c> value it is <see cref="F:System.Windows.Forms.FormBorderStyle.Sizable"/>, 
            for <c>false</c> - <see cref="F:System.Windows.Forms.FormBorderStyle.FixedSingle"/>.
            </remarks>
            <value><c>true</c> if this form can be resized by the user (by default); otherwise, <c>false</c>.</value>
        </member>
        <member name="P:DXSharp.Windows.RenderForm.IsFullscreen">
            <summary>
            Gets or sets a value indicationg whether the current render form is in fullscreen mode. See remarks.
            </summary>
            <remarks>
            If Toolkit is used, this property is set automatically,
            otherwise user should maintain it himself as it affects the behavior of <see cref="P:DXSharp.Windows.RenderForm.AllowUserResizing"/> property.
            </remarks>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnResizeBegin(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.ResizeBegin"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnResizeEnd(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.ResizeEnd"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Load"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Override windows message loop handling.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnPauseRendering(System.EventArgs)">
            <summary>
            Raises the Pause Rendering event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnResumeRendering(System.EventArgs)">
            <summary>
            Raises the Resume Rendering event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnUserResized(System.EventArgs)">
            <summary>
            Raises the User resized event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnMonitorChanged(System.EventArgs)">
            <summary>
            Raises the MonitorChanged event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnAppActivated(System.EventArgs)">
            <summary>
            Raises the On App Activated event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnAppDeactivated(System.EventArgs)">
            <summary>
            Raises the App Deactivated event
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnSystemSuspend(System.EventArgs)">
            <summary>
            Raises the System Suspend event
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnSystemResume(System.EventArgs)">
            <summary>
            Raises the System Resume event
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DXSharp.Windows.RenderForm.OnScreensaver(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:Screensaver"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DXSharp.Windows.RenderLoop">
            <summary>
            RenderLoop provides a rendering loop infrastructure. See remarks for usage. 
            </summary>
            <remarks>
            Use static <see cref="!:Run(System.Windows.Forms.Control,RenderCallback)"/>  
            method to directly use a renderloop with a render callback or use your own loop:
            <code>
            control.Show();
            using (var loop = new RenderLoop(control))
            {
                while (loop.NextFrame())
                {
                   // Perform draw operations here.
                }
            }
            </code>
            Note that the main control can be changed at anytime inside the loop.
            
            /// <para><b><h3>NOTE:</h3></b></para>
            <para>
            This is an adaptation from the classic SharpDX.Windows.RenderLoop
            provided as a helper class for its convenience and familiarity. It can be used along with
            RenderForms and WinForms and potentially a native Win32 window.
            </para>
            </remarks>
        </member>
        <member name="T:DXSharp.Windows.RenderLoop.RenderCallback">
            <summary>
            Delegate for the rendering loop.
            </summary>
        </member>
        <member name="M:DXSharp.Windows.RenderLoop.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DXSharp.Windows.RenderLoop"/> class.
            </summary>
        </member>
        <member name="M:DXSharp.Windows.RenderLoop.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:DXSharp.Windows.RenderLoop"/> class.
            </summary>
        </member>
        <member name="P:DXSharp.Windows.RenderLoop.Control">
            <summary>
            Gets or sets the control to associate with the current render loop.
            </summary>
            <value>The control.</value>
            <exception cref="T:System.InvalidOperationException">Control is already disposed</exception>
        </member>
        <member name="P:DXSharp.Windows.RenderLoop.UseApplicationDoEvents">
            <summary>
            Gets or sets a value indicating whether the render loop should use the default <see cref="M:System.Windows.Forms.Application.DoEvents"/> instead of a custom window message loop lightweight for GC. Default is false.
            </summary>
            <value><c>true</c> if the render loop should use the default <see cref="M:System.Windows.Forms.Application.DoEvents"/> instead of a custom window message loop (default false); otherwise, <c>false</c>.</value>
            <remarks>By default, RenderLoop is using a custom window message loop that is more lightweight than <see cref="M:System.Windows.Forms.Application.DoEvents" /> to process windows event message. 
            Set this parameter to true to use the default <see cref="M:System.Windows.Forms.Application.DoEvents"/>.</remarks>
        </member>
        <member name="M:DXSharp.Windows.RenderLoop.NextFrame">
            <summary>
            Calls this method on each frame.
            </summary>
            <returns><c>true</c> if if the control is still active, <c>false</c> otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">An error occured </exception>
        </member>
        <member name="M:DXSharp.Windows.RenderLoop.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:DXSharp.Windows.RenderLoop.Run(System.Windows.Forms.ApplicationContext,DXSharp.Windows.RenderLoop.RenderCallback)">
            <summary>
            Runs the specified main loop in the specified context.
            </summary>
        </member>
        <member name="M:DXSharp.Windows.RenderLoop.Run(System.Windows.Forms.Control,DXSharp.Windows.RenderLoop.RenderCallback,System.Boolean)">
            <summary>
            Runs the specified main loop for the specified windows form.
            </summary>
            <param name="form">The form.</param>
            <param name="renderCallback">The rendering callback.</param>
            <param name="useApplicationDoEvents">if set to <c>true</c> indicating whether the render loop should use the default <see cref="M:System.Windows.Forms.Application.DoEvents"/> instead of a custom window message loop lightweight for GC. Default is false.</param>
            <exception cref="T:System.ArgumentNullException">form
            or
            renderCallback</exception>
        </member>
        <member name="P:DXSharp.Windows.RenderLoop.IsIdle">
            <summary>
            Gets a value indicating whether this instance is application idle.
            </summary>
            <value>
            	<c>true</c> if this instance is application idle; otherwise, <c>false</c>.
            </value>
        </member>
    </members>
</doc>
